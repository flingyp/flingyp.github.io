{
  "version": 3,
  "sources": ["../../../node_modules/.pnpm/vitepress-plugin-legend@1.0.4_jiti@1.21.7_markmap-common@0.18.9_typescript@5.4.3_yaml@2.8.0/node_modules/vitepress-plugin-legend/dist/diagram-5UYTHUR4-HCM9uTGi-fURArewE.js"],
  "sourcesContent": ["import { t as B } from \"./chunk-353BL4L5-xy92gJmW-DsDFHcGi.js\";\nimport { p as n, V as v, b as S, K as P, l as z, G as W, Y as F, y as w, a3 as E, Q as T, U as D, C as Y, D as A, N as $ } from \"./component-B8iEnLsv.js\";\nimport { S as K } from \"./mermaid-parser.core-B3YmDCTF-BpJhWbpr.js\";\nvar m = {\n  packet: []\n}, x = structuredClone(m), R = A.packet, G = /* @__PURE__ */ n(() => {\n  const t = w({\n    ...R,\n    ...Y().packet\n  });\n  return t.showBits && (t.paddingY += 10), t;\n}, \"getConfig\"), H = /* @__PURE__ */ n(() => x.packet, \"getPacket\"), L = /* @__PURE__ */ n((t) => {\n  t.length > 0 && x.packet.push(t);\n}, \"pushWord\"), U = /* @__PURE__ */ n(() => {\n  D(), x = structuredClone(m);\n}, \"clear\"), u = {\n  pushWord: L,\n  getPacket: H,\n  getConfig: G,\n  clear: U,\n  setAccTitle: F,\n  getAccTitle: W,\n  setDiagramTitle: z,\n  getDiagramTitle: P,\n  getAccDescription: S,\n  setAccDescription: v\n}, X = 1e4, q = /* @__PURE__ */ n((t) => {\n  B(t, u);\n  let e = -1, o = [], l = 1;\n  const { bitsPerRow: s } = u.getConfig();\n  for (let { start: a, end: r, bits: d, label: k } of t.blocks) {\n    if (a !== void 0 && r !== void 0 && r < a)\n      throw new Error(`Packet block ${a} - ${r} is invalid. End must be greater than start.`);\n    if (a ??= e + 1, a !== e + 1)\n      throw new Error(\n        `Packet block ${a} - ${r ?? a} is not contiguous. It should start from ${e + 1}.`\n      );\n    if (d === 0)\n      throw new Error(`Packet block ${a} is invalid. Cannot have a zero bit field.`);\n    for (r ??= a + (d ?? 1) - 1, d ??= r - a + 1, e = r, $.debug(`Packet block ${a} - ${e} with label ${k}`); o.length <= s + 1 && u.getPacket().length < X; ) {\n      const [c, b] = I({ start: a, end: r, bits: d, label: k }, l, s);\n      if (o.push(c), c.end + 1 === l * s && (u.pushWord(o), o = [], l++), !b)\n        break;\n      ({ start: a, end: r, bits: d, label: k } = b);\n    }\n  }\n  u.pushWord(o);\n}, \"populate\"), I = /* @__PURE__ */ n((t, e, o) => {\n  if (t.start === void 0)\n    throw new Error(\"start should have been set during first phase\");\n  if (t.end === void 0)\n    throw new Error(\"end should have been set during first phase\");\n  if (t.start > t.end)\n    throw new Error(`Block start ${t.start} is greater than block end ${t.end}.`);\n  if (t.end + 1 <= e * o)\n    return [t, void 0];\n  const l = e * o - 1, s = e * o;\n  return [\n    {\n      start: t.start,\n      end: l,\n      label: t.label,\n      bits: l - t.start\n    },\n    {\n      start: s,\n      end: t.end,\n      label: t.label,\n      bits: t.end - s\n    }\n  ];\n}, \"getNextFittingBlock\"), M = {\n  parse: /* @__PURE__ */ n(async (t) => {\n    const e = await K(\"packet\", t);\n    $.debug(e), q(e);\n  }, \"parse\")\n}, N = /* @__PURE__ */ n((t, e, o, l) => {\n  const s = l.db, a = s.getConfig(), { rowHeight: r, paddingY: d, bitWidth: k, bitsPerRow: c } = a, b = s.getPacket(), i = s.getDiagramTitle(), h = r + d, p = h * (b.length + 1) - (i ? 0 : r), g = k * c + 2, f = E(e);\n  f.attr(\"viewbox\", `0 0 ${g} ${p}`), T(f, p, g, a.useMaxWidth);\n  for (const [y, C] of b.entries())\n    Q(f, C, y, a);\n  f.append(\"text\").text(i).attr(\"x\", g / 2).attr(\"y\", p - h / 2).attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").attr(\"class\", \"packetTitle\");\n}, \"draw\"), Q = /* @__PURE__ */ n((t, e, o, { rowHeight: l, paddingX: s, paddingY: a, bitWidth: r, bitsPerRow: d, showBits: k }) => {\n  const c = t.append(\"g\"), b = o * (l + a) + a;\n  for (const i of e) {\n    const h = i.start % d * r + 1, p = (i.end - i.start + 1) * r - s;\n    if (c.append(\"rect\").attr(\"x\", h).attr(\"y\", b).attr(\"width\", p).attr(\"height\", l).attr(\"class\", \"packetBlock\"), c.append(\"text\").attr(\"x\", h + p / 2).attr(\"y\", b + l / 2).attr(\"class\", \"packetLabel\").attr(\"dominant-baseline\", \"middle\").attr(\"text-anchor\", \"middle\").text(i.label), !k)\n      continue;\n    const g = i.end === i.start, f = b - 2;\n    c.append(\"text\").attr(\"x\", h + (g ? p / 2 : 0)).attr(\"y\", f).attr(\"class\", \"packetByte start\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", g ? \"middle\" : \"start\").text(i.start), g || c.append(\"text\").attr(\"x\", h + p).attr(\"y\", f).attr(\"class\", \"packetByte end\").attr(\"dominant-baseline\", \"auto\").attr(\"text-anchor\", \"end\").text(i.end);\n  }\n}, \"drawWord\"), V = { draw: N }, j = {\n  byteFontSize: \"10px\",\n  startByteColor: \"black\",\n  endByteColor: \"black\",\n  labelColor: \"black\",\n  labelFontSize: \"12px\",\n  titleColor: \"black\",\n  titleFontSize: \"14px\",\n  blockStrokeColor: \"black\",\n  blockStrokeWidth: \"1\",\n  blockFillColor: \"#efefef\"\n}, J = /* @__PURE__ */ n(({ packet: t } = {}) => {\n  const e = w(j, t);\n  return `\n\t.packetByte {\n\t\tfont-size: ${e.byteFontSize};\n\t}\n\t.packetByte.start {\n\t\tfill: ${e.startByteColor};\n\t}\n\t.packetByte.end {\n\t\tfill: ${e.endByteColor};\n\t}\n\t.packetLabel {\n\t\tfill: ${e.labelColor};\n\t\tfont-size: ${e.labelFontSize};\n\t}\n\t.packetTitle {\n\t\tfill: ${e.titleColor};\n\t\tfont-size: ${e.titleFontSize};\n\t}\n\t.packetBlock {\n\t\tstroke: ${e.blockStrokeColor};\n\t\tstroke-width: ${e.blockStrokeWidth};\n\t\tfill: ${e.blockFillColor};\n\t}\n\t`;\n}, \"styles\"), tt = {\n  parser: M,\n  db: u,\n  renderer: V,\n  styles: J\n};\nexport {\n  tt as diagram\n};\n"],
  "mappings": "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",
  "names": ["i"]
}
