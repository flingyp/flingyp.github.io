import{_ as e,c as t,o,V as s}from"./chunks/framework.CK8YuoVq.js";const u=JSON.parse('{"title":"解除浏览器跨域方法","description":"","frontmatter":{},"headers":[],"relativePath":"posts/解除浏览器跨域方法.md","filePath":"posts/解除浏览器跨域方法.md","lastUpdated":1710228461000}'),r={name:"posts/解除浏览器跨域方法.md"},a=s('<h1 id="解除浏览器跨域方法" tabindex="-1">解除浏览器跨域方法 <a class="header-anchor" href="#解除浏览器跨域方法" aria-label="Permalink to &quot;解除浏览器跨域方法&quot;">​</a></h1><p>浏览器默认是开启安全模式，不允许跨域请求的。</p><p>可以通过非常手段来解除浏览器跨域限制，在平时开发调试中为了节省时间可以使用</p><ol><li><p>方法一：再创建一个 Chrome 快捷方式，在目标属性中追加 <code> --user-data-dir=&quot;C://Chrome dev session&quot; --disable-web-security --test-type --ignore-certificate-errors</code> 即可</p></li><li><p>方法二：使用 CMD 窗口，复制 Chrome 快捷方式中目标属性的值，然后追加 <code> --user-data-dir=&quot;C://Chrome dev session&quot; --disable-web-security --test-type --ignore-certificate-errors</code> 敲回车。就会打个一个新的 Chrome 页面</p></li></ol><p>注意：追加内容前面有空格</p>',5),_=[a];function i(c,d,p,n,l,h){return o(),t("div",null,_)}const f=e(r,[["render",i]]);export{u as __pageData,f as default};
