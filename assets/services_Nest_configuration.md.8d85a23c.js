import{_ as s,c as n,o as a,X as p}from"./chunks/framework.6e839c56.js";const E=JSON.parse('{"title":"服务常用配置","description":"","frontmatter":{},"headers":[],"relativePath":"services/Nest/configuration.md","filePath":"services/Nest/configuration.md"}'),l={name:"services/Nest/configuration.md"},o=p(`<h1 id="服务常用配置" tabindex="-1">服务常用配置 <a class="header-anchor" href="#服务常用配置" aria-label="Permalink to &quot;服务常用配置&quot;">​</a></h1><h2 id="全局日志打印中间件" tabindex="-1">全局日志打印中间件 <a class="header-anchor" href="#全局日志打印中间件" aria-label="Permalink to &quot;全局日志打印中间件&quot;">​</a></h2><p>我们可以在处理请求之前在控制台输出对应的请求信息，这时候就需要使用到我们的中间件了</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// logger-middleware.ts</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Injectable</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">NestMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Request</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Response</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">NextFunction</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">express</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#80A665;">logFormatMessage</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">req</span><span style="color:#666666;">: </span><span style="color:#5DA994;">Request</span><span style="color:#666666;">)</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#CB7676;">  const </span><span style="color:#BD976A;">logMessage</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">Method: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">req</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">method</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> </span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;"> Request original url: </span><span style="color:#666666;">\${</span></span>
<span class="line"><span style="color:#C98A7D;">    req</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">url</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> </span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;"> IP: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">req</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">ip</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> </span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;"> Query params: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#C98A7D;">    req</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">query</span></span>
<span class="line"><span style="color:#C98A7D;">  </span><span style="color:#666666;">)</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> </span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D;"> Body params: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#C98A7D;">req</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">body</span><span style="color:#666666;">)</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> </span><span style="color:#C99076;">\\n</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">  </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">logMessage</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">LoggerMiddleware</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Injectable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">LoggerMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">implements</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">NestMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">use</span><span style="color:#666666;">(</span><span style="color:#BD976A;">req</span><span style="color:#666666;">: </span><span style="color:#5DA994;">Request</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">res</span><span style="color:#666666;">: </span><span style="color:#5DA994;">Response</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">next</span><span style="color:#666666;">: </span><span style="color:#5DA994;">NextFunction</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">logFormatMessage</span><span style="color:#666666;">(</span><span style="color:#BD976A;">req</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">next</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// logger-middleware.ts</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Injectable</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">NestMiddleware</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Request</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Response</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">NextFunction</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">express</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#59873A;">logFormatMessage</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">req</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Request</span><span style="color:#999999;">)</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#AB5959;">  const </span><span style="color:#B07D48;">logMessage</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">Method: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">req</span><span style="color:#999999;">.</span><span style="color:#B56959;">method</span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;"> Request original url: </span><span style="color:#999999;">\${</span></span>
<span class="line"><span style="color:#B56959;">    req</span><span style="color:#999999;">.</span><span style="color:#B56959;">url</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;"> IP: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">req</span><span style="color:#999999;">.</span><span style="color:#B56959;">ip</span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;"> Query params: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#B56959;">    req</span><span style="color:#999999;">.</span><span style="color:#B56959;">query</span></span>
<span class="line"><span style="color:#B56959;">  </span><span style="color:#999999;">)</span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#A65E2B;">\\n</span><span style="color:#B56959;"> Body params: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B56959;">req</span><span style="color:#999999;">.</span><span style="color:#B56959;">body</span><span style="color:#999999;">)</span><span style="color:#999999;">}</span><span style="color:#B56959;"> </span><span style="color:#A65E2B;">\\n</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">  </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">logMessage</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">LoggerMiddleware</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Injectable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">LoggerMiddleware</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">implements</span><span style="color:#393A34;"> </span><span style="color:#59873A;">NestMiddleware</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">use</span><span style="color:#999999;">(</span><span style="color:#B07D48;">req</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Request</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">res</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">Response</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">NextFunction</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">logFormatMessage</span><span style="color:#999999;">(</span><span style="color:#B07D48;">req</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">next</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>在 <code>app.module</code> 文件配置中间件</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">AppModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">implements</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">NestModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">configure</span><span style="color:#666666;">(</span><span style="color:#BD976A;">consumer</span><span style="color:#666666;">: </span><span style="color:#5DA994;">MiddlewareConsumer</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">consumer</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">.</span><span style="color:#80A665;">apply</span><span style="color:#666666;">(</span><span style="color:#BD976A;">LoggerMiddleware</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">.</span><span style="color:#80A665;">forRoutes</span><span style="color:#666666;">({ </span><span style="color:#B8A965;">path</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">*</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">, </span><span style="color:#B8A965;">method</span><span style="color:#666666;">: </span><span style="color:#BD976A;">RequestMethod</span><span style="color:#666666;">.</span><span style="color:#BD976A;">ALL</span><span style="color:#666666;"> });</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">AppModule</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">implements</span><span style="color:#393A34;"> </span><span style="color:#59873A;">NestModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">configure</span><span style="color:#999999;">(</span><span style="color:#B07D48;">consumer</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">MiddlewareConsumer</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">consumer</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">.</span><span style="color:#59873A;">apply</span><span style="color:#999999;">(</span><span style="color:#B07D48;">LoggerMiddleware</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">.</span><span style="color:#59873A;">forRoutes</span><span style="color:#999999;">({ </span><span style="color:#998418;">path</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">*</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">, </span><span style="color:#998418;">method</span><span style="color:#999999;">: </span><span style="color:#B07D48;">RequestMethod</span><span style="color:#999999;">.</span><span style="color:#B07D48;">ALL</span><span style="color:#999999;"> });</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="全局日志打印拦截器" tabindex="-1">全局日志打印拦截器 <a class="header-anchor" href="#全局日志打印拦截器" aria-label="Permalink to &quot;全局日志打印拦截器&quot;">​</a></h2><p>同全局日志打印中间件功能一样</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">CallHandler</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">ExecutionContext</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">Injectable</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">NestInterceptor</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Request</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">express</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Observable</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">tap</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">rxjs</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">useFormatDate</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">@flypeng/tool</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Injectable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">LoggingInterceptor</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">implements</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">NestInterceptor</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">intercept</span><span style="color:#666666;">(</span><span style="color:#BD976A;">context</span><span style="color:#666666;">: </span><span style="color:#5DA994;">ExecutionContext</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">next</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CallHandler</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Observable</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">any</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">request</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">context</span><span style="color:#666666;">.</span><span style="color:#80A665;">switchToHttp</span><span style="color:#666666;">().</span><span style="color:#80A665;">getRequest</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">Request</span><span style="color:#666666;">&gt;();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">startNow</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#80A665;">useFormatDate</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">yyyy-MM-dd hh:mm:ss</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">Request start... </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">startNow</span><span style="color:#666666;">}</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">LoggingInterceptor</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D;">Request-URL: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">request</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">url</span><span style="color:#666666;">}</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D;">Request-Method: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">request</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">method</span><span style="color:#666666;">}</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D;">Request-Ip: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">request</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">ip</span><span style="color:#666666;">}</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C98A7D99;">\`</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D;">Request-QueryParams: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#C98A7D;">request</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">query</span><span style="color:#666666;">)</span><span style="color:#666666;">}</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D;">Request-Body: </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#C98A7D;">request</span><span style="color:#666666;">.</span><span style="color:#C98A7D;">body</span><span style="color:#666666;">)</span><span style="color:#666666;">}</span><span style="color:#C99076;">\\t\\t\\t</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">next</span><span style="color:#666666;">.</span><span style="color:#80A665;">handle</span><span style="color:#666666;">().</span><span style="color:#80A665;">pipe</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">tap</span><span style="color:#666666;">(()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">endNow</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#80A665;">useFormatDate</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">yyyy-MM-dd hh:mm:ss</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">Request ending... </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">endNow</span><span style="color:#666666;">}</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">LoggingInterceptor</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">}),</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">CallHandler</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">ExecutionContext</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Injectable</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">NestInterceptor</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Request</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">express</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Observable</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">tap</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">rxjs</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">useFormatDate</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">@flypeng/tool</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Injectable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">LoggingInterceptor</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">implements</span><span style="color:#393A34;"> </span><span style="color:#59873A;">NestInterceptor</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">intercept</span><span style="color:#999999;">(</span><span style="color:#B07D48;">context</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">ExecutionContext</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CallHandler</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Observable</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">any</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">request</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">context</span><span style="color:#999999;">.</span><span style="color:#59873A;">switchToHttp</span><span style="color:#999999;">().</span><span style="color:#59873A;">getRequest</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">Request</span><span style="color:#999999;">&gt;();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">startNow</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#59873A;">useFormatDate</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">yyyy-MM-dd hh:mm:ss</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">Request start... </span><span style="color:#999999;">\${</span><span style="color:#B56959;">startNow</span><span style="color:#999999;">}</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">LoggingInterceptor</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B56959;">Request-URL: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">request</span><span style="color:#999999;">.</span><span style="color:#B56959;">url</span><span style="color:#999999;">}</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B56959;">Request-Method: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">request</span><span style="color:#999999;">.</span><span style="color:#B56959;">method</span><span style="color:#999999;">}</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B56959;">Request-Ip: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">request</span><span style="color:#999999;">.</span><span style="color:#B56959;">ip</span><span style="color:#999999;">}</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B5695999;">\`</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B56959;">Request-QueryParams: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B56959;">request</span><span style="color:#999999;">.</span><span style="color:#B56959;">query</span><span style="color:#999999;">)</span><span style="color:#999999;">}</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B56959;">Request-Body: </span><span style="color:#999999;">\${</span><span style="color:#B56959;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B56959;">request</span><span style="color:#999999;">.</span><span style="color:#B56959;">body</span><span style="color:#999999;">)</span><span style="color:#999999;">}</span><span style="color:#A65E2B;">\\t\\t\\t</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">.</span><span style="color:#59873A;">handle</span><span style="color:#999999;">().</span><span style="color:#59873A;">pipe</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">tap</span><span style="color:#999999;">(()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">endNow</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#59873A;">useFormatDate</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">yyyy-MM-dd hh:mm:ss</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">Request ending... </span><span style="color:#999999;">\${</span><span style="color:#B56959;">endNow</span><span style="color:#999999;">}</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">LoggingInterceptor</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}),</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>在 <code>main.ts</code> 配置拦截器</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 全局响应拦截器（统一返回数据格式）</span></span>
<span class="line"><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">useGlobalInterceptors</span><span style="color:#666666;">(</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">LoggingInterceptor</span><span style="color:#666666;">());</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 全局响应拦截器（统一返回数据格式）</span></span>
<span class="line"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">useGlobalInterceptors</span><span style="color:#999999;">(</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">LoggingInterceptor</span><span style="color:#999999;">());</span></span></code></pre></div><h2 id="全局响应拦截器-统一返回数据格式" tabindex="-1">全局响应拦截器（统一返回数据格式） <a class="header-anchor" href="#全局响应拦截器-统一返回数据格式" aria-label="Permalink to &quot;全局响应拦截器（统一返回数据格式）&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">CallHandler</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">ExecutionContext</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">HttpStatus</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">Injectable</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">NestInterceptor</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">map</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Observable</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">rxjs</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * Common Response Structure</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">CommonResponse</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">code</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">HttpStatus</span><span style="color:#666666;">.</span><span style="color:#BD976A;">OK</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">message</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">操作成功</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">data</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#BD976A;">data</span><span style="color:#666666;">: </span><span style="color:#5DA994;">unknown</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">code</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">message</span><span style="color:#CB7676;">?</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">code</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">code</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">message</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">message</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">data</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">data</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * Global Response Interceptor</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Injectable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ResponseInterceptor</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">implements</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">NestInterceptor</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">intercept</span><span style="color:#666666;">(</span><span style="color:#BD976A;">context</span><span style="color:#666666;">: </span><span style="color:#5DA994;">ExecutionContext</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">next</span><span style="color:#666666;">: </span><span style="color:#5DA994;">CallHandler</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Observable</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">any</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">next</span><span style="color:#666666;">.</span><span style="color:#80A665;">handle</span><span style="color:#666666;">().</span><span style="color:#80A665;">pipe</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">map</span><span style="color:#666666;">((</span><span style="color:#BD976A;">value</span><span style="color:#666666;">: </span><span style="color:#5DA994;">unknown</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">value</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">instanceof</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">CommonResponse</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">value</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">CommonResponse</span><span style="color:#666666;">(</span><span style="color:#BD976A;">value</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">200</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">操作成功</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">CallHandler</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">ExecutionContext</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">HttpStatus</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Injectable</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">NestInterceptor</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">map</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Observable</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">rxjs</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * Common Response Structure</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">CommonResponse</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">code</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">HttpStatus</span><span style="color:#999999;">.</span><span style="color:#B07D48;">OK</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">message</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">操作成功</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">data</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#B07D48;">data</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">code</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">message</span><span style="color:#AB5959;">?</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">code</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">code</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">message</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">message</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">data</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">data</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * Global Response Interceptor</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Injectable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ResponseInterceptor</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">implements</span><span style="color:#393A34;"> </span><span style="color:#59873A;">NestInterceptor</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">intercept</span><span style="color:#999999;">(</span><span style="color:#B07D48;">context</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">ExecutionContext</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">CallHandler</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Observable</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">any</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">next</span><span style="color:#999999;">.</span><span style="color:#59873A;">handle</span><span style="color:#999999;">().</span><span style="color:#59873A;">pipe</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">map</span><span style="color:#999999;">((</span><span style="color:#B07D48;">value</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">instanceof</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">CommonResponse</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">CommonResponse</span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">200</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">操作成功</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>在 <code>main.ts</code> 配置拦截器</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 全局响应拦截器（统一返回数据格式）</span></span>
<span class="line"><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">useGlobalInterceptors</span><span style="color:#666666;">(</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">TransformResInterceptor</span><span style="color:#666666;">());</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 全局响应拦截器（统一返回数据格式）</span></span>
<span class="line"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">useGlobalInterceptors</span><span style="color:#999999;">(</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">TransformResInterceptor</span><span style="color:#999999;">());</span></span></code></pre></div><h2 id="全局异常过滤器-统一处理异常" tabindex="-1">全局异常过滤器（统一处理异常） <a class="header-anchor" href="#全局异常过滤器-统一处理异常" aria-label="Permalink to &quot;全局异常过滤器（统一处理异常）&quot;">​</a></h2><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">ArgumentsHost</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">Catch</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">ExceptionFilter</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">HttpException</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">HttpStatus</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Response</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">express</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Catch</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">HttpExceptionFilter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">implements</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">ExceptionFilter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">catch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">exception</span><span style="color:#666666;">: </span><span style="color:#5DA994;">unknown</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">host</span><span style="color:#666666;">: </span><span style="color:#5DA994;">ArgumentsHost</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">ctx</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">host</span><span style="color:#666666;">.</span><span style="color:#80A665;">switchToHttp</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">request</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">ctx</span><span style="color:#666666;">.</span><span style="color:#80A665;">getRequest</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">Request</span><span style="color:#666666;">&gt;();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">response</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">ctx</span><span style="color:#666666;">.</span><span style="color:#80A665;">getResponse</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">Response</span><span style="color:#666666;">&gt;();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">Logger</span><span style="color:#666666;">.</span><span style="color:#80A665;">error</span><span style="color:#666666;">(</span><span style="color:#BD976A;">exception</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">Logging</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">path</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">request</span><span style="color:#666666;">.</span><span style="color:#BD976A;">url</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">status</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span></span>
<span class="line"><span style="color:#CB7676;">      </span><span style="color:#BD976A;">exception</span><span style="color:#CB7676;"> instanceof </span><span style="color:#5DA994;">HttpException</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">exception</span><span style="color:#666666;">.</span><span style="color:#80A665;">getStatus</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">HttpStatus</span><span style="color:#666666;">.</span><span style="color:#BD976A;">INTERNAL_SERVER_ERROR</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">message</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span></span>
<span class="line"><span style="color:#CB7676;">      </span><span style="color:#BD976A;">exception</span><span style="color:#CB7676;"> instanceof </span><span style="color:#5DA994;">HttpException</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#BD976A;">exception</span><span style="color:#666666;">.</span><span style="color:#80A665;">getResponse</span><span style="color:#666666;">())</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">操作失败</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">response</span><span style="color:#666666;">.</span><span style="color:#80A665;">header</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">Content-Type</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">application/json; charset=utf-8</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">response</span><span style="color:#666666;">.</span><span style="color:#80A665;">status</span><span style="color:#666666;">(</span><span style="color:#BD976A;">status</span><span style="color:#666666;">).</span><span style="color:#80A665;">json</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#BD976A;">path</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#BD976A;">status</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#BD976A;">message</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">timestamp</span><span style="color:#666666;">: </span><span style="color:#CB7676;">new</span><span style="color:#666666;"> </span><span style="color:#80A665;">Date</span><span style="color:#666666;">().</span><span style="color:#80A665;">toISOString</span><span style="color:#666666;">(),</span></span>
<span class="line"><span style="color:#666666;">    });</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">ArgumentsHost</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Catch</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">ExceptionFilter</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">HttpException</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">HttpStatus</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Response</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">express</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Catch</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">HttpExceptionFilter</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">implements</span><span style="color:#393A34;"> </span><span style="color:#59873A;">ExceptionFilter</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">catch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">exception</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">unknown</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">host</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">ArgumentsHost</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">ctx</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">host</span><span style="color:#999999;">.</span><span style="color:#59873A;">switchToHttp</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">request</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">ctx</span><span style="color:#999999;">.</span><span style="color:#59873A;">getRequest</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">Request</span><span style="color:#999999;">&gt;();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">response</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">ctx</span><span style="color:#999999;">.</span><span style="color:#59873A;">getResponse</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">Response</span><span style="color:#999999;">&gt;();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">Logger</span><span style="color:#999999;">.</span><span style="color:#59873A;">error</span><span style="color:#999999;">(</span><span style="color:#B07D48;">exception</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Logging</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">path</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">request</span><span style="color:#999999;">.</span><span style="color:#B07D48;">url</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">status</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span></span>
<span class="line"><span style="color:#AB5959;">      </span><span style="color:#B07D48;">exception</span><span style="color:#AB5959;"> instanceof </span><span style="color:#2E8F82;">HttpException</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">exception</span><span style="color:#999999;">.</span><span style="color:#59873A;">getStatus</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">HttpStatus</span><span style="color:#999999;">.</span><span style="color:#B07D48;">INTERNAL_SERVER_ERROR</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">message</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span></span>
<span class="line"><span style="color:#AB5959;">      </span><span style="color:#B07D48;">exception</span><span style="color:#AB5959;"> instanceof </span><span style="color:#2E8F82;">HttpException</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B07D48;">exception</span><span style="color:#999999;">.</span><span style="color:#59873A;">getResponse</span><span style="color:#999999;">())</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">操作失败</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">response</span><span style="color:#999999;">.</span><span style="color:#59873A;">header</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Content-Type</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">application/json; charset=utf-8</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">response</span><span style="color:#999999;">.</span><span style="color:#59873A;">status</span><span style="color:#999999;">(</span><span style="color:#B07D48;">status</span><span style="color:#999999;">).</span><span style="color:#59873A;">json</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">path</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">status</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#B07D48;">message</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">timestamp</span><span style="color:#999999;">: </span><span style="color:#AB5959;">new</span><span style="color:#999999;"> </span><span style="color:#59873A;">Date</span><span style="color:#999999;">().</span><span style="color:#59873A;">toISOString</span><span style="color:#999999;">(),</span></span>
<span class="line"><span style="color:#999999;">    });</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>在 <code>main.ts</code> 配置过滤器</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 全局异常过滤器（统一处理异常请求）</span></span>
<span class="line"><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">useGlobalFilters</span><span style="color:#666666;">(</span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">HttpExceptionFilter</span><span style="color:#666666;">());</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 全局异常过滤器（统一处理异常请求）</span></span>
<span class="line"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">useGlobalFilters</span><span style="color:#999999;">(</span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">HttpExceptionFilter</span><span style="color:#999999;">());</span></span></code></pre></div><h2 id="用户本地认证和-jwt-生成" tabindex="-1">用户本地认证和 Jwt 生成 <a class="header-anchor" href="#用户本地认证和-jwt-生成" aria-label="Permalink to &quot;用户本地认证和 Jwt 生成&quot;">​</a></h2><h3 id="认证" tabindex="-1">认证 <a class="header-anchor" href="#认证" aria-label="Permalink to &quot;认证&quot;">​</a></h3><p>passport 是目前最流行的 node.js 认证库，它具有丰富的策略生态系统，可实施各种身份验证机制。而 @nestjs/passport 模块将该模式包装并标准化为熟悉的 Nest 构造</p><p>安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">pnpm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">add</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">@nestjs/passport</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">passport</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">passport-local</span></span>
<span class="line"><span style="color:#80A665;">pnpm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">add</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">@types/passport-local</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-D</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">pnpm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@nestjs/passport</span><span style="color:#393A34;"> </span><span style="color:#B56959;">passport</span><span style="color:#393A34;"> </span><span style="color:#B56959;">passport-local</span></span>
<span class="line"><span style="color:#59873A;">pnpm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@types/passport-local</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-D</span></span></code></pre></div><p>主要步骤是：</p><ol><li><p>建立一个 <code>AuthModule</code> 、<code>AuthController</code> 和 <code>AuthService</code> 在此模块做身份认证</p></li><li><p>实现 Passport 本地身份验证策略，在模块下创建一个 <code>local.strategy.ts</code> 文件</p></li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// auth/local.strategy.ts</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Injectable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">LocalStrategy</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">extends</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">PassportStrategy</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Strategy</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">authService</span><span style="color:#666666;">: </span><span style="color:#5DA994;">AuthService</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">super</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 用户身份认证逻辑</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">validate</span><span style="color:#666666;">(</span><span style="color:#BD976A;">username</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">password</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">):</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">Promise</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">any</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 根据需求来定义认证逻辑</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">user</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">xxxx</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// const user = await this.authService.validateUser(username, password);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">user</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">throw</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">UnauthorizedException</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">user</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// auth/local.strategy.ts</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Injectable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">LocalStrategy</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">extends</span><span style="color:#393A34;"> </span><span style="color:#59873A;">PassportStrategy</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Strategy</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">authService</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">AuthService</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">super</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 用户身份认证逻辑</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">validate</span><span style="color:#999999;">(</span><span style="color:#B07D48;">username</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">password</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">):</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">Promise</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">any</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 根据需求来定义认证逻辑</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">user</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">xxxx</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// const user = await this.authService.validateUser(username, password);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">user</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">throw</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">UnauthorizedException</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">user</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><ol start="3"><li>将 <strong>PassportModule</strong>、<strong>LocalStrategy</strong> 服务在 <code>AuthModule</code> 中进行提供出来以供其他服务使用</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">imports</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">UsersModule</span><span style="color:#666666;">, </span><span style="color:#BD976A;">PassportModule</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">providers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">AuthService</span><span style="color:#666666;">, </span><span style="color:#BD976A;">LocalStrategy</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">AuthModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">imports</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">UsersModule</span><span style="color:#999999;">, </span><span style="color:#B07D48;">PassportModule</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">providers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">AuthService</span><span style="color:#999999;">, </span><span style="color:#B07D48;">LocalStrategy</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">AuthModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><ol start="4"><li>在登录接口注入一个控制守卫，并应用内置的守卫来启动 <code>Passport-local</code> 流</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">UseGuards</span><span style="color:#666666;">(</span><span style="color:#80A665;">AuthGuard</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">local</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">))</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 添加守卫</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Post</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">login</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">login</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">@</span><span style="color:#80A665;">Body</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">loginAccountDto</span><span style="color:#DBD7CAEE;">: </span><span style="color:#BD976A;">LoginAccountDto</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> @</span><span style="color:#80A665;">Req</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">request</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// Passport 根据从 validate() 方法返回的值自动创建一个 user 对象，并将其作为 request.user 分配给请求对象，之后再去介入JWT</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">request</span><span style="color:#666666;">.</span><span style="color:#BD976A;">user</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// return this.authService.createToken(request.user as SysAccountEntity);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">UseGuards</span><span style="color:#999999;">(</span><span style="color:#59873A;">AuthGuard</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">local</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">))</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 添加守卫</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Post</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">login</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">login</span><span style="color:#999999;">(</span><span style="color:#393A34;">@</span><span style="color:#59873A;">Body</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">loginAccountDto</span><span style="color:#393A34;">: </span><span style="color:#B07D48;">LoginAccountDto</span><span style="color:#999999;">,</span><span style="color:#393A34;"> @</span><span style="color:#59873A;">Req</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">request</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// Passport 根据从 validate() 方法返回的值自动创建一个 user 对象，并将其作为 request.user 分配给请求对象，之后再去介入JWT</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">request</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// return this.authService.createToken(request.user as SysAccountEntity);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="生成-jwt" tabindex="-1">生成 JWT <a class="header-anchor" href="#生成-jwt" aria-label="Permalink to &quot;生成 JWT&quot;">​</a></h2><ol><li>安装</li></ol><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">pnpm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">add</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">@nestjs/jwt</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">passport-jwt</span></span>
<span class="line"><span style="color:#80A665;">pnpm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">add</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">@types/passport-jwt</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-D</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">pnpm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@nestjs/jwt</span><span style="color:#393A34;"> </span><span style="color:#B56959;">passport-jwt</span></span>
<span class="line"><span style="color:#59873A;">pnpm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">add</span><span style="color:#393A34;"> </span><span style="color:#B56959;">@types/passport-jwt</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-D</span></span></code></pre></div><ol start="2"><li>接着上面认证部分，在 <code>AuthService</code> 可编写生成 Token 的代码</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Injectable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">AuthService</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">usersService</span><span style="color:#666666;">: </span><span style="color:#5DA994;">UsersService</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">jwtService</span><span style="color:#666666;">: </span><span style="color:#5DA994;">JwtService</span></span>
<span class="line"><span style="color:#666666;">  )</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">login</span><span style="color:#666666;">(</span><span style="color:#BD976A;">user</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">payload</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{ </span><span style="color:#B8A965;">username</span><span style="color:#666666;">: </span><span style="color:#BD976A;">user</span><span style="color:#666666;">.</span><span style="color:#BD976A;">username</span><span style="color:#666666;">, </span><span style="color:#B8A965;">sub</span><span style="color:#666666;">: </span><span style="color:#BD976A;">user</span><span style="color:#666666;">.</span><span style="color:#BD976A;">userId</span><span style="color:#666666;"> };</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// jwtService.sign() 用于生成一个 Token</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">access_token</span><span style="color:#666666;">: </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">jwtService</span><span style="color:#666666;">.</span><span style="color:#80A665;">sign</span><span style="color:#666666;">(</span><span style="color:#BD976A;">payload</span><span style="color:#666666;">),</span></span>
<span class="line"><span style="color:#666666;">    };</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Injectable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">AuthService</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">usersService</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">UsersService</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">jwtService</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">JwtService</span></span>
<span class="line"><span style="color:#999999;">  )</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">login</span><span style="color:#999999;">(</span><span style="color:#B07D48;">user</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">payload</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{ </span><span style="color:#998418;">username</span><span style="color:#999999;">: </span><span style="color:#B07D48;">user</span><span style="color:#999999;">.</span><span style="color:#B07D48;">username</span><span style="color:#999999;">, </span><span style="color:#998418;">sub</span><span style="color:#999999;">: </span><span style="color:#B07D48;">user</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userId</span><span style="color:#999999;"> };</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// jwtService.sign() 用于生成一个 Token</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">access_token</span><span style="color:#999999;">: </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">jwtService</span><span style="color:#999999;">.</span><span style="color:#59873A;">sign</span><span style="color:#999999;">(</span><span style="color:#B07D48;">payload</span><span style="color:#999999;">),</span></span>
<span class="line"><span style="color:#999999;">    };</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><ol start="3"><li>同时需要在 <code>auth.module.ts</code> 文件去配置 <code>JwtModule</code> 模块</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// auth/constant.ts</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#CB7676;"> const </span><span style="color:#BD976A;">jwtConstants</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">secret</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">secretKey</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">, </span><span style="color:#758575DD;">// 签名秘钥</span></span>
<span class="line"><span style="color:#666666;">};</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// auth/constant.ts</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#AB5959;"> const </span><span style="color:#B07D48;">jwtConstants</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">secret</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">secretKey</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">, </span><span style="color:#A0ADA0;">// 签名秘钥</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre></div><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// auth/auth.module.ts</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">imports</span><span style="color:#666666;">: [</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">UsersModule</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">PassportModule</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">JwtModule</span><span style="color:#666666;">.</span><span style="color:#80A665;">register</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">secret</span><span style="color:#666666;">: </span><span style="color:#BD976A;">jwtConstants</span><span style="color:#666666;">.</span><span style="color:#BD976A;">secret</span><span style="color:#666666;">, </span><span style="color:#758575DD;">// 秘钥</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">signOptions</span><span style="color:#666666;">: { </span><span style="color:#B8A965;">expiresIn</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">60s</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;"> }, </span><span style="color:#758575DD;">// 设置过期时间</span></span>
<span class="line"><span style="color:#666666;">    }),</span></span>
<span class="line"><span style="color:#666666;">  ],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">providers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">AuthService</span><span style="color:#666666;">, </span><span style="color:#BD976A;">LocalStrategy</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">exports</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">AuthService</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">AuthModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// auth/auth.module.ts</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">imports</span><span style="color:#999999;">: [</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">UsersModule</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">PassportModule</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">JwtModule</span><span style="color:#999999;">.</span><span style="color:#59873A;">register</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">secret</span><span style="color:#999999;">: </span><span style="color:#B07D48;">jwtConstants</span><span style="color:#999999;">.</span><span style="color:#B07D48;">secret</span><span style="color:#999999;">, </span><span style="color:#A0ADA0;">// 秘钥</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">signOptions</span><span style="color:#999999;">: { </span><span style="color:#998418;">expiresIn</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">60s</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;"> }, </span><span style="color:#A0ADA0;">// 设置过期时间</span></span>
<span class="line"><span style="color:#999999;">    }),</span></span>
<span class="line"><span style="color:#999999;">  ],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">providers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">AuthService</span><span style="color:#999999;">, </span><span style="color:#B07D48;">LocalStrategy</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">exports</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">AuthService</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">AuthModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><ol start="4"><li>修改认证时的登录接口</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">UseGuards</span><span style="color:#666666;">(</span><span style="color:#80A665;">AuthGuard</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">local</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">))</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Post</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">auth/login</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">login</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">@</span><span style="color:#80A665;">Request</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// LocalStrategy 认证逻辑通过后，就会走到这来</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">authService</span><span style="color:#666666;">.</span><span style="color:#80A665;">login</span><span style="color:#666666;">(</span><span style="color:#BD976A;">req</span><span style="color:#666666;">.</span><span style="color:#BD976A;">user</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">UseGuards</span><span style="color:#999999;">(</span><span style="color:#59873A;">AuthGuard</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">local</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">))</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Post</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">auth/login</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">login</span><span style="color:#999999;">(</span><span style="color:#393A34;">@</span><span style="color:#59873A;">Request</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// LocalStrategy 认证逻辑通过后，就会走到这来</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">authService</span><span style="color:#999999;">.</span><span style="color:#59873A;">login</span><span style="color:#999999;">(</span><span style="color:#B07D48;">req</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="实施-jwt" tabindex="-1">实施 JWT <a class="header-anchor" href="#实施-jwt" aria-label="Permalink to &quot;实施 JWT&quot;">​</a></h2><p>通过要求在请求时提供有效的 JWT 来保护我们的接口</p><ol><li>创建一个 <code>JwtStrategy</code> JWT 认证策略，实现 validate 逻辑来校验 Token 的有效性</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// auth/jwt.strategy.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Injectable</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">JwtStorageStrategy</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">extends</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">PassportStrategy</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Strategy</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">readonly</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">authService</span><span style="color:#666666;">: </span><span style="color:#5DA994;">AuthService</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 请求头 携带Token，格式如下</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// Authorization: Bearer xxxx</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 只用接口携带了 @UseGuards(AuthGuard(&#39;jwt&#39;))的守卫 都是需要Token的</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 它会自动去解析请求头携带的Token，</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">super</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">jwtFromRequest</span><span style="color:#666666;">: </span><span style="color:#BD976A;">ExtractJwt</span><span style="color:#666666;">.</span><span style="color:#80A665;">fromAuthHeaderAsBearerToken</span><span style="color:#666666;">(),</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">secretOrKey</span><span style="color:#666666;">: </span><span style="color:#BD976A;">jwtConstants</span><span style="color:#666666;">.</span><span style="color:#BD976A;">secret</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    }</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">StrategyOptions</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;">   * 校验Token的有效性</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">token</span></span>
<span class="line"><span style="color:#758575DD;">   * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">returns</span></span>
<span class="line"><span style="color:#758575DD;">   */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">validate</span><span style="color:#666666;">(</span><span style="color:#BD976A;">token</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">existUser</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">await</span><span style="color:#CB7676;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">authService</span><span style="color:#666666;">.</span><span style="color:#80A665;">findAccountById</span><span style="color:#666666;">(</span><span style="color:#BD976A;">token</span><span style="color:#666666;">.</span><span style="color:#BD976A;">sub</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">existUser</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">UnauthorizedException</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">token无效!</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">existUser</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// auth/jwt.strategy.ts</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Injectable</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">JwtStorageStrategy</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">extends</span><span style="color:#393A34;"> </span><span style="color:#59873A;">PassportStrategy</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Strategy</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">readonly</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">authService</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">AuthService</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 请求头 携带Token，格式如下</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// Authorization: Bearer xxxx</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 只用接口携带了 @UseGuards(AuthGuard(&#39;jwt&#39;))的守卫 都是需要Token的</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 它会自动去解析请求头携带的Token，</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">super</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">jwtFromRequest</span><span style="color:#999999;">: </span><span style="color:#B07D48;">ExtractJwt</span><span style="color:#999999;">.</span><span style="color:#59873A;">fromAuthHeaderAsBearerToken</span><span style="color:#999999;">(),</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">secretOrKey</span><span style="color:#999999;">: </span><span style="color:#B07D48;">jwtConstants</span><span style="color:#999999;">.</span><span style="color:#B07D48;">secret</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    }</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">as</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">StrategyOptions</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;">   * 校验Token的有效性</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">token</span></span>
<span class="line"><span style="color:#A0ADA0;">   * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">returns</span></span>
<span class="line"><span style="color:#A0ADA0;">   */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">validate</span><span style="color:#999999;">(</span><span style="color:#B07D48;">token</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">existUser</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">authService</span><span style="color:#999999;">.</span><span style="color:#59873A;">findAccountById</span><span style="color:#999999;">(</span><span style="color:#B07D48;">token</span><span style="color:#999999;">.</span><span style="color:#B07D48;">sub</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">existUser</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">UnauthorizedException</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">token无效!</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">existUser</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><ol start="2"><li>在 <code>AuthModule</code> 模块中提供服务，供其他模块使用</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">imports</span><span style="color:#666666;">: [</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">UsersModule</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">PassportModule</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">JwtModule</span><span style="color:#666666;">.</span><span style="color:#80A665;">register</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">secret</span><span style="color:#666666;">: </span><span style="color:#BD976A;">jwtConstants</span><span style="color:#666666;">.</span><span style="color:#BD976A;">secret</span><span style="color:#666666;">, </span><span style="color:#758575DD;">// 秘钥</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#B8A965;">signOptions</span><span style="color:#666666;">: { </span><span style="color:#B8A965;">expiresIn</span><span style="color:#666666;">: </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">60s</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;"> }, </span><span style="color:#758575DD;">// 设置过期时间</span></span>
<span class="line"><span style="color:#666666;">    }),</span></span>
<span class="line"><span style="color:#666666;">  ],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">providers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">AuthService</span><span style="color:#666666;">, </span><span style="color:#BD976A;">LocalStrategy</span><span style="color:#666666;">, </span><span style="color:#BD976A;">JwtStorageStrategy</span><span style="color:#666666;">], </span><span style="color:#758575DD;">// 新增服务</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">exports</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">AuthService</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">AuthModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">imports</span><span style="color:#999999;">: [</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">UsersModule</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">PassportModule</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">JwtModule</span><span style="color:#999999;">.</span><span style="color:#59873A;">register</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">secret</span><span style="color:#999999;">: </span><span style="color:#B07D48;">jwtConstants</span><span style="color:#999999;">.</span><span style="color:#B07D48;">secret</span><span style="color:#999999;">, </span><span style="color:#A0ADA0;">// 秘钥</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#998418;">signOptions</span><span style="color:#999999;">: { </span><span style="color:#998418;">expiresIn</span><span style="color:#999999;">: </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">60s</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;"> }, </span><span style="color:#A0ADA0;">// 设置过期时间</span></span>
<span class="line"><span style="color:#999999;">    }),</span></span>
<span class="line"><span style="color:#999999;">  ],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">providers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">AuthService</span><span style="color:#999999;">, </span><span style="color:#B07D48;">LocalStrategy</span><span style="color:#999999;">, </span><span style="color:#B07D48;">JwtStorageStrategy</span><span style="color:#999999;">], </span><span style="color:#A0ADA0;">// 新增服务</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">exports</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">AuthService</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">AuthModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><ol start="3"><li>对应需要登录后才可访问的路由，我们就可以添加对应守卫</li></ol><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">UseGuards</span><span style="color:#666666;">(</span><span style="color:#80A665;">AuthGuard</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">jwt</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">))</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 添加守卫来保护路由</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Get</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">profile</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">getProfile</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">@</span><span style="color:#80A665;">Request</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#666666;">.</span><span style="color:#BD976A;">user</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">UseGuards</span><span style="color:#999999;">(</span><span style="color:#59873A;">AuthGuard</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">jwt</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">))</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 添加守卫来保护路由</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Get</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">profile</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">getProfile</span><span style="color:#999999;">(</span><span style="color:#393A34;">@</span><span style="color:#59873A;">Request</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#999999;">.</span><span style="color:#B07D48;">user</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="rbac-权限" tabindex="-1">RBAC 权限 <a class="header-anchor" href="#rbac-权限" aria-label="Permalink to &quot;RBAC 权限&quot;">​</a></h2><p>相对认证部分来说并不很很难，但也比较麻烦需要配置数据库</p><p>具体如何配置可参照 <a href="https://docs.nestjs.cn/9/security?id=%e6%9d%83%e9%99%90%ef%bc%88authorization%ef%bc%89" target="_blank" rel="noreferrer">文档</a></p><h2 id="cors-跨资源贡献" tabindex="-1">CORS 跨资源贡献 <a class="header-anchor" href="#cors-跨资源贡献" aria-label="Permalink to &quot;CORS 跨资源贡献&quot;">​</a></h2><p>处理浏览器跨域问题，必须调用 <code>enableCors()</code> 方法开启跨域</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">app</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">await</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">NestFactory</span><span style="color:#666666;">.</span><span style="color:#80A665;">create</span><span style="color:#666666;">(</span><span style="color:#BD976A;">AppModule</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// 开启跨域</span></span>
<span class="line"><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">enableCors</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">listen</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">3000</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">app</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">NestFactory</span><span style="color:#999999;">.</span><span style="color:#59873A;">create</span><span style="color:#999999;">(</span><span style="color:#B07D48;">AppModule</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// 开启跨域</span></span>
<span class="line"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">enableCors</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">listen</span><span style="color:#999999;">(</span><span style="color:#2F798A;">3000</span><span style="color:#999999;">);</span></span></code></pre></div><h2 id="csrf-保护" tabindex="-1">CSRF 保护 <a class="header-anchor" href="#csrf-保护" aria-label="Permalink to &quot;CSRF 保护&quot;">​</a></h2><p>跨站点请求伪造（称为 CSRF 或 XSRF）是一种恶意利用网站，其中未经授权的命令从 Web 应用程序信任的用户传输</p><p>安装：</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">pnpm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">add</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">csurf</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">pnpm</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">add</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">csurf</span></span></code></pre></div><p>配置为全局中间件</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">*</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">csurf</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">csurf</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">app</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">await</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">NestFactory</span><span style="color:#666666;">.</span><span style="color:#80A665;">create</span><span style="color:#666666;">(</span><span style="color:#BD976A;">AppModule</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">use</span><span style="color:#666666;">(</span><span style="color:#80A665;">csurf</span><span style="color:#666666;">());</span></span>
<span class="line"><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">listen</span><span style="color:#666666;">(</span><span style="color:#4C9A91;">3000</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">*</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">as</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">csurf</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">csurf</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">app</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">NestFactory</span><span style="color:#999999;">.</span><span style="color:#59873A;">create</span><span style="color:#999999;">(</span><span style="color:#B07D48;">AppModule</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">use</span><span style="color:#999999;">(</span><span style="color:#59873A;">csurf</span><span style="color:#999999;">());</span></span>
<span class="line"><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">listen</span><span style="color:#999999;">(</span><span style="color:#2F798A;">3000</span><span style="color:#999999;">);</span></span></code></pre></div>`,61),e=[o];function t(c,r,y,A,D,i){return a(),n("div",null,e)}const C=s(l,[["render",t]]);export{E as __pageData,C as default};
