import{_ as l,c as t,o as e,ag as a}from"./chunks/framework.BhcQuJV0.js";const g=JSON.parse('{"title":"GitHub Pages自定义域名","description":"","frontmatter":{},"headers":[],"relativePath":"posts/GitHubPages自定义域名.md","filePath":"posts/GitHubPages自定义域名.md","lastUpdated":1749545960000}'),s={name:"posts/GitHubPages自定义域名.md"};function o(u,i,p,r,_,d){return e(),t("div",null,i[0]||(i[0]=[a('<h1 id="github-pages自定义域名" tabindex="-1">GitHub Pages自定义域名 <a class="header-anchor" href="#github-pages自定义域名" aria-label="Permalink to &quot;GitHub Pages自定义域名&quot;">​</a></h1><p>一、在 GitHub 上配置自定义域名</p><ol><li>进入仓库设置：在 GitHub 上，导航到你的站点仓库，点击页面顶部的 “Settings”（设置）。</li><li>进入 Pages 设置：在左侧菜单中，点击 “Pages”。</li><li>输入自定义域名：在 “Custom domain” 部分，输入你的自定义域名，例如 www.example.com 或 example.com，然后点击 “Save” 按钮。</li><li>验证域名状态：保存后，GitHub 会自动检查你的 DNS 设置。如果配置正确，会显示绿色提示，表示自定义域名已成功配置。</li></ol><p>二、配置域名的 DNS 记录</p><ol><li><p>登录域名注册商的 DNS 管理面板：进入你的域名注册商的 DNS 管理页面。</p></li><li><p>添加 A 记录（适用于顶级域名）：</p></li></ol><ul><li>主机记录：输入 @。</li><li>记录类型：选择 A。</li><li>记录值：输入以下四个 IP 地址，分别创建四条 A 记录： <ul><li>185.199.108.153</li><li>185.199.109.153</li><li>185.199.110.153</li><li>185.199.111.153</li></ul></li></ul><ol start="3"><li>添加 CNAME 记录（适用于子域名）：</li></ol><ul><li>主机记录：输入子域名，如 www。</li><li>记录类型：选择 CNAME。</li><li>记录值：输入 <code>&lt;username&gt;.github.io</code>，将 <code>&lt;username&gt;</code> 替换为你的 GitHub 用户名。</li></ul><ol start="4"><li>保存 DNS 设置：确保所有记录已正确添加并保存。</li></ol><p>三、验证域名所有权（如有必要）</p><p>GitHub 提供了验证自定义域名的功能，以防止域名劫持等攻击。如果需要验证：</p><ol><li>在 GitHub 的 “Pages” 设置中，输入要验证的域名并点击 “Add domain” 按钮。</li><li>根据提示，在域名注册商的 DNS 管理界面添加一条 TXT 类型的记录，Name 为 _github-pages 开头的内容，Value 为 GitHub 提供的代码。</li><li>添加完成后，返回 GitHub 验证页面，点击 “Verify” 按钮进行验证。</li></ol><p>四、启用 HTTPS（可选）</p><p>配置完成后，GitHub Pages 会自动为你的自定义域名启用 HTTPS，无需手动申请 SSL 证书。</p>',14)]))}const b=l(s,[["render",o]]);export{g as __pageData,b as default};
