import{_ as s,c as a,o as n,X as l}from"./chunks/framework.6e839c56.js";const B=JSON.parse('{"title":"相关使用","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"services/Nest/devRecord.md","filePath":"services/Nest/devRecord.md"}'),o={name:"services/Nest/devRecord.md"},p=l(`<h1 id="相关使用" tabindex="-1">相关使用 <a class="header-anchor" href="#相关使用" aria-label="Permalink to &quot;相关使用&quot;">​</a></h1><h2 id="controller-控制器" tabindex="-1">Controller 控制器 <a class="header-anchor" href="#controller-控制器" aria-label="Permalink to &quot;Controller 控制器&quot;">​</a></h2><p>通过 <code>@Controller</code> 修饰器在修饰一个类</p><ul><li><p><code>@Get</code>、<code>@Post</code>、<code>@Patch</code>、<code>@Delete</code> 修饰器来声明一个请求方法</p></li><li><p><code>@Req() request: Request</code> 获取当前的 <strong>Request</strong></p></li><li><p><code>@Res() response: Response</code> 获取当前的 <strong>Response</strong></p></li><li><p><code>@Param(key?: string)</code></p></li></ul><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Get</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">demo/:id/:td</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#80A665;">findAll</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">@</span><span style="color:#80A665;">Param</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">id</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">id</span><span style="color:#DBD7CAEE;">: </span><span style="color:#BD976A;">string</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> @</span><span style="color:#80A665;">Param</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">td</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">td</span><span style="color:#DBD7CAEE;">: </span><span style="color:#BD976A;">string</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// demo/2/3</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">id</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 2</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">td</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 3</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Hello World</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Get</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">demo/:id/:td</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#59873A;">findAll</span><span style="color:#999999;">(</span><span style="color:#393A34;">@</span><span style="color:#59873A;">Param</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">id</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">id</span><span style="color:#393A34;">: </span><span style="color:#B07D48;">string</span><span style="color:#999999;">,</span><span style="color:#393A34;"> @</span><span style="color:#59873A;">Param</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">td</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">td</span><span style="color:#393A34;">: </span><span style="color:#B07D48;">string</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// demo/2/3</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">id</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 2</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">td</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 3</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Hello World</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><ul><li><p><code>@Body(key?: string)</code></p></li><li><p><code>@Query(key?: string)</code></p></li><li><p><code>@Headers(name?: string)</code></p></li><li><p><code>@Ip()</code></p></li><li><p><code>@HostParam()</code></p></li><li><p><code>@HttpCode(200)</code> 请求默认返回状态码是 200 但 Post 请求默认返回状态码是 201</p></li><li><p><code>@Redirect(url, statusCode = 302)</code> 重定向路由到指定 URL 上</p></li></ul><h2 id="provider-提供者" tabindex="-1">Provider 提供者 <a class="header-anchor" href="#provider-提供者" aria-label="Permalink to &quot;Provider 提供者&quot;">​</a></h2><p><strong>Provider</strong> 是 Nest 的一个基础概念。 通过 <code>@Injectable()</code> 进行修饰的类。主要思想是它可以注入依赖关系，意味着类之间可以彼此创建关系</p><h3 id="注册提供者" tabindex="-1">注册提供者 <a class="header-anchor" href="#注册提供者" aria-label="Permalink to &quot;注册提供者&quot;">​</a></h3><p>现在我们已经定义了提供者 Services，并且已经有了该服务的使用者 Controller，我们需要在 Nest 中注册该服务，以便它可以执行注入。 为此，我们需要在模块文件中，然后将服务添加到<code>@Module()</code>装饰器的 <code>providers</code> 数组中。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Module</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">controllers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">XXXController</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">providers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">XXXService</span><span style="color:#666666;">], </span><span style="color:#758575DD;">// 注册提供者的入口</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">AppModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Module</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">controllers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">XXXController</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">providers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">XXXService</span><span style="color:#999999;">], </span><span style="color:#A0ADA0;">// 注册提供者的入口</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">AppModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><h2 id="module-模块" tabindex="-1">Module 模块 <a class="header-anchor" href="#module-模块" aria-label="Permalink to &quot;Module 模块&quot;">​</a></h2><h3 id="参数介绍" tabindex="-1">参数介绍 <a class="header-anchor" href="#参数介绍" aria-label="Permalink to &quot;参数介绍&quot;">​</a></h3><p><code>@Module()</code> 修饰符接受一个对象，该对象的属性描述模块如下</p><ul><li><strong>providers</strong>: 提供本模块的相关服务，可以供本模块控制器或其他服务使用</li><li><strong>controllers</strong>: 注册本模块的控制器</li><li><strong>imports</strong>: 导入其他模块，供本模块使用</li><li><strong>exports</strong>: 导出本模块的相关服务，其他模块通过 <strong>imports</strong> 引入本模块后就可以使用 <strong>exports</strong> 中注册的服务</li></ul><h3 id="共享模块" tabindex="-1">共享模块 <a class="header-anchor" href="#共享模块" aria-label="Permalink to &quot;共享模块&quot;">​</a></h3><p>实际上，每个模块都是一个共享模块。一旦创建就能被任意模块重复使用。假设你希望将某个模块下的服务提供给其他模块使用，那么我们需要将服务添加到 <code>@Module()</code>装饰器的<code>exports</code>数组中。那么其他模块在引入本模块后就可以进行依赖注入使用服务了</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Module</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">controllers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">XXXController</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">providers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">XXXService</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">exports</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">XXXService</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">XXXModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Module</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">controllers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">XXXController</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">providers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">XXXService</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">exports</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">XXXService</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">XXXModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><h3 id="全局模块" tabindex="-1">全局模块 <a class="header-anchor" href="#全局模块" aria-label="Permalink to &quot;全局模块&quot;">​</a></h3><p><code>@Global</code> 装饰器使模块成为全局作用域。 全局模块应该只注册一次，最好由根或核心模块注册。</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Module</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Global</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@nestjs/common</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">CatsController</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./cats.controller</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">CatsService</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./cats.service</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Global</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">controllers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">CatsController</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">providers</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">CatsService</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">exports</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">CatsService</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">CatsModule</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Module</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Global</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@nestjs/common</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">CatsController</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./cats.controller</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">CatsService</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./cats.service</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Global</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">controllers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">CatsController</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">providers</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">CatsService</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">exports</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">CatsService</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">CatsModule</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><p>在上面的例子中，CatsService 组件将无处不在，而想要使用 CatsService 的模块则不需要在 imports 数组中导入 CatsModule。</p><h2 id="middleware-中间件" tabindex="-1">Middleware 中间件 <a class="header-anchor" href="#middleware-中间件" aria-label="Permalink to &quot;Middleware 中间件&quot;">​</a></h2><p>中间件是在路由处理程序 之前 调用的函数。 中间件函数可以访问请求和响应对象，以及应用程序请求响应周期中的 next() 中间件函数。</p><h2 id="exceptionfilter-异常过滤器" tabindex="-1">ExceptionFilter 异常过滤器 <a class="header-anchor" href="#exceptionfilter-异常过滤器" aria-label="Permalink to &quot;ExceptionFilter 异常过滤器&quot;">​</a></h2><p>内置的异常层负责处理整个应用程序中的所有抛出的异常。当捕获到未处理的异常时，最终用户将收到友好的响应。</p><h3 id="基础异常类" tabindex="-1">基础异常类 <a class="header-anchor" href="#基础异常类" aria-label="Permalink to &quot;基础异常类&quot;">​</a></h3><p>Nest 内置了一个 <code>HttpException</code> 基础异常类。我们可以通过 <code>throw</code> 在特定情况下来抛出异常</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Get</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#BD976A;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">findAll</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// HttpStatus 内置相关错误状态码</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">throw</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">HttpException</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">Forbidden</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">HttpStatus</span><span style="color:#666666;">.</span><span style="color:#BD976A;">FORBIDDEN</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Get</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#B07D48;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">findAll</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// HttpStatus 内置相关错误状态码</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">throw</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">HttpException</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">Forbidden</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">HttpStatus</span><span style="color:#999999;">.</span><span style="color:#B07D48;">FORBIDDEN</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="内置-http-异常类" tabindex="-1">内置 HTTP 异常类 <a class="header-anchor" href="#内置-http-异常类" aria-label="Permalink to &quot;内置 HTTP 异常类&quot;">​</a></h3><ul><li><code>BadRequestException</code></li><li><code>UnauthorizedException</code></li><li><code>NotFoundException</code></li><li><code>ForbiddenException</code></li><li><code>NotAcceptableException</code></li><li><code>RequestTimeoutException</code></li><li><code>ConflictException</code></li><li><code>GoneException</code></li><li><code>PayloadTooLargeException</code></li><li><code>UnsupportedMediaTypeException</code></li><li><code>UnprocessableException</code></li><li><code>InternalServerErrorException</code></li><li><code>NotImplementedException</code></li><li><code>BadGatewayException</code></li><li><code>ServiceUnavailableException</code></li><li><code>GatewayTimeoutException</code></li></ul><h3 id="异常过滤器" tabindex="-1">异常过滤器 <a class="header-anchor" href="#异常过滤器" aria-label="Permalink to &quot;异常过滤器&quot;">​</a></h3><p>异常过滤器，它负责捕获作为 <code>HttpException</code> 类实例的异常，并为它们设置自定义响应逻辑。</p><h2 id="pipe-管道" tabindex="-1">Pipe 管道 <a class="header-anchor" href="#pipe-管道" aria-label="Permalink to &quot;Pipe 管道&quot;">​</a></h2><p>管道有两个典型的应用场景:</p><ul><li>转换：管道将输入数据转换为所需的数据输出(例如，将字符串转换为整数)</li><li>验证：对输入数据进行验证，如果验证成功继续传递; 验证失败则抛出异常</li></ul><h3 id="内置管道" tabindex="-1">内置管道 <a class="header-anchor" href="#内置管道" aria-label="Permalink to &quot;内置管道&quot;">​</a></h3><ul><li><code>ValidationPipe</code></li><li><code>ParseIntPipe</code></li><li><code>ParseFloatPipe</code></li><li><code>ParseBoolPipe</code></li><li><code>ParseArrayPipe</code></li><li><code>ParseUUIDPipe</code></li><li><code>ParseEnumPipe</code></li><li><code>DefaultValuePipe</code></li><li><code>ParseFilePipe</code></li></ul><h3 id="绑定转换管道" tabindex="-1">绑定转换管道 <a class="header-anchor" href="#绑定转换管道" aria-label="Permalink to &quot;绑定转换管道&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Get</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">:id</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#BD976A;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">findOne</span><span style="color:#666666;">(</span><span style="color:#DBD7CAEE;">@</span><span style="color:#80A665;">Param</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">id</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">ParseIntPipe</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">id</span><span style="color:#DBD7CAEE;">: </span><span style="color:#BD976A;">number</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">catsService</span><span style="color:#666666;">.</span><span style="color:#80A665;">findOne</span><span style="color:#666666;">(</span><span style="color:#BD976A;">id</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Get</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">:id</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#B07D48;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">findOne</span><span style="color:#999999;">(</span><span style="color:#393A34;">@</span><span style="color:#59873A;">Param</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">id</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ParseIntPipe</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">id</span><span style="color:#393A34;">: </span><span style="color:#B07D48;">number</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">catsService</span><span style="color:#999999;">.</span><span style="color:#59873A;">findOne</span><span style="color:#999999;">(</span><span style="color:#B07D48;">id</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="类验证器" tabindex="-1">类验证器 <a class="header-anchor" href="#类验证器" aria-label="Permalink to &quot;类验证器&quot;">​</a></h3><p>类验证器是验证管道的一种实现方式</p><p>安装： <code>pnpm install class-validator class-transformer</code></p><p>通过提供的装饰器来进行属性验证</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">IsString</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">IsInt</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">class-validator</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">CreateCatDto</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">@</span><span style="color:#80A665;">IsString</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">name</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">@</span><span style="color:#80A665;">IsInt</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">age</span><span style="color:#666666;">: </span><span style="color:#5DA994;">number</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">@</span><span style="color:#80A665;">IsString</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">breed</span><span style="color:#666666;">: </span><span style="color:#5DA994;">string</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">IsString</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">IsInt</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">class-validator</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">CreateCatDto</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">@</span><span style="color:#59873A;">IsString</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">name</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">@</span><span style="color:#59873A;">IsInt</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">age</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">number</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">@</span><span style="color:#59873A;">IsString</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">breed</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">string</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div>`,45),e=[p];function t(c,r,y,i,d,D){return n(),a("div",null,e)}const E=s(o,[["render",t]]);export{B as __pageData,E as default};
