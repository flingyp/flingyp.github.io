import{_ as s,c as a,o as n,X as l}from"./chunks/framework.6e839c56.js";const E=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/React/Redux.md","filePath":"frontend/React/Redux.md"}'),p={name:"frontend/React/Redux.md"},o=l(`<h2 id="redux" tabindex="-1">Redux <a class="header-anchor" href="#redux" aria-label="Permalink to &quot;Redux&quot;">​</a></h2><p>Redux是一专门用于做状态管理的JS库，集中式管理多个组件共享的状态</p><h2 id="安装" tabindex="-1">安装 <a class="header-anchor" href="#安装" aria-label="Permalink to &quot;安装&quot;">​</a></h2><p><code>npm install redux --save</code></p><p>多数情况下，你还需要使用 <a href="http://github.com/gaearon/react-redux" target="_blank" rel="noreferrer">React 绑定库</a>和<a href="http://github.com/gaearon/redux-devtools" target="_blank" rel="noreferrer">开发者工具</a>。</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">npm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">install</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--save</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">react-redux</span></span>
<span class="line"><span style="color:#80A665;">npm</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">install</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">--save-dev</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D;">redux-devtools</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">npm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--save</span><span style="color:#393A34;"> </span><span style="color:#B56959;">react-redux</span></span>
<span class="line"><span style="color:#59873A;">npm</span><span style="color:#393A34;"> </span><span style="color:#B56959;">install</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">--save-dev</span><span style="color:#393A34;"> </span><span style="color:#B56959;">redux-devtools</span></span></code></pre></div><h2 id="redux-工作流程" tabindex="-1">Redux 工作流程 <a class="header-anchor" href="#redux-工作流程" aria-label="Permalink to &quot;Redux 工作流程&quot;">​</a></h2><p><img src="https://img2018.cnblogs.com/blog/1087883/201812/1087883-20181205145741397-1912744867.png" alt="Redux 工作流程"></p><p>在 React Components 中派发<code>dispatch</code> 出 <strong>Action</strong>，<strong>Store</strong> 会自动调用 <strong>Reducers</strong> 去修改 <code>State</code> 状态后将新的 <code>State</code> 交给 <strong>Store</strong>。 <code>State</code> 发生变化后重新渲染。</p><h2 id="redux-三个核心概念" tabindex="-1">Redux 三个核心概念 <a class="header-anchor" href="#redux-三个核心概念" aria-label="Permalink to &quot;Redux 三个核心概念&quot;">​</a></h2><h3 id="action" tabindex="-1">Action <a class="header-anchor" href="#action" aria-label="Permalink to &quot;Action&quot;">​</a></h3><p>动作对象，包含两个属性（<code>type</code> 标识属性，值为字符串、<code>data</code> 数据属性，值类型任意）</p><p><code>{type: &#39;ADD_STUDENT&#39;, data: {name: &#39;Tom&#39;, age: 20}}</code></p><h3 id="store" tabindex="-1">Store <a class="header-anchor" href="#store" aria-label="Permalink to &quot;Store&quot;">​</a></h3><p>状态数据仓库，强调一下 <strong>Redux 应用只有一个单一的 store</strong></p><p>Store 有以下职责：</p><ul><li>维持应用的 state；</li><li>提供 <a href="https://www.redux.org.cn/docs/api/Store.html#getState" target="_blank" rel="noreferrer"><code>getState()</code></a> 方法获取 state；</li><li>提供 <a href="https://www.redux.org.cn/docs/api/Store.html#dispatch" target="_blank" rel="noreferrer"><code>dispatch(action)</code></a> 方法更新 state；</li><li>通过 <a href="https://www.redux.org.cn/docs/api/Store.html#subscribe" target="_blank" rel="noreferrer"><code>subscribe(listener)</code></a> 注册监听器;</li><li>通过 <a href="https://www.redux.org.cn/docs/api/Store.html#replaceReducer" target="_blank" rel="noreferrer"><code>replaceReducer(nextReducer)</code></a> 返回的函数注销监听器。</li></ul><h3 id="reducers" tabindex="-1">Reducers <a class="header-anchor" href="#reducers" aria-label="Permalink to &quot;Reducers&quot;">​</a></h3><p>是个函数通过获取动作改变 <code>State</code> 状态，生成个新的 <code>State</code> 状态</p><p>注意：Reducers 只负责修改数据状态，不负责重新更新渲染页面</p><h2 id="redux-编写流程" tabindex="-1">Redux 编写流程 <a class="header-anchor" href="#redux-编写流程" aria-label="Permalink to &quot;Redux 编写流程&quot;">​</a></h2><h3 id="创建-store" tabindex="-1">创建 Store <a class="header-anchor" href="#创建-store" aria-label="Permalink to &quot;创建 Store&quot;">​</a></h3><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createStore</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">redux</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Reducer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./Reducer</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createStore</span><span style="color:#666666;">(</span><span style="color:#BD976A;">Reducer</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createStore</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">redux</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Reducer</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./Reducer</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createStore</span><span style="color:#999999;">(</span><span style="color:#B07D48;">Reducer</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span></span></code></pre></div><h3 id="创建纯函数-reducer" tabindex="-1">创建纯函数 Reducer <a class="header-anchor" href="#创建纯函数-reducer" aria-label="Permalink to &quot;创建纯函数 Reducer&quot;">​</a></h3><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// Reducer.js</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defaultState</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 初始化默认值State</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Reducer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">previousState</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defaultState</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#BD976A;">type</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">data</span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 根据不同的Action Type返回不同的State</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">newState</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Reducer.js</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defaultState</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 初始化默认值State</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Reducer</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">previousState</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defaultState</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#B07D48;">type</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">data</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 根据不同的Action Type返回不同的State</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">newState</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="组件中获取store的状态数据" tabindex="-1">组件中获取Store的状态数据 <a class="header-anchor" href="#组件中获取store的状态数据" aria-label="Permalink to &quot;组件中获取Store的状态数据&quot;">​</a></h3><p>在组件中通过 <code>store.getState()</code> 获取数据</p><h3 id="组件中修改store的状态数据" tabindex="-1">组件中修改Store的状态数据 <a class="header-anchor" href="#组件中修改store的状态数据" aria-label="Permalink to &quot;组件中修改Store的状态数据&quot;">​</a></h3><p>在组件调用 <code>store.dispatch({type: &#39;&#39;, data: {}})</code> 方法去执行 <code>Reducer</code></p><ul><li><code>dispatch</code> 派发</li></ul><h3 id="状态数据发生变化后-更新页面" tabindex="-1">状态数据发生变化后，更新页面 <a class="header-anchor" href="#状态数据发生变化后-更新页面" aria-label="Permalink to &quot;状态数据发生变化后，更新页面&quot;">​</a></h3><p>通过 <code>store.subscribe(callback)</code> 方法，在数据发送变化后，执行回调</p><ul><li><code>subscribe</code> 订阅</li></ul><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#80A665;">componentDidMount</span><span style="color:#666666;">(){</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">//检测Redux中状态的变化，只要变化就更新页面变化</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">store</span><span style="color:#666666;">.</span><span style="color:#80A665;">subscribe</span><span style="color:#666666;">(()=&gt;{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">setState</span><span style="color:#666666;">({})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#59873A;">componentDidMount</span><span style="color:#999999;">(){</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">//检测Redux中状态的变化，只要变化就更新页面变化</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">subscribe</span><span style="color:#999999;">(()=&gt;{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">setState</span><span style="color:#999999;">({})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="redux-devtools-调试插件" tabindex="-1">Redux DevTools 调试插件 <a class="header-anchor" href="#redux-devtools-调试插件" aria-label="Permalink to &quot;Redux DevTools 调试插件&quot;">​</a></h2><ol><li>在谷歌浏览器下载 Redux DevTools 插件</li><li>配置 Redux DevTools 插件 <ul><li><a href="https://github.com/zalmoxisus/redux-devtools-extension" target="_blank" rel="noreferrer">Github 网址</a></li></ul></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 只需要要 创建 store 仓库添加下面一条代码，就是最简单的配置</span></span>
<span class="line"><span style="color:#758575DD;">// 3. 创建 store 仓库</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createStore</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">reducer</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">++</span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">__REDUX_DEVTOOLS_EXTENSION__</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">&amp;&amp;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#80A665;">__REDUX_DEVTOOLS_EXTENSION__</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 只需要要 创建 store 仓库添加下面一条代码，就是最简单的配置</span></span>
<span class="line"><span style="color:#A0ADA0;">// 3. 创建 store 仓库</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createStore</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">reducer</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">++</span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">__REDUX_DEVTOOLS_EXTENSION__</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">&amp;&amp;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#59873A;">__REDUX_DEVTOOLS_EXTENSION__</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()</span></span></code></pre></div><h2 id="写-redux-的小技巧" tabindex="-1">写 Redux 的小技巧 <a class="header-anchor" href="#写-redux-的小技巧" aria-label="Permalink to &quot;写 Redux 的小技巧&quot;">​</a></h2><h4 id="把-action-types-单独-写入一个文件" tabindex="-1">把 Action types 单独 写入一个文件 <a class="header-anchor" href="#把-action-types-单独-写入一个文件" aria-label="Permalink to &quot;把 Action types 单独 写入一个文件&quot;">​</a></h4><blockquote><p>写<code>Redux Action</code>的时候，我们写了很多 Action 的派发，产生了很多<code>Action Types</code>，如果需要<code>Action</code>的地方我们就自己命名一个<code>Type</code>,会出现两个基本问题：</p><ul><li>这些 Types 如果不统一管理，不利于大型项目的服用，设置会长生冗余代码。</li><li>因为<code>Action</code>里的<code>Type</code>，一定要和<code>Reducer</code>里的<code>type</code>一一对应在，所以这部分代码或字母写错后，浏览器里并没有明确的报错，这给调试带来了极大的困难。</li></ul></blockquote><p>建议把 Action Type 拆分出来， 把 type 变量名 放在一个文件统一管理</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 例子：</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">TYPE_1</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">type1</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">TYPE_2</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">type2</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">TYPE_3</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">type3</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 例子：</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">TYPE_1</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">type1</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">TYPE_2</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">type2</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">TYPE_3</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">type3</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span></code></pre></div><h4 id="把-action-也单独写入一个文件" tabindex="-1">把 Action 也单独写入一个文件 <a class="header-anchor" href="#把-action-也单独写入一个文件" aria-label="Permalink to &quot;把 Action 也单独写入一个文件&quot;">​</a></h4><blockquote><p>组件里有很多 Action，并且分散才程序的各个地方，如果庞大的工程，这势必会造成严重的混乱</p></blockquote><p>拿自己的 todo 案例：</p><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 在组件引入</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#BD976A;">changeInputAction</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">addItemAction</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">deleteItemAction</span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./store/actionCreators</span><span style="color:#C98A7D99;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">changeInputValue</span><span style="color:#666666;">(</span><span style="color:#BD976A;">e</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 实时获取输入框内容 e.target.value</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">changeInputAction</span><span style="color:#666666;">(</span><span style="color:#BD976A;">e</span><span style="color:#666666;">.</span><span style="color:#BD976A;">target</span><span style="color:#666666;">.</span><span style="color:#BD976A;">value</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">store</span><span style="color:#666666;">.</span><span style="color:#80A665;">dispatch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">action</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">storeChange</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">setState</span><span style="color:#666666;">(</span><span style="color:#BD976A;">store</span><span style="color:#666666;">.</span><span style="color:#80A665;">getState</span><span style="color:#666666;">())</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">clickBtn</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">addItemAction</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">store</span><span style="color:#666666;">.</span><span style="color:#80A665;">dispatch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">action</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#80A665;">deleteItem</span><span style="color:#666666;">(</span><span style="color:#BD976A;">index</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 获取 index</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">deleteItemAction</span><span style="color:#666666;">(</span><span style="color:#BD976A;">index</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">store</span><span style="color:#666666;">.</span><span style="color:#80A665;">dispatch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">action</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 在组件引入</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#B07D48;">changeInputAction</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">addItemAction</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">deleteItemAction</span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./store/actionCreators</span><span style="color:#B5695999;">&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">changeInputValue</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 实时获取输入框内容 e.target.value</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">changeInputAction</span><span style="color:#999999;">(</span><span style="color:#B07D48;">e</span><span style="color:#999999;">.</span><span style="color:#B07D48;">target</span><span style="color:#999999;">.</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">dispatch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">action</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">storeChange</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">setState</span><span style="color:#999999;">(</span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">getState</span><span style="color:#999999;">())</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">clickBtn</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">addItemAction</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">dispatch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">action</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#59873A;">deleteItem</span><span style="color:#999999;">(</span><span style="color:#B07D48;">index</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 获取 index</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">deleteItemAction</span><span style="color:#999999;">(</span><span style="color:#B07D48;">index</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">dispatch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">action</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// Action 文件  来管理 action 对象</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">CHANGE_INPUT</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">ADD_ITEM</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">DELETE_ITEM</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./actionTypes</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">changeInputAction</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">value</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">type</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">CHANGE_INPUT</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">value</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">addItemAction</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">type</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">ADD_ITEM</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">deleteItemAction</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">index</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">type</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">DELETE_ITEM</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">index</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">};</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// Action 文件  来管理 action 对象</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">CHANGE_INPUT</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ADD_ITEM</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">DELETE_ITEM</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./actionTypes</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">changeInputAction</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">value</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">type</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">CHANGE_INPUT</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">addItemAction</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">type</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ADD_ITEM</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">deleteItemAction</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">index</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">type</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">DELETE_ITEM</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">index</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre></div><h2 id="redux-三个小坑" tabindex="-1">Redux 三个小坑 <a class="header-anchor" href="#redux-三个小坑" aria-label="Permalink to &quot;Redux 三个小坑&quot;">​</a></h2><h3 id="store-必须是唯一的" tabindex="-1">Store 必须是唯一的 <a class="header-anchor" href="#store-必须是唯一的" aria-label="Permalink to &quot;Store 必须是唯一的&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">在一个文件中用createStore()方法，声明了一个store，之后整个应用都得使用这个store</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">在一个文件中用createStore()方法，声明了一个store，之后整个应用都得使用这个store</span></span></code></pre></div><h3 id="只有-store-能改变自己的数据内容-reducer-不能改变" tabindex="-1">只有 Store 能改变自己的数据内容， Reducer 不能改变 <a class="header-anchor" href="#只有-store-能改变自己的数据内容-reducer-不能改变" aria-label="Permalink to &quot;只有 Store 能改变自己的数据内容， Reducer 不能改变&quot;">​</a></h3><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">很多小伙伴会认为把业务逻辑写在了Reducer中，那改变state值的一定是Reducer，</span></span>
<span class="line"><span style="color:#dbd7caee;">其实不然，在Reducer中我们只是作了一个返回，返回到了store中，并没有作任何改变。</span></span>
<span class="line"><span style="color:#dbd7caee;"></span></span>
<span class="line"><span style="color:#dbd7caee;">Reudcer只是返回了更改的数据，但是并没有更改store中的数据，</span></span>
<span class="line"><span style="color:#dbd7caee;">store拿到了Reducer的数据，自己对自己进行了更新。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">很多小伙伴会认为把业务逻辑写在了Reducer中，那改变state值的一定是Reducer，</span></span>
<span class="line"><span style="color:#393a34;">其实不然，在Reducer中我们只是作了一个返回，返回到了store中，并没有作任何改变。</span></span>
<span class="line"><span style="color:#393a34;"></span></span>
<span class="line"><span style="color:#393a34;">Reudcer只是返回了更改的数据，但是并没有更改store中的数据，</span></span>
<span class="line"><span style="color:#393a34;">store拿到了Reducer的数据，自己对自己进行了更新。</span></span></code></pre></div><h3 id="reducer-必须是纯函数" tabindex="-1">Reducer 必须是纯函数 <a class="header-anchor" href="#reducer-必须是纯函数" aria-label="Permalink to &quot;Reducer 必须是纯函数&quot;">​</a></h3><blockquote><p>纯函数的定义：一个函数的返回结果只依赖其参数，并且执行过程中没有副作用</p><p>函数执行的过程中对外部产生了可观察的变化，我们就说函数产生了副作用。 例如修改外部的变量、调用 DOM API 修改页面，发送 Ajax 请求、调用 window.reload 刷新浏览器甚至是 console.log 打印数据，都是副作用</p></blockquote><p><strong>永远不要</strong>在 reducer 里做这些操作：</p><ul><li>修改传入参数；</li><li>执行有副作用的操作，如 API 请求和路由跳转；</li><li>调用非纯函数，如 <code>Date.now()</code> 或 <code>Math.random()</code>。</li></ul><h2 id="redux-中间件" tabindex="-1">Redux 中间件 <a class="header-anchor" href="#redux-中间件" aria-label="Permalink to &quot;Redux 中间件&quot;">​</a></h2><blockquote><p>如果用过 express.js 之类的 web 框架，对中间件（Middleware）这个概念可能不会陌生。<strong>中间件</strong>其实就是一种独立运行于各个框架组件之间的胶水代码。在 Express.js 或 Koa 等框架中，中间件通常是运行在收到请求到处理请求之间，可是实现日志记录、身份认证等预处理操作。</p><p>而在 Redux 里，中间件是运行在 action 发送出去，到达 reducer 之间的一段代码。</p></blockquote><h3 id="redux-thunk-中间件" tabindex="-1">redux-thunk 中间件 <a class="header-anchor" href="#redux-thunk-中间件" aria-label="Permalink to &quot;redux-thunk 中间件&quot;">​</a></h3><p><a href="https://github.com/reduxjs/redux-thunk" target="_blank" rel="noreferrer">Github 地址</a></p><h4 id="安装-1" tabindex="-1">安装 <a class="header-anchor" href="#安装-1" aria-label="Permalink to &quot;安装&quot;">​</a></h4><p><code>npm install --save redux-thunk</code></p><h4 id="配置-redux-thunk-中间件" tabindex="-1">配置 redux-thunk 中间件 <a class="header-anchor" href="#配置-redux-thunk-中间件" aria-label="Permalink to &quot;配置 redux-thunk 中间件&quot;">​</a></h4><ol><li>如果你没有 <strong>Redux DevTools 调试插件</strong> 官方提供的配置步骤就是正确的</li></ol><ul><li>要启用 Redux Thunk，请使用 <code>applyMiddleware()</code></li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createStore</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">applyMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">thunk</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux-thunk</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">reducer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./reducers/index</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// Note: this API requires redux@&gt;=3.1.0</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createStore</span><span style="color:#666666;">(</span><span style="color:#BD976A;">reducer</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">applyMiddleware</span><span style="color:#666666;">(</span><span style="color:#BD976A;">thunk</span><span style="color:#666666;">));</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createStore</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">applyMiddleware</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">thunk</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux-thunk</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">reducer</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./reducers/index</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// Note: this API requires redux@&gt;=3.1.0</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createStore</span><span style="color:#999999;">(</span><span style="color:#B07D48;">reducer</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#59873A;">applyMiddleware</span><span style="color:#999999;">(</span><span style="color:#B07D48;">thunk</span><span style="color:#999999;">));</span></span></code></pre></div><ol start="2"><li>如果你之前配置了 <strong>Redux DevTools 调试插件</strong></li></ol><p><code>const store = createStore(rootReducer, applyMiddleware(thunk));</code></p><ul><li>createStore() 函数的第二个参数就是 Redux DevTools 的 配置 <ul><li><code>window.__REDUX_DEVTOOLS_EXTENSION__ &amp;&amp; window.__REDUX_DEVTOOLS_EXTENSION__()</code></li></ul></li><li>这个时候 官方的配置就没有用了</li></ul><p><strong>方法：</strong></p><ol><li><p>如果想两个同时使用，需要使用<strong>增强函数</strong>。使用增加函数前需要先引入<code>compose</code></p><ol><li><code>import { createStore , applyMiddleware ,compose } from &#39;redux&#39;</code></li></ol></li><li><p>然后利用<code>compose</code>创造一个增强函数，就相当于建立了一个链式函数，代码如下:</p><ol><li><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">composeEnhancers</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#80A665;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span style="color:#666666;">({})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">compose</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">composeEnhancers</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#59873A;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span style="color:#999999;">({})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">compose</span><span style="color:#999999;">;</span></span></code></pre></div></li></ol></li><li><p>有了增强函数后，就可以把<code>thunk</code>加入进来了，这样两个函数就都会执行了。</p><ol><li><code>const enhancer = composeEnhancers(applyMiddleware(thunk))</code></li></ol></li><li><p>这时候直接在<code>createStore</code>函数中的第二个参数，使用这个<code>enhancer</code>变量就可以了，相当于两个函数都执行了。</p><ol><li><code>const store = createStore( reducer, enhancer) // 创建数据存储仓库</code></li></ol></li><li><p><strong>也许对增加函数还不能完全理解，其实你完全把这个想成固定代码，直接使用就好，</strong></p></li></ol><p>全部代码：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createStore</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">applyMiddleware</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">compose</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">//  引入createStore方法</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">reducer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./reducer</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">thunk</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux-thunk</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">composeEnhancers</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#80A665;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span style="color:#666666;">({})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">compose</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">enhancer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">composeEnhancers</span><span style="color:#666666;">(</span><span style="color:#80A665;">applyMiddleware</span><span style="color:#666666;">(</span><span style="color:#BD976A;">thunk</span><span style="color:#666666;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createStore</span><span style="color:#666666;">(</span><span style="color:#BD976A;">reducer</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">enhancer</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 创建数据存储仓库</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">//暴露出去</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createStore</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">applyMiddleware</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">compose</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">//  引入createStore方法</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">reducer</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./reducer</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">thunk</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux-thunk</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">composeEnhancers</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#59873A;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span style="color:#999999;">({})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">compose</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">enhancer</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">composeEnhancers</span><span style="color:#999999;">(</span><span style="color:#59873A;">applyMiddleware</span><span style="color:#999999;">(</span><span style="color:#B07D48;">thunk</span><span style="color:#999999;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createStore</span><span style="color:#999999;">(</span><span style="color:#B07D48;">reducer</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">enhancer</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 创建数据存储仓库</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">//暴露出去</span></span></code></pre></div><h4 id="redux-thunk-基本使用方法" tabindex="-1">Redux-thunk 基本使用方法 <a class="header-anchor" href="#redux-thunk-基本使用方法" aria-label="Permalink to &quot;Redux-thunk 基本使用方法&quot;">​</a></h4><blockquote><p>以前<code>actionCreators.js</code>都是定义好的 action，根本没办法写业务逻辑，有了<code>Redux-thunk</code>之后，可以把<code>TodoList.js</code>中的<code>componentDidMount</code>业务逻辑放到这里来编写。也就是把向后台请求数据的代码放到<code>actionCreators.js</code>文件里。那我们需要引入<code>axios</code>,并写一个新的函数方法。（以前的 action 是对象，现在的 action 可以是函数了，这就是<code>redux-thunk</code>带来的好处）</p></blockquote><p><a href="https://zhuanlan.zhihu.com/p/85403048" target="_blank" rel="noreferrer">理解</a></p><p>使用步骤：</p><ol><li>在 平时创建 action 文件中 写个 action 但是 这次<strong>return</strong>的是 <strong>函数</strong> 不是对象</li><li><strong>函数内部就是用于处理一些异步操作</strong></li><li>在组件逻辑部分里执行这个 action 后 接收一个返回值 就是 上面的<strong>函数</strong>。 再 store.dispatch(action) 回去执行 action 函数的代码</li></ol><p>举个列子：</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 在 actionCreators 文件中</span></span>
<span class="line"><span style="color:#758575DD;">// 使用 Redux-thunk 后 现在的 action可以是个函数</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getSongData</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">dispatch</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">axios</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">http://120.25.163.140:3000/playlist/hot</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">).</span><span style="color:#80A665;">then</span><span style="color:#666666;">((</span><span style="color:#BD976A;">res</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">data</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">res</span><span style="color:#666666;">.</span><span style="color:#BD976A;">data</span><span style="color:#666666;">.</span><span style="color:#BD976A;">tags</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">data</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 最后数据 data 是通过另外一个 action 对象 给 dispatch 回 store</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">dispatch</span><span style="color:#666666;">(</span><span style="color:#80A665;">songData</span><span style="color:#666666;">(</span><span style="color:#BD976A;">data</span><span style="color:#666666;">));</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">songData</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">song</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">type</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">SONG_DATA</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">song</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 在 reducer.js 文件中</span></span>
<span class="line"><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">action</span><span style="color:#666666;">.</span><span style="color:#BD976A;">type</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">===</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">SONG_DATA</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">newState</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">parse</span><span style="color:#666666;">(</span><span style="color:#BD976A;">JSON</span><span style="color:#666666;">.</span><span style="color:#80A665;">stringify</span><span style="color:#666666;">(</span><span style="color:#BD976A;">state</span><span style="color:#666666;">));</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 对 state 深度拷贝</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">newState</span><span style="color:#666666;">[</span><span style="color:#BD976A;">action</span><span style="color:#666666;">.</span><span style="color:#BD976A;">type</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span><span style="color:#666666;">.</span><span style="color:#BD976A;">song</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">newState</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 在 actionCreators 文件中</span></span>
<span class="line"><span style="color:#A0ADA0;">// 使用 Redux-thunk 后 现在的 action可以是个函数</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getSongData</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">dispatch</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">axios</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">http://120.25.163.140:3000/playlist/hot</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">).</span><span style="color:#59873A;">then</span><span style="color:#999999;">((</span><span style="color:#B07D48;">res</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">data</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">res</span><span style="color:#999999;">.</span><span style="color:#B07D48;">data</span><span style="color:#999999;">.</span><span style="color:#B07D48;">tags</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">data</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 最后数据 data 是通过另外一个 action 对象 给 dispatch 回 store</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">dispatch</span><span style="color:#999999;">(</span><span style="color:#59873A;">songData</span><span style="color:#999999;">(</span><span style="color:#B07D48;">data</span><span style="color:#999999;">));</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">songData</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">song</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">type</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">SONG_DATA</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">song</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 在 reducer.js 文件中</span></span>
<span class="line"><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">action</span><span style="color:#999999;">.</span><span style="color:#B07D48;">type</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">===</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">SONG_DATA</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">newState</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">parse</span><span style="color:#999999;">(</span><span style="color:#B07D48;">JSON</span><span style="color:#999999;">.</span><span style="color:#59873A;">stringify</span><span style="color:#999999;">(</span><span style="color:#B07D48;">state</span><span style="color:#999999;">));</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 对 state 深度拷贝</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">newState</span><span style="color:#999999;">[</span><span style="color:#B07D48;">action</span><span style="color:#999999;">.</span><span style="color:#B07D48;">type</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span><span style="color:#999999;">.</span><span style="color:#B07D48;">song</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">newState</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><div class="language-jsx vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">jsx</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 在  组件的逻辑文件中 componentDidMount 生命函数里</span></span>
<span class="line"><span style="color:#80A665;">componentDidMount</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 执行 上面的函数 会 return 一个 函数回来 就是这个 action</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">action</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getSongData</span><span style="color:#666666;">()</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#BD976A;">action</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">//  这里的 store.dispatch(action) 相当于 执行了 action这个函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">store</span><span style="color:#666666;">.</span><span style="color:#80A665;">dispatch</span><span style="color:#666666;">(</span><span style="color:#BD976A;">action</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 在  组件的逻辑文件中 componentDidMount 生命函数里</span></span>
<span class="line"><span style="color:#59873A;">componentDidMount</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 执行 上面的函数 会 return 一个 函数回来 就是这个 action</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">action</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getSongData</span><span style="color:#999999;">()</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B07D48;">action</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">//  这里的 store.dispatch(action) 相当于 执行了 action这个函数</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">store</span><span style="color:#999999;">.</span><span style="color:#59873A;">dispatch</span><span style="color:#999999;">(</span><span style="color:#B07D48;">action</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="redux-saga-中间件" tabindex="-1">redux-saga 中间件 <a class="header-anchor" href="#redux-saga-中间件" aria-label="Permalink to &quot;redux-saga 中间件&quot;">​</a></h3><p><a href="https://github.com/redux-saga/redux-saga" target="_blank" rel="noreferrer">Github 地址</a></p><h4 id="安装-2" tabindex="-1">安装 <a class="header-anchor" href="#安装-2" aria-label="Permalink to &quot;安装&quot;">​</a></h4><p><code>cnpm install redux-saga --save</code></p><h4 id="配置-redux-saga-中间件" tabindex="-1">配置 redux-saga 中间件 <a class="header-anchor" href="#配置-redux-saga-中间件" aria-label="Permalink to &quot;配置 redux-saga 中间件&quot;">​</a></h4><ol><li>如果没有配置了 <strong>Redux DevTools 调试插件</strong></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createStore</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">applyMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createSagaMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux-saga</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#758575DD;">// redux-saga希望你把业务逻辑单独写一个文件</span></span>
<span class="line"><span style="color:#758575DD;">// 在 sagas文件中 最先基本的配置 (此处必须使用Generator函数)</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">helloSaga</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./sagas</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">sagaMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createSagaMiddleware</span><span style="color:#666666;">();</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createStore</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">reducer</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">applyMiddleware</span><span style="color:#666666;">(</span><span style="color:#BD976A;">sagaMiddleware</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">sagaMiddleware</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">(</span><span style="color:#BD976A;">helloSaga</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createStore</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">applyMiddleware</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createSagaMiddleware</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux-saga</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#A0ADA0;">// redux-saga希望你把业务逻辑单独写一个文件</span></span>
<span class="line"><span style="color:#A0ADA0;">// 在 sagas文件中 最先基本的配置 (此处必须使用Generator函数)</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">helloSaga</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./sagas</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">sagaMiddleware</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createSagaMiddleware</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createStore</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">reducer</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">applyMiddleware</span><span style="color:#999999;">(</span><span style="color:#B07D48;">sagaMiddleware</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">sagaMiddleware</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">(</span><span style="color:#B07D48;">helloSaga</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span></code></pre></div><ol start="2"><li>如果有配置了 <strong>Redux DevTools 调试插件</strong></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 先再 store的index文件中引入 redux-saga</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createSagaMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux-saga</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">createStore</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">applyMiddleware</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">compose</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">redux</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">reducer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./reducer</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">todoSagas</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./sagas</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">sagaMiddleware</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createSagaMiddleware</span><span style="color:#666666;">();</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">composeEnhancers</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#80A665;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span style="color:#666666;">({})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">compose</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">enhancer</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">composeEnhancers</span><span style="color:#666666;">(</span><span style="color:#80A665;">applyMiddleware</span><span style="color:#666666;">(</span><span style="color:#BD976A;">sagaMiddleware</span><span style="color:#666666;">));</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">createStore</span><span style="color:#666666;">(</span><span style="color:#BD976A;">reducer</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">enhancer</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#BD976A;">sagaMiddleware</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">(</span><span style="color:#BD976A;">todoSagas</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// +</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">store</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 先再 store的index文件中引入 redux-saga</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createSagaMiddleware</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux-saga</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">createStore</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">applyMiddleware</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">compose</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">redux</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">reducer</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./reducer</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">todoSagas</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./sagas</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">sagaMiddleware</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createSagaMiddleware</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">composeEnhancers</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#59873A;">__REDUX_DEVTOOLS_EXTENSION_COMPOSE__</span><span style="color:#999999;">({})</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">compose</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">enhancer</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">composeEnhancers</span><span style="color:#999999;">(</span><span style="color:#59873A;">applyMiddleware</span><span style="color:#999999;">(</span><span style="color:#B07D48;">sagaMiddleware</span><span style="color:#999999;">));</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">createStore</span><span style="color:#999999;">(</span><span style="color:#B07D48;">reducer</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">enhancer</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#B07D48;">sagaMiddleware</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">(</span><span style="color:#B07D48;">todoSagas</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// +</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">store</span><span style="color:#999999;">;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// redux-saga希望你把业务逻辑单独写一个文件</span></span>
<span class="line"><span style="color:#758575DD;">// 在 sagas文件中 最先基本的配置 (此处必须使用Generator函数)</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#4D9375;">*</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">mySaga</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">mySaga</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// redux-saga希望你把业务逻辑单独写一个文件</span></span>
<span class="line"><span style="color:#A0ADA0;">// 在 sagas文件中 最先基本的配置 (此处必须使用Generator函数)</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#1E754F;">*</span><span style="color:#393A34;"> </span><span style="color:#59873A;">mySaga</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mySaga</span><span style="color:#999999;">;</span></span></code></pre></div>`,91),e=[o];function t(c,r,y,D,A,i){return n(),a("div",null,e)}const B=s(p,[["render",t]]);export{E as __pageData,B as default};
