import{_ as s,c as a,o as n,X as l}from"./chunks/framework.6e839c56.js";const d=JSON.parse('{"title":"NextJS","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/React/NextJS.md","filePath":"frontend/React/NextJS.md"}'),p={name:"frontend/React/NextJS.md"},o=l(`<h1 id="nextjs" tabindex="-1">NextJS <a class="header-anchor" href="#nextjs" aria-label="Permalink to &quot;NextJS&quot;">​</a></h1><blockquote><p>Next.js 是一个轻量级的 React 服务端渲染应用框架。</p><p><a href="https://nextjs.frontendx.cn/" target="_blank" rel="noreferrer">文档网址</a></p></blockquote><h2 id="搭建项目" tabindex="-1">搭建项目 <a class="header-anchor" href="#搭建项目" aria-label="Permalink to &quot;搭建项目&quot;">​</a></h2><h3 id="手动搭建" tabindex="-1">手动搭建 <a class="header-anchor" href="#手动搭建" aria-label="Permalink to &quot;手动搭建&quot;">​</a></h3><ol><li>在搭建的文件夹 <code>npm init</code> 项目初始化</li><li>安装 <code>react</code> 、<code>react-dom</code> 、<code>next</code><ol><li><code>npm install --save react react-dom next</code></li></ol></li><li>增加快捷命令</li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">scripts</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;">: </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">test</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">echo </span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;">Error: no test specified</span><span style="color:#C99076;">\\&quot;</span><span style="color:#C98A7D;"> &amp;&amp; exit 1</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">dev</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#B8A965;"> </span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">build</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#B8A965;"> </span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;"> next build</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">start</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#B8A965;"> </span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next start</span><span style="color:#C98A7D99;">&quot;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">},</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">scripts</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;">: </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">test</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">echo </span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;">Error: no test specified</span><span style="color:#A65E2B;">\\&quot;</span><span style="color:#B56959;"> &amp;&amp; exit 1</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">dev</span><span style="color:#B5695999;">&quot;</span><span style="color:#998418;"> </span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">build</span><span style="color:#B5695999;">&quot;</span><span style="color:#998418;"> </span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;"> next build</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">start</span><span style="color:#B5695999;">&quot;</span><span style="color:#998418;"> </span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next start</span><span style="color:#B5695999;">&quot;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">},</span></span></code></pre></div><ol start="4"><li>文件系统是主要的 API. 每个<code>.js</code> 文件将变成一个路由，自动处理和渲染。 <strong>在 目录下 新建一个文件夹 <code>pages</code></strong>， 先试试 hello word , 在<strong>文件夹下 新建文件 <code>index.js</code></strong></li></ol><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 编写如下代码</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Index</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">Hello Next.js</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Index</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 编写如下代码</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Index</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">Hello Next.js</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Index</span><span style="color:#999999;">;</span></span></code></pre></div><ol start="5"><li>运行 <code>npm run dev</code> 命令 并打开 <code>http://localhost:3000</code> 查看效果</li></ol><h3 id="脚手架自动搭建-create-next-app" tabindex="-1"><strong>脚手架自动搭建 create-next-app</strong> <a class="header-anchor" href="#脚手架自动搭建-create-next-app" aria-label="Permalink to &quot;**脚手架自动搭建 create-next-app**&quot;">​</a></h3><ol><li>全局安装 脚手架</li></ol><ul><li><code>npm install -g create-next-app</code></li></ul><ol start="2"><li>可以通过 npm 或者 npx 安装项目</li></ol><ul><li><code>npx create-next-app next-name</code></li></ul><ol start="3"><li>查看项目基本目录</li></ol><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">.next</span></span>
<span class="line"><span style="color:#dbd7caee;">.node_modules</span></span>
<span class="line"><span style="color:#dbd7caee;">pages</span></span>
<span class="line"><span style="color:#dbd7caee;">	api</span></span>
<span class="line"><span style="color:#dbd7caee;">		index.js</span></span>
<span class="line"><span style="color:#dbd7caee;">public</span></span>
<span class="line"><span style="color:#dbd7caee;">.gitignore</span></span>
<span class="line"><span style="color:#dbd7caee;">package-lock.json</span></span>
<span class="line"><span style="color:#dbd7caee;">package.json</span></span>
<span class="line"><span style="color:#dbd7caee;">README.md</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">.next</span></span>
<span class="line"><span style="color:#393a34;">.node_modules</span></span>
<span class="line"><span style="color:#393a34;">pages</span></span>
<span class="line"><span style="color:#393a34;">	api</span></span>
<span class="line"><span style="color:#393a34;">		index.js</span></span>
<span class="line"><span style="color:#393a34;">public</span></span>
<span class="line"><span style="color:#393a34;">.gitignore</span></span>
<span class="line"><span style="color:#393a34;">package-lock.json</span></span>
<span class="line"><span style="color:#393a34;">package.json</span></span>
<span class="line"><span style="color:#393a34;">README.md</span></span></code></pre></div><h2 id="路由跳转" tabindex="-1">路由跳转 <a class="header-anchor" href="#路由跳转" aria-label="Permalink to &quot;路由跳转&quot;">​</a></h2><h3 id="link-跳转" tabindex="-1"><code>&lt;Link&gt;</code> 跳转 <a class="header-anchor" href="#link-跳转" aria-label="Permalink to &quot;\`&lt;Link&gt;\` 跳转&quot;">​</a></h3><blockquote><p>可以用 <code>Link</code> 组件实现客户端的路由切换</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 1. 引入 Link 组件</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Link</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">next/link</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#758575DD;">// pages/index.js</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">	</span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#666666;">&lt;</span><span style="color:#B8A965;">Link</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">href</span><span style="color:#666666;">=</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">/about</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">			</span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">a</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">here</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">a</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">		</span><span style="color:#666666;">&lt;/</span><span style="color:#B8A965;">Link</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">	</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// pages/about.js</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">p</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">Welcome to About!</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">p</span><span style="color:#666666;">&gt;;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 1. 引入 Link 组件</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Link</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">next/link</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#A0ADA0;">// pages/index.js</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">	</span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#999999;">&lt;</span><span style="color:#998418;">Link</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">href</span><span style="color:#999999;">=</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">/about</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">			</span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">a</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">here</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">a</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">		</span><span style="color:#999999;">&lt;/</span><span style="color:#998418;">Link</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">	</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// pages/about.js</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">p</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">Welcome to About!</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">p</span><span style="color:#999999;">&gt;;</span></span></code></pre></div><h4 id="组件式路由跳转携带参数" tabindex="-1">组件式路由跳转携带参数 <a class="header-anchor" href="#组件式路由跳转携带参数" aria-label="Permalink to &quot;组件式路由跳转携带参数&quot;">​</a></h4><ul><li>组件 Link 接收 URL 对象， 可以携带参数</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// pages/index.js</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Link</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next/link</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;</span><span style="color:#B8A965;">Link</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">href</span><span style="color:#666666;">={{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">pathname</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">/about</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">query</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">name</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">Zeit</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}}&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">a</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">here</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">a</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;/</span><span style="color:#B8A965;">Link</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// 路由跳转 会携带参数</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// pages/index.js</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Link</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next/link</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">Link</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">href</span><span style="color:#999999;">={{</span><span style="color:#393A34;"> </span><span style="color:#998418;">pathname</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">/about</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#998418;">query</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">name</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Zeit</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#999999;">}}&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">a</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">here</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">a</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/</span><span style="color:#998418;">Link</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// 路由跳转 会携带参数</span></span></code></pre></div><h3 id="命令式跳转" tabindex="-1">命令式跳转 <a class="header-anchor" href="#命令式跳转" aria-label="Permalink to &quot;命令式跳转&quot;">​</a></h3><blockquote><p>可以用<code>next/router</code>实现客户端路由切换</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 引入 Router 组件</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Router</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next/router</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#758575DD;">// 通过 Router.push(&#39;/xxx&#39;) 来实现跳转</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    Click </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">span</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">onClick</span><span style="color:#666666;">={()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Router</span><span style="color:#666666;">.</span><span style="color:#80A665;">push</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">/about</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)}&gt;</span><span style="color:#DBD7CAEE;">here</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">span</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> to read more</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 引入 Router 组件</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Router</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next/router</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#A0ADA0;">// 通过 Router.push(&#39;/xxx&#39;) 来实现跳转</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    Click </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">span</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onClick</span><span style="color:#999999;">={()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Router</span><span style="color:#999999;">.</span><span style="color:#59873A;">push</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">/about</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">)}&gt;</span><span style="color:#393A34;">here</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">span</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> to read more</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#999999;">);</span></span></code></pre></div><h4 id="router对象的-api-如下" tabindex="-1"><code>Router</code>对象的 API 如下： <a class="header-anchor" href="#router对象的-api-如下" aria-label="Permalink to &quot;\`Router\`对象的 API 如下：&quot;">​</a></h4><ul><li><code>route</code> - 当前路由的<code>String</code>类型</li><li><code>pathname</code> - 不包含查询内容的当前路径，为<code>String</code>类型</li><li><code>query</code> - 查询内容，被解析成<code>Object</code>类型. 默认为<code>{}</code></li><li><code>asPath</code> - 展现在浏览器上的实际路径，包含查询内容，为<code>String</code>类型</li><li><code>push(url, as=url)</code> - 页面渲染第一个参数 url 的页面，浏览器栏显示的是第二个参数 url</li><li><code>replace(url, as=url)</code> - performs a <code>replaceState</code> call with the given url</li><li><code>beforePopState(cb=function)</code> - 在路由器处理事件之前拦截.</li></ul><h4 id="拦截器-popstate" tabindex="-1">拦截器 popstate <a class="header-anchor" href="#拦截器-popstate" aria-label="Permalink to &quot;拦截器 popstate&quot;">​</a></h4><blockquote><p>有些情况下，在路由跳转前做一些动作。 比如 request 或者 强制 SSR 刷新</p></blockquote><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Router</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next/router</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">Router</span><span style="color:#666666;">.</span><span style="color:#80A665;">beforePopState</span><span style="color:#666666;">(({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">url</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">as</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">options</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#4D9375;">as</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">/</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">||</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">as</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">/other</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">window</span><span style="color:#666666;">.</span><span style="color:#BD976A;">location</span><span style="color:#666666;">.</span><span style="color:#BD976A;">href</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">as</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#758575DD;">// 如果在beforePopState中返回 false，Router将不会执行popstate事件</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Router</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next/router</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">Router</span><span style="color:#999999;">.</span><span style="color:#59873A;">beforePopState</span><span style="color:#999999;">(({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">url</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">as</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">options</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#1E754F;">as</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">/</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">||</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">as</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">/other</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">window</span><span style="color:#999999;">.</span><span style="color:#B07D48;">location</span><span style="color:#999999;">.</span><span style="color:#B07D48;">href</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">as</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#A0ADA0;">// 如果在beforePopState中返回 false，Router将不会执行popstate事件</span></span></code></pre></div><h4 id="编程式路由跳转携带参数" tabindex="-1">编程式路由跳转携带参数 <a class="header-anchor" href="#编程式路由跳转携带参数" aria-label="Permalink to &quot;编程式路由跳转携带参数&quot;">​</a></h4><ul><li><code>push</code> 或 <code>replace</code>可接收的 URL 对象（\`\`组件的 URL 对象一样）来生成 URL。</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Router</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next/router</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">handler</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">Router</span><span style="color:#666666;">.</span><span style="color:#80A665;">push</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">pathname</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">/about</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#B8A965;">query</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">name</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">Zeit</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">},</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    Click </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">span</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">onClick</span><span style="color:#666666;">={</span><span style="color:#BD976A;">handler</span><span style="color:#666666;">}&gt;</span><span style="color:#DBD7CAEE;">here</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">span</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;"> to read more</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Router</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next/router</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">handler</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">Router</span><span style="color:#999999;">.</span><span style="color:#59873A;">push</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">pathname</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">/about</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#998418;">query</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">name</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">Zeit</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">},</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    Click </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">span</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">onClick</span><span style="color:#999999;">={</span><span style="color:#B07D48;">handler</span><span style="color:#999999;">}&gt;</span><span style="color:#393A34;">here</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">span</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;"> to read more</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#999999;">);</span></span></code></pre></div><h2 id="路由的六个钩子事件" tabindex="-1">路由的六个钩子事件 <a class="header-anchor" href="#路由的六个钩子事件" aria-label="Permalink to &quot;路由的六个钩子事件&quot;">​</a></h2><blockquote><p>也可以使用监听路由相关事件</p></blockquote><h3 id="事件列表如下" tabindex="-1">事件列表如下： <a class="header-anchor" href="#事件列表如下" aria-label="Permalink to &quot;事件列表如下：&quot;">​</a></h3><ul><li><code>routeChangeStart(url)</code> - 路由开始切换时触发</li><li><code>routeChangeComplete(url)</code> - 完成路由切换时触发</li><li><code>routeChangeError(err, url)</code> - 路由切换报错时触发</li><li><code>beforeHistoryChange(url)</code> - 浏览器 history 模式开始切换时触发</li><li><code>hashChangeStart(url)</code> - 开始切换 hash 值但是没有切换页面路由时触发</li><li><code>hashChangeComplete(url)</code> - 完成切换 hash 值但是没有切换页面路由时触发</li></ul><p>注意：<code>url</code>是指显示在浏览器中的 url。如果你用了<code>Router.push(url, as)</code>（或类似的方法），那浏览器中的 url 将会显示 as 的值。</p><h3 id="如何使用路由事件" tabindex="-1">如何使用路由事件 <a class="header-anchor" href="#如何使用路由事件" aria-label="Permalink to &quot;如何使用路由事件&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 可以通过 Router.envents.on(&#39;xxx&#39;, () =&gt; {}) 去监听 六个钩子事件</span></span>
<span class="line"><span style="color:#758575DD;">// 以  routeChangeStart 为例：</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">handleRouteChange</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">url</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">App is changing to: </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">url</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#BD976A;">Router</span><span style="color:#666666;">.</span><span style="color:#BD976A;">events</span><span style="color:#666666;">.</span><span style="color:#80A665;">on</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">routeChangeStart</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">handleRouteChange</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 可以通过 Router.envents.on(&#39;xxx&#39;, () =&gt; {}) 去监听 六个钩子事件</span></span>
<span class="line"><span style="color:#A0ADA0;">// 以  routeChangeStart 为例：</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">handleRouteChange</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">url</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">App is changing to: </span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">url</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#B07D48;">Router</span><span style="color:#999999;">.</span><span style="color:#B07D48;">events</span><span style="color:#999999;">.</span><span style="color:#59873A;">on</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">routeChangeStart</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">handleRouteChange</span><span style="color:#999999;">);</span></span></code></pre></div><ul><li>如何不想长事件监听该事件， 可以使用 off 去取消监听</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">Router</span><span style="color:#666666;">.</span><span style="color:#BD976A;">events</span><span style="color:#666666;">.</span><span style="color:#80A665;">off</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">routeChangeStart</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">handleRouteChange</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">Router</span><span style="color:#999999;">.</span><span style="color:#B07D48;">events</span><span style="color:#999999;">.</span><span style="color:#59873A;">off</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">routeChangeStart</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">handleRouteChange</span><span style="color:#999999;">);</span></span></code></pre></div><ul><li>如果路由加载被取消（比如快速连续双击链接）</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#BD976A;">Router</span><span style="color:#666666;">.</span><span style="color:#BD976A;">events</span><span style="color:#666666;">.</span><span style="color:#80A665;">on</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">routeChangeError</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">url</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">err</span><span style="color:#666666;">.</span><span style="color:#BD976A;">cancelled</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">\`</span><span style="color:#C98A7D;">Route to </span><span style="color:#666666;">\${</span><span style="color:#C98A7D;">url</span><span style="color:#666666;">}</span><span style="color:#C98A7D;"> was cancelled取消!</span><span style="color:#C98A7D99;">\`</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">});</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#B07D48;">Router</span><span style="color:#999999;">.</span><span style="color:#B07D48;">events</span><span style="color:#999999;">.</span><span style="color:#59873A;">on</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">routeChangeError</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">url</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">err</span><span style="color:#999999;">.</span><span style="color:#B07D48;">cancelled</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">\`</span><span style="color:#B56959;">Route to </span><span style="color:#999999;">\${</span><span style="color:#B56959;">url</span><span style="color:#999999;">}</span><span style="color:#B56959;"> was cancelled取消!</span><span style="color:#B5695999;">\`</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">});</span></span></code></pre></div><h2 id="数据获取-和-组件的生命周期函数-getinitialprops" tabindex="-1">数据获取 和 组件的生命周期函数 getInitialProps <a class="header-anchor" href="#数据获取-和-组件的生命周期函数-getinitialprops" aria-label="Permalink to &quot;数据获取 和 组件的生命周期函数 getInitialProps&quot;">​</a></h2><blockquote><p>我们挂载一个组件时，常常会需要事先获取一些初始数据，通常我们是将异步方法放入 componentDidAmount 周期函数里调用获取数据，Nextjs 官方推荐使用 getInitialProps 函数作为数据获取规范。</p><p><strong>注意：<code>getInitialProps</code>将不能使用在子组件中。只能使用在<code>pages</code>页面中。</strong></p></blockquote><h3 id="有状态组件定义-getinitialprops" tabindex="-1">有状态组件定义 getInitialProps <a class="header-anchor" href="#有状态组件定义-getinitialprops" aria-label="Permalink to &quot;有状态组件定义 getInitialProps&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// 当页面渲染时加载数据，我们使用了一个异步方法getInitialProps。它能异步获取 JS 普通对象，并绑定在props上。 必须保证 getInitialProps return 的是一个普通JS对象而不是 Date 、Map 或者是Set类型</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">React</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">react</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">extends</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">React</span><span style="color:#666666;">.</span><span style="color:#80A665;">Component</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">static</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">getInitialProps</span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">userAgent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">?</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#666666;">.</span><span style="color:#BD976A;">headers</span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">user-agent</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">]</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">navigator</span><span style="color:#666666;">.</span><span style="color:#BD976A;">userAgent</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">userAgent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">render</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">Hello World </span><span style="color:#666666;">{</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">props</span><span style="color:#666666;">.</span><span style="color:#BD976A;">userAgent</span><span style="color:#666666;">}&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// 当页面渲染时加载数据，我们使用了一个异步方法getInitialProps。它能异步获取 JS 普通对象，并绑定在props上。 必须保证 getInitialProps return 的是一个普通JS对象而不是 Date 、Map 或者是Set类型</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">React</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">react</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">extends</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">React</span><span style="color:#999999;">.</span><span style="color:#59873A;">Component</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">static</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#59873A;">getInitialProps</span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">userAgent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">?</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#999999;">.</span><span style="color:#B07D48;">headers</span><span style="color:#999999;">[</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">user-agent</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">]</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">navigator</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userAgent</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">userAgent</span><span style="color:#393A34;"> </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">render</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">Hello World </span><span style="color:#999999;">{</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">props</span><span style="color:#999999;">.</span><span style="color:#B07D48;">userAgent</span><span style="color:#999999;">}&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="无状态-组件定义-getinitialprops" tabindex="-1">无状态 组件定义 getInitialProps <a class="header-anchor" href="#无状态-组件定义-getinitialprops" aria-label="Permalink to &quot;无状态 组件定义 getInitialProps&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Page</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">stars</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">Next stars: </span><span style="color:#666666;">{</span><span style="color:#BD976A;">stars</span><span style="color:#666666;">}&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#BD976A;">Page</span><span style="color:#666666;">.</span><span style="color:#80A665;">getInitialProps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">req</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">res</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">fetch</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">https://api.github.com/repos/zeit/next.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">json</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">res</span><span style="color:#666666;">.</span><span style="color:#80A665;">json</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#B8A965;">stars</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">json</span><span style="color:#666666;">.</span><span style="color:#BD976A;">stargazers_count</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">};</span></span>
<span class="line"><span style="color:#666666;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Page</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Page</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">stars</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">Next stars: </span><span style="color:#999999;">{</span><span style="color:#B07D48;">stars</span><span style="color:#999999;">}&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B07D48;">Page</span><span style="color:#999999;">.</span><span style="color:#59873A;">getInitialProps</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">req</span><span style="color:#393A34;"> </span><span style="color:#999999;">})</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">res</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#59873A;">fetch</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">https://api.github.com/repos/zeit/next.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">json</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">res</span><span style="color:#999999;">.</span><span style="color:#59873A;">json</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#998418;">stars</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">json</span><span style="color:#999999;">.</span><span style="color:#B07D48;">stargazers_count</span><span style="color:#393A34;"> </span><span style="color:#999999;">};</span></span>
<span class="line"><span style="color:#999999;">};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Page</span><span style="color:#999999;">;</span></span></code></pre></div><h3 id="getinitialprops入参对象的属性如下" tabindex="-1"><code>getInitialProps</code>入参对象的属性如下： <a class="header-anchor" href="#getinitialprops入参对象的属性如下" aria-label="Permalink to &quot;\`getInitialProps\`入参对象的属性如下：&quot;">​</a></h3><ul><li><code>pathname</code> - URL 的 path 部分</li><li><code>query</code> - URL 的 query 部分，并被解析成对象</li><li><code>asPath</code> - 显示在浏览器中的实际路径（包含查询部分），为<code>String</code>类型</li><li><code>req</code> - HTTP 请求对象 (只有服务器端有)</li><li><code>res</code> - HTTP 返回对象 (只有服务器端有)</li><li><code>jsonPageRes</code> - <a href="https://developer.mozilla.org/en-US/docs/Web/API/Response" target="_blank" rel="noreferrer">获取数据响应对象</a> (只有客户端有)</li><li><code>err</code> - 渲染过程中的任何错误</li></ul><p>总结 getInitialProps ：</p><ol><li>确保 getInitialProps 返回的是个普通对象</li><li>执行时间： （页面初始加载时 getInitialProps 只会在服务端加载。只有当路由跳转（Link 组件跳转或 API 方法跳转），客户端才会执行 getInitialProps。）</li><li>函数 只能在 pages 目录的页面使用，不能在 components 组件下使用。</li></ol><h2 id="next-动态导入模块" tabindex="-1">Next 动态导入模块 <a class="header-anchor" href="#next-动态导入模块" aria-label="Permalink to &quot;Next 动态导入模块&quot;">​</a></h2><blockquote><p>动态导入相当于把代码分成各个块管理。Next.js 服务端动态导入功能</p></blockquote><h3 id="基础" tabindex="-1">基础 <a class="header-anchor" href="#基础" aria-label="Permalink to &quot;基础&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">dynamic</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next/dynamic</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 引入 dynamic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">DynamicComponent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">dynamic</span><span style="color:#666666;">(</span><span style="color:#CB7676;">import</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">../components/hello</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;</span><span style="color:#B8A965;">Header</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">/&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;</span><span style="color:#B8A965;">DynamicComponent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">/&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">p</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">HOME PAGE is here!</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">p</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// 自定义组件DynamicComponent是懒加载的，只有在jsx里用到&lt;DynamicComponent/&gt;时，才会被加载进来，如果不使用就不会被加载。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">dynamic</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next/dynamic</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 引入 dynamic</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">DynamicComponent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">dynamic</span><span style="color:#999999;">(</span><span style="color:#AB5959;">import</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">../components/hello</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">Header</span><span style="color:#393A34;"> </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">DynamicComponent</span><span style="color:#393A34;"> </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">p</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">HOME PAGE is here!</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">p</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// 自定义组件DynamicComponent是懒加载的，只有在jsx里用到&lt;DynamicComponent/&gt;时，才会被加载进来，如果不使用就不会被加载。</span></span></code></pre></div><h2 id="使用-head" tabindex="-1">使用 Head <a class="header-anchor" href="#使用-head" aria-label="Permalink to &quot;使用 Head&quot;">​</a></h2><blockquote><p>使用了<code>Next.js</code>框架，就是希望服务端渲染，进行 SEO 操作。那为了更好的进行 SEO 优化，可以自己定制<code>标签，定义</code>一般有两种方式。</p></blockquote><h3 id="在各个页面上加上-head-标签" tabindex="-1">在各个页面上加上 Head 标签 <a class="header-anchor" href="#在各个页面上加上-head-标签" aria-label="Permalink to &quot;在各个页面上加上 Head 标签&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Head</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">next/head</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Header</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">&lt;</span><span style="color:#B8A965;">Head</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">title</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">Next.js！</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">title</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">meta</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">charSet</span><span style="color:#666666;">=</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">utf-8</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">/&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">&lt;/</span><span style="color:#B8A965;">Head</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">&lt;</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span><span style="color:#DBD7CAEE;">nextjs.frontendx.cn</span><span style="color:#666666;">&lt;/</span><span style="color:#4D9375;">div</span><span style="color:#666666;">&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">Header</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#758575DD;">// 这时候 打开浏览器去预览 就发现有 title了。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Head</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">next/head</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Header</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#998418;">Head</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">title</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">Next.js！</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">title</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">meta</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">charSet</span><span style="color:#999999;">=</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">utf-8</span><span style="color:#B5695999;">&quot;</span><span style="color:#393A34;"> </span><span style="color:#999999;">/&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;/</span><span style="color:#998418;">Head</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">&lt;</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span><span style="color:#393A34;">nextjs.frontendx.cn</span><span style="color:#999999;">&lt;/</span><span style="color:#1E754F;">div</span><span style="color:#999999;">&gt;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">&lt;/&gt;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">Header</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#A0ADA0;">// 这时候 打开浏览器去预览 就发现有 title了。</span></span></code></pre></div><h3 id="定义全局的-head" tabindex="-1">定义全局的 Head <a class="header-anchor" href="#定义全局的-head" aria-label="Permalink to &quot;定义全局的 Head&quot;">​</a></h3><ul><li>其实就是相当于自定义了一个组件，然后把<code>Head</code>在组件里定义好，以后每个页面都使用这个组件</li></ul>`,65),e=[o];function t(c,r,y,i,D,A){return n(),a("div",null,e)}const B=s(p,[["render",t]]);export{d as __pageData,B as default};
