import{_ as s,c as a,o as n,X as l}from"./chunks/framework.6e839c56.js";const b=JSON.parse('{"title":"Flex 布局","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/CSS3/Flex.md","filePath":"frontend/CSS3/Flex.md"}'),e={name:"frontend/CSS3/Flex.md"},p=l(`<h1 id="flex-布局" tabindex="-1">Flex 布局 <a class="header-anchor" href="#flex-布局" aria-label="Permalink to &quot;Flex 布局&quot;">​</a></h1><h2 id="介绍" tabindex="-1">介绍 <a class="header-anchor" href="#介绍" aria-label="Permalink to &quot;介绍&quot;">​</a></h2><p>Flex 布局的内容全部参考阮一峰老师的 CSS Grid 网格布局教程 文章。为了更好的查询。 <a href="http://www.ruanyifeng.com/blog/2015/07/flex-grammar.html" target="_blank" rel="noreferrer">阮一峰老师的 Flex 布局教程：语法篇</a></p><p>Flex 是 Flexible Box 的 缩写，意为 <strong>弹性布局</strong>， 用来为盒模型提供最大的灵活性。</p><p>任何一个容器都可以指定为 Flex 布局。 行内元素也可以使用 Flex 布局。</p><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">box</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">display</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">flex</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">box</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">display</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">inline-flex</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/* Webkit 内核的浏览器，必须加上-webkit前缀。 */</span></span>
<span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">box</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">display</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">-webkit-flex</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* Safari */</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">display</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">flex</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">box</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">display</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">flex</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">box</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">display</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">inline-flex</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/* Webkit 内核的浏览器，必须加上-webkit前缀。 */</span></span>
<span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">box</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">display</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">-webkit-flex</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* Safari */</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">display</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">flex</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><strong>注意:</strong> 设为 Flex 布局以后，子元素的 float、clear 和 vertical-align 属性将失效。</p><h2 id="基本概念" tabindex="-1">基本概念 <a class="header-anchor" href="#基本概念" aria-label="Permalink to &quot;基本概念&quot;">​</a></h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称&quot;容器&quot;。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称：项目。</p><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071004.png" alt=""></p><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做 main start，结束位置叫做 main end；交叉轴的开始位置叫做 cross start，结束位置叫做 cross end。</p><h2 id="容器的属性" tabindex="-1">容器的属性 <a class="header-anchor" href="#容器的属性" aria-label="Permalink to &quot;容器的属性&quot;">​</a></h2><ul><li>flex-direction： 决定主轴的方向</li><li>flex-wrap：一条轴线排不下事，是否换行</li><li>flex-flow：上面两种属性合起来的简写形式</li><li>justify-content：决定主轴的对齐方式</li><li>align-items： 决定交叉轴对齐方式</li><li>align-content： 决定多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</li></ul><h3 id="flex-direction-属性" tabindex="-1">flex-direction 属性 <a class="header-anchor" href="#flex-direction-属性" aria-label="Permalink to &quot;flex-direction 属性&quot;">​</a></h3><blockquote><p>属性决定主轴的方向 （即项目的排列方向）</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">row（默认值）：主轴为水平方向，起点在左端。</span></span>
<span class="line"><span style="color:#dbd7caee;">row-reverse：主轴为水平方向，起点在右端。</span></span>
<span class="line"><span style="color:#dbd7caee;">column：主轴为垂直方向，起点在上沿。</span></span>
<span class="line"><span style="color:#dbd7caee;">column-reverse：主轴为垂直方向，起点在下沿。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">row（默认值）：主轴为水平方向，起点在左端。</span></span>
<span class="line"><span style="color:#393a34;">row-reverse：主轴为水平方向，起点在右端。</span></span>
<span class="line"><span style="color:#393a34;">column：主轴为垂直方向，起点在上沿。</span></span>
<span class="line"><span style="color:#393a34;">column-reverse：主轴为垂直方向，起点在下沿。</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071005.png" alt=""></p><h3 id="flex-wrap-属性" tabindex="-1">flex-wrap 属性 <a class="header-anchor" href="#flex-wrap-属性" aria-label="Permalink to &quot;flex-wrap 属性&quot;">​</a></h3><blockquote><p>默认情况下，项目都排在一条线（也称 轴线）。 flex-wrap 属性定义，如果一条轴线排不下，该如何换行</p></blockquote><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071006.png" alt=""></p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">nowrap (默认)。 不换行</span></span>
<span class="line"><span style="color:#dbd7caee;">wrap (换行)。 第一行在上方</span></span>
<span class="line"><span style="color:#dbd7caee;">wrap-reverse (换行)。 第一行在下方</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">nowrap (默认)。 不换行</span></span>
<span class="line"><span style="color:#393a34;">wrap (换行)。 第一行在上方</span></span>
<span class="line"><span style="color:#393a34;">wrap-reverse (换行)。 第一行在下方</span></span></code></pre></div><h3 id="flex-flow-属性" tabindex="-1">flex-flow 属性 <a class="header-anchor" href="#flex-flow-属性" aria-label="Permalink to &quot;flex-flow 属性&quot;">​</a></h3><blockquote><p>是 flex-direction 属性和 flex-wrap 属性的简写形式，默认值为 row nowrap</p></blockquote><h3 id="justify-content-属性" tabindex="-1">justify-content 属性 <a class="header-anchor" href="#justify-content-属性" aria-label="Permalink to &quot;justify-content 属性&quot;">​</a></h3><blockquote><p>定义项目在主轴的对齐方式</p></blockquote><p>具体对齐方式与轴的方向有关。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">flex-start（默认值）：左对齐</span></span>
<span class="line"><span style="color:#dbd7caee;">flex-end：右对齐</span></span>
<span class="line"><span style="color:#dbd7caee;">center： 居中</span></span>
<span class="line"><span style="color:#dbd7caee;">space-between：两端对齐，项目之间的间隔都相等。</span></span>
<span class="line"><span style="color:#dbd7caee;">space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">flex-start（默认值）：左对齐</span></span>
<span class="line"><span style="color:#393a34;">flex-end：右对齐</span></span>
<span class="line"><span style="color:#393a34;">center： 居中</span></span>
<span class="line"><span style="color:#393a34;">space-between：两端对齐，项目之间的间隔都相等。</span></span>
<span class="line"><span style="color:#393a34;">space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071010.png" alt=""></p><h3 id="align-items-属性" tabindex="-1">align-items 属性 <a class="header-anchor" href="#align-items-属性" aria-label="Permalink to &quot;align-items 属性&quot;">​</a></h3><blockquote><p>定义项目在交叉轴上如何对齐</p></blockquote><p>具体的对齐方式与交叉轴的方向有关。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">flex-start：交叉轴的起点对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">flex-end：交叉轴的终点对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">center：交叉轴的中点对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">baseline: 项目的第一行文字的基线对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">flex-start：交叉轴的起点对齐。</span></span>
<span class="line"><span style="color:#393a34;">flex-end：交叉轴的终点对齐。</span></span>
<span class="line"><span style="color:#393a34;">center：交叉轴的中点对齐。</span></span>
<span class="line"><span style="color:#393a34;">baseline: 项目的第一行文字的基线对齐。</span></span>
<span class="line"><span style="color:#393a34;">stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071011.png" alt=""></p><h3 id="align-content-属性" tabindex="-1">align-content 属性 <a class="header-anchor" href="#align-content-属性" aria-label="Permalink to &quot;align-content 属性&quot;">​</a></h3><blockquote><p>定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">flex-start：与交叉轴的起点对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">flex-end：与交叉轴的终点对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">center：与交叉轴的中点对齐。</span></span>
<span class="line"><span style="color:#dbd7caee;">space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</span></span>
<span class="line"><span style="color:#dbd7caee;">space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</span></span>
<span class="line"><span style="color:#dbd7caee;">stretch（默认值）：轴线占满整个交叉轴。</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">flex-start：与交叉轴的起点对齐。</span></span>
<span class="line"><span style="color:#393a34;">flex-end：与交叉轴的终点对齐。</span></span>
<span class="line"><span style="color:#393a34;">center：与交叉轴的中点对齐。</span></span>
<span class="line"><span style="color:#393a34;">space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</span></span>
<span class="line"><span style="color:#393a34;">space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</span></span>
<span class="line"><span style="color:#393a34;">stretch（默认值）：轴线占满整个交叉轴。</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071012.png" alt=""></p><h2 id="项目的属性" tabindex="-1">项目的属性 <a class="header-anchor" href="#项目的属性" aria-label="Permalink to &quot;项目的属性&quot;">​</a></h2><ul><li>order：定义项目的排列顺序。属性越小，排列越前。默认为 0</li><li>flex-grow：定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大</li><li>flex-shrink</li><li>flex-basis</li><li>flex</li><li>align-self： 属性允许单个项目有与其他项目不一样的对齐方式</li></ul><h3 id="order" tabindex="-1">order <a class="header-anchor" href="#order" aria-label="Permalink to &quot;order&quot;">​</a></h3><blockquote><p>属性定义项目的排列顺序。属性越小，排列越前。默认为 0</p></blockquote><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071013.png" alt=""></p><h3 id="flex-grow-属性" tabindex="-1">flex-grow 属性 <a class="header-anchor" href="#flex-grow-属性" aria-label="Permalink to &quot;flex-grow 属性&quot;">​</a></h3><blockquote><p>定义项目的放大比例，默认为 0，即如果存在剩余空间，也不放大。</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">item</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">flex-grow</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> &lt;number&gt;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* default 0 */</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">item</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">flex-grow</span><span style="color:#999999;">:</span><span style="color:#393A34;"> &lt;number&gt;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* default 0 */</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071014.png" alt=""></p><p>如果所有项目的 flex-grow 属性都为 1，则它们将等分剩余空间（如果有的话）。如果一个项目的 flex-grow 属性为 2，其他项目都为 1，则前者占据的剩余空间将比其他项多一倍。</p><h3 id="flex-shrink-属性" tabindex="-1">flex-shrink 属性 <a class="header-anchor" href="#flex-shrink-属性" aria-label="Permalink to &quot;flex-shrink 属性&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">item</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">flex-shrink</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> &lt;number&gt;</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">/* default 1 */</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">item</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">flex-shrink</span><span style="color:#999999;">:</span><span style="color:#393A34;"> &lt;number&gt;</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">/* default 1 */</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071015.jpg" alt=""></p><p>如果所有项目的 flex-shrink 属性都为 1，当空间不足时，都将等比例缩小。如果一个项目的 flex-shrink 属性为 0，其他项目都为 1，则空间不足时，前者不缩小。</p><p>负值对该属性无效。</p><h3 id="flex-basis-属性" tabindex="-1">flex-basis 属性 <a class="header-anchor" href="#flex-basis-属性" aria-label="Permalink to &quot;flex-basis 属性&quot;">​</a></h3><blockquote><p>定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为 auto，即项目的本来大小。</p></blockquote><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#dbd7caee;">.item {</span></span>
<span class="line"><span style="color:#dbd7caee;">  flex-basis: &lt;length&gt; | auto; /* default auto */</span></span>
<span class="line"><span style="color:#dbd7caee;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#393a34;">.item {</span></span>
<span class="line"><span style="color:#393a34;">  flex-basis: &lt;length&gt; | auto; /* default auto */</span></span>
<span class="line"><span style="color:#393a34;">}</span></span></code></pre></div><p>它可以设为跟 width 或 height 属性一样的值（比如 350px），则项目将占据固定空间。</p><h3 id="flex-属性" tabindex="-1">flex 属性 <a class="header-anchor" href="#flex-属性" aria-label="Permalink to &quot;flex 属性&quot;">​</a></h3><blockquote><p>flex 属性是 flex-grow, flex-shrink 和 flex-basis 的简写，默认值为 0 1 auto。后两个属性可选。</p></blockquote><p><strong>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</strong></p><h3 id="align-self-属性" tabindex="-1">align-self 属性 <a class="header-anchor" href="#align-self-属性" aria-label="Permalink to &quot;align-self 属性&quot;">​</a></h3><blockquote><p>align-self 属性允许单个项目有与其他项目不一样的对齐方式，可覆盖 align-items 属性。默认值为 auto，表示继承父元素的 align-items 属性，如果没有父元素，则等同于 stretch。</p></blockquote><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">.</span><span style="color:#BD976A;">item</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#B8A965;">align-self</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">auto</span><span style="color:#DBD7CAEE;"> | </span><span style="color:#C99076;">flex-start</span><span style="color:#DBD7CAEE;"> | </span><span style="color:#C99076;">flex-end</span><span style="color:#DBD7CAEE;"> | </span><span style="color:#C99076;">center</span><span style="color:#DBD7CAEE;"> | </span><span style="color:#C99076;">baseline</span><span style="color:#DBD7CAEE;"> | </span><span style="color:#C99076;">stretch</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">.</span><span style="color:#B07D48;">item</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#998418;">align-self</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">auto</span><span style="color:#393A34;"> | </span><span style="color:#A65E2B;">flex-start</span><span style="color:#393A34;"> | </span><span style="color:#A65E2B;">flex-end</span><span style="color:#393A34;"> | </span><span style="color:#A65E2B;">center</span><span style="color:#393A34;"> | </span><span style="color:#A65E2B;">baseline</span><span style="color:#393A34;"> | </span><span style="color:#A65E2B;">stretch</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p><img src="http://www.ruanyifeng.com/blogimg/asset/2015/bg2015071016.png" alt=""></p>`,63),o=[p];function t(c,r,i,d,y,h){return n(),a("div",null,o)}const f=s(e,[["render",t]]);export{b as __pageData,f as default};
