import{_ as e,c as s,o as r,as as t}from"./chunks/framework.B-x_5eXW.js";const l="/assets/01.Dm5VBGqi.png",o="/assets/02.Uf_dzDIx.png",d="/assets/03.BFnsfmIP.png",p="/assets/04.ZFU7GKot.png",g=JSON.parse('{"title":"部署 Vitepress 项目到 Cloudflare","description":"","frontmatter":{},"headers":[],"relativePath":"posts/部署Vitepress到Cloudflare.md","filePath":"posts/部署Vitepress到Cloudflare.md","lastUpdated":1758165179000}'),i={name:"posts/部署Vitepress到Cloudflare.md"};function n(c,a,f,u,_,h){return r(),s("div",null,a[0]||(a[0]=[t('<h1 id="部署-vitepress-项目到-cloudflare" tabindex="-1">部署 Vitepress 项目到 Cloudflare <a class="header-anchor" href="#部署-vitepress-项目到-cloudflare" aria-label="Permalink to &quot;部署 Vitepress 项目到 Cloudflare&quot;">​</a></h1><h2 id="创建-pages-项目" tabindex="-1">创建 Pages 项目 <a class="header-anchor" href="#创建-pages-项目" aria-label="Permalink to &quot;创建 Pages 项目&quot;">​</a></h2><p>创建 Pages 项目，选择 Github 仓库，可以选择 Vitepress 项目，也可以选择其他项目。</p><p><img src="'+l+'" alt="" data-fancybox="gallery"></p><p>部署完以后， Cloudflare 会生成一个项目地址，这个地址就是你的网站地址。</p><h2 id="配置自定义域名-以阿里云为例" tabindex="-1">配置自定义域名（以阿里云为例） <a class="header-anchor" href="#配置自定义域名-以阿里云为例" aria-label="Permalink to &quot;配置自定义域名（以阿里云为例）&quot;">​</a></h2><h3 id="更改域名的-dns-服务器为-cloudflare" tabindex="-1">更改域名的 DNS 服务器为 Cloudflare <a class="header-anchor" href="#更改域名的-dns-服务器为-cloudflare" aria-label="Permalink to &quot;更改域名的 DNS 服务器为 Cloudflare&quot;">​</a></h3><p>在 Cloudflare 的账号主页，添加域后，Cloudflare 会为你分配两个名称服务器（nameservers），例如 <code>ns1.cloudflare.com</code> 和 <code>ns2.cloudflare.com</code>。 记下这些名称服务器，需要将它们配置到阿里云。</p><p>首先需要到阿里云的域名管理页面，找到你的域名，点击管理，然后修改域名的 DNS 服务器为 Cloudflare 的 DNS 服务器。</p><p><img src="'+o+'" alt="" data-fancybox="gallery"></p><h3 id="添加域名解析" tabindex="-1">添加域名解析 <a class="header-anchor" href="#添加域名解析" aria-label="Permalink to &quot;添加域名解析&quot;">​</a></h3><p>添加对应的 DNS 记录</p><p><img src="'+d+'" alt="" data-fancybox="gallery"></p><p>然后到对应的 Pages 项目中，设置自定义域即可～</p><p><img src="'+p+'" alt="" data-fancybox="gallery"></p>',15)]))}const b=e(i,[["render",n]]);export{g as __pageData,b as default};
