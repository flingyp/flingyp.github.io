import{_ as i,c as a,o as t,ag as e}from"./chunks/framework.BhcQuJV0.js";const c=JSON.parse('{"title":"部署","description":"","frontmatter":{},"headers":[],"relativePath":"backend/Nest/部署NestJS.md","filePath":"backend/Nest/部署NestJS.md","lastUpdated":1743387406000}'),h={name:"backend/Nest/部署NestJS.md"};function l(n,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[e(`<h1 id="部署" tabindex="-1">部署 <a class="header-anchor" href="#部署" aria-label="Permalink to &quot;部署&quot;">​</a></h1><h2 id="安装-nvm" tabindex="-1">安装 NVM <a class="header-anchor" href="#安装-nvm" aria-label="Permalink to &quot;安装 NVM&quot;">​</a></h2><p>在 <a href="https://github.com/nvm-sh/nvm/releases/tag/v0.40.2" target="_blank" rel="noreferrer">https://github.com/nvm-sh/nvm/releases/tag/v0.40.2</a> 下载安装包，并解压</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o-</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://raw.githubusercontent.com/nvm-sh/nvm/v0.40.2/install.sh</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> |</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> bash</span></span></code></pre></div><p>解压安装包到本地</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">tar</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -xvf</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvm-0.40.2.tar.gz</span></span></code></pre></div><p>将解压后的文件夹移动到 <code>~/.nvm</code> 目录下（可选）</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">mv</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> nvm-0.40.2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.nvm</span></span></code></pre></div><p>添加环境变量，编辑你的shell配置文件（如<code>~/.bashrc</code>、<code>~/.bash_profile</code>、<code>~/.zshrc</code>等），在文件末尾添加以下行：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># $HOME/.nvm 是实际安装路径，如果安装在其他目录，请修改为实际路径</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NVM_DIR</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$HOME</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/.nvm&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/nvm.sh&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 加载NVM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">[ </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bash_completion&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> ] &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">\\.</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">$NVM_DIR</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">/bash_completion&quot;</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  # 启用命令补全</span></span></code></pre></div><p>保存文件后，重新加载配置文件：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ~/.bashrc</span></span></code></pre></div><h2 id="安装-git" tabindex="-1">安装 Git <a class="header-anchor" href="#安装-git" aria-label="Permalink to &quot;安装 Git&quot;">​</a></h2><ul><li><code>yum install git</code></li></ul><h2 id="安装-pm2" tabindex="-1">安装 PM2 <a class="header-anchor" href="#安装-pm2" aria-label="Permalink to &quot;安装 PM2&quot;">​</a></h2><ul><li><code>npm install -g pm2</code></li></ul><p>执行命令 <code>pm2</code> 查看是否安装成功</p><p>使用命令启动服务</p><ul><li><code>pm2 start dist/main.js --name &quot;serverName&quot;</code></li></ul><p>使用命令查看服务状态</p><ul><li><code>pm2 list</code></li></ul><p>使用命令停止服务</p><ul><li><code>pm2 stop serverName</code></li></ul><p>使用命令重启服务</p><ul><li><code>pm2 restart serverName</code></li></ul>`,25)]))}const g=i(h,[["render",l]]);export{c as __pageData,g as default};
