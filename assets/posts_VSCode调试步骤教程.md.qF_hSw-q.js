import{_ as s,c as i,o as a,V as t}from"./chunks/framework.CK8YuoVq.js";const u=JSON.parse('{"title":"🦿 VSCode调试步骤教程","description":"","frontmatter":{},"headers":[],"relativePath":"posts/VSCode调试步骤教程.md","filePath":"posts/VSCode调试步骤教程.md","lastUpdated":1709200341000}'),e={name:"posts/VSCode调试步骤教程.md"},n=t(`<h1 id="🦿-vscode调试步骤教程" tabindex="-1">🦿 VSCode调试步骤教程 <a class="header-anchor" href="#🦿-vscode调试步骤教程" aria-label="Permalink to &quot;🦿 VSCode调试步骤教程&quot;">​</a></h1><p>进入VSCode的Debug面板，点击 create a launch file按钮，然后选择要调试的环境。一般调试页面选择的是 Web App(Chrome)</p><p>之后会创建一个 launch.json 基础的配置文件</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Use IntelliSense to learn about possible attributes.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // Hover to view descriptions of existing attributes.</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // For more information, visit: https://go.microsoft.com/fwlink/?linkid=830387</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;version&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;0.2.0&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;configurations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;type&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;chrome&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;request&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;launch&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;name&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;Launch Chrome against localhost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;url&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;http://localhost:8080&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;webRoot&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;\${workspaceFolder}&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><code>type</code> 表示Debug时运行的环境</li><li><code>request</code> 有两个取值。<code>launch</code> 会以调试模式启动 Chrome 和 Node，并且和VSCode调试器建立连接。<code>attach</code> 用于与已经处于调试模式的Chrome 和 Node建立连接。一般准备调试的时候用第一种就可以了。</li><li><code>url</code> 需要访问的地址，<code>launch</code> 模式下才生效</li><li><code>webRoot</code> 设置项目代表所在的根目录，<code>\${workspaceFolder}</code> 是VSCode的内置变量。表示当前文件夹下的路径</li></ul><p>之后点击 <code>Start Debugging</code> 按钮后，就会默认启动一个浏览器</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/35988724/1691482007319-ba2ef437-ecc9-4961-af75-6a9452d57058.png" alt="" data-fancybox="gallery"></p><p>之后在需要调试的页面打对应的断点</p><p>调试模式下有一些操作按钮</p><p><img src="https://cdn.nlark.com/yuque/0/2023/png/35988724/1691482112036-fb924e89-5718-4f9a-9242-0e901c2e2438.png" alt="" data-fancybox="gallery"></p><ol><li>第一个 <code>Continue</code>，快捷键F5，会走到下一个断点，没有断点就恢复运行</li><li>第二个 <code>Step Over</code>，快捷键F10，每一次执行一行代码，遇到函数时不会进行函数内容</li><li>第三个 <code>Step Into</code>，快捷键F11，每一次执行一行代码，遇到函数时会进入函数内部</li><li>第四个 <code>Step Out</code>，快捷键Shift+F11，跳出当前函数</li><li>第五个重启调试启动器, 快捷键 Ctrl+Shift+F5</li><li>第六个暂停调试启动器，快捷键 Shift+F5</li></ol>`,11),l=[n];function p(o,h,k,d,c,r){return a(),i("div",null,l)}const g=s(e,[["render",p]]);export{u as __pageData,g as default};
