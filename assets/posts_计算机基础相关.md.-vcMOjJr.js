import{_ as a,c as i,o as n,ag as t}from"./chunks/framework.BhcQuJV0.js";const c=JSON.parse('{"title":"计算机基础（杂记）","description":"","frontmatter":{},"headers":[],"relativePath":"posts/计算机基础相关.md","filePath":"posts/计算机基础相关.md","lastUpdated":1747390264000}'),e={name:"posts/计算机基础相关.md"};function p(l,s,h,k,o,d){return n(),i("div",null,s[0]||(s[0]=[t(`<h1 id="计算机基础-杂记" tabindex="-1">计算机基础（杂记） <a class="header-anchor" href="#计算机基础-杂记" aria-label="Permalink to &quot;计算机基础（杂记）&quot;">​</a></h1><h2 id="http-请求结构是怎么样的" tabindex="-1">HTTP 请求结构是怎么样的 <a class="header-anchor" href="#http-请求结构是怎么样的" aria-label="Permalink to &quot;HTTP 请求结构是怎么样的&quot;">​</a></h2><p>HTTP（<code>HyperText Transfer Protocol</code>）请求由 ​请求行（Request Line）、请求头（Headers）、空行（CRLF）和请求体（Body）​ 四部分组成。</p><h3 id="请求行" tabindex="-1">请求行 <a class="header-anchor" href="#请求行" aria-label="Permalink to &quot;请求行&quot;">​</a></h3><p>请求行由请求方法字段、URL 字段和 HTTP 协议版本字段 3 个字段组成，它们用空格分开。</p><p>格式：<code>&lt;方法&gt;</code> <code>&lt;请求目标&gt;</code> <code>&lt;HTTP版本&gt;</code></p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /api/users </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span></code></pre></div><h3 id="请求头" tabindex="-1">请求头 <a class="header-anchor" href="#请求头" aria-label="Permalink to &quot;请求头&quot;">​</a></h3><p>格式：键值对（<code>Header-Name: value</code>），每行一个。</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>Host: example.com</span></span>
<span class="line"><span>User-Agent: Mozilla/5.0</span></span>
<span class="line"><span>Accept: application/json</span></span>
<span class="line"><span>Content-Type: application/json</span></span>
<span class="line"><span>Authorization: Bearer xxxxx</span></span>
<span class="line"><span>Cache-Control: no-cache</span></span></code></pre></div><h3 id="空行-crlf-​" tabindex="-1">空行（CRLF）​ <a class="header-anchor" href="#空行-crlf-​" aria-label="Permalink to &quot;空行（CRLF）​&quot;">​</a></h3><p>格式：<code>\\r\\n</code>（回车换行符）。 作用：分隔请求头和请求体。</p><h3 id="请求体-body-​" tabindex="-1">请求体（Body）​ <a class="header-anchor" href="#请求体-body-​" aria-label="Permalink to &quot;请求体（Body）​&quot;">​</a></h3><p>​格式：任意数据（如 JSON、表单数据、二进制流等）。</p><h3 id="完整-http-请求示例" tabindex="-1">完整 HTTP 请求示例 <a class="header-anchor" href="#完整-http-请求示例" aria-label="Permalink to &quot;完整 HTTP 请求示例&quot;">​</a></h3><p>GET 请求（无请求体）​</p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">GET</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /search?q=hello </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> google.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">User-Agent</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> Mozilla/5.0</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Accept</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> text/html</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Connection</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> keep-alive</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">\\r\\n</span></span></code></pre></div><p>POST 请求（带 JSON 请求体）​</p><div class="language-http vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">http</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">POST</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /api/login </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">HTTP</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">/</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.1</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Host</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> example.com</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Content-Type</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> application/json</span></span>
<span class="line"><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">Content-Length</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 45</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;username&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;admin&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">&quot;password&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;123456&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,19)]))}const g=a(e,[["render",p]]);export{c as __pageData,g as default};
