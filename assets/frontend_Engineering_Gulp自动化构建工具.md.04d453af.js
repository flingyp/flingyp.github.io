import{_ as s,c as a,o as n,X as l}from"./chunks/framework.6e839c56.js";const u=JSON.parse('{"title":"Gulp 自动化构建工具","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/Engineering/Gulp自动化构建工具.md","filePath":"frontend/Engineering/Gulp自动化构建工具.md"}'),p={name:"frontend/Engineering/Gulp自动化构建工具.md"},o=l(`<h1 id="gulp-自动化构建工具" tabindex="-1">Gulp 自动化构建工具 <a class="header-anchor" href="#gulp-自动化构建工具" aria-label="Permalink to &quot;Gulp 自动化构建工具&quot;">​</a></h1><p>随着前端社区的快速发展，市面上已经出现了多种项目构建工具。如 Webpack、Rollup、Vite、ESBuild 等等</p><p>Gulp 感觉似乎好像被取代了。其实并没有，只不过它从台前退居到了幕后。现在 Gulp 更多的是做流程化的控制，而主要的项目打包任务交给现在主流的构建工具来做，而 Gulp 则可以充当一个管理者来管理构建执行的流程</p><h2 id="快速体验" tabindex="-1">快速体验 <a class="header-anchor" href="#快速体验" aria-label="Permalink to &quot;快速体验&quot;">​</a></h2><p>全局安装脚手架： <code>pnpm add gulp-cli -g</code></p><p>在项目中安装 Gulp <code>pnpm add gulp -D</code></p><p>创建 <code>gulpfile</code> 配置文件，编写如下代码</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">defaultTask</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cb</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">default</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">cb</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">buildTask</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cb</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">console</span><span style="color:#666666;">.</span><span style="color:#80A665;">log</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">build</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">cb</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">exports</span><span style="color:#666666;">.</span><span style="color:#BD976A;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defaultTask</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// gulp</span></span>
<span class="line"><span style="color:#B8A965;">exports</span><span style="color:#666666;">.</span><span style="color:#BD976A;">build</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">buildTask</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// gulp build</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defaultTask</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cb</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">default</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">cb</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">buildTask</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cb</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">console</span><span style="color:#999999;">.</span><span style="color:#59873A;">log</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">build</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">cb</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">exports</span><span style="color:#999999;">.</span><span style="color:#B07D48;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defaultTask</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// gulp</span></span>
<span class="line"><span style="color:#998418;">exports</span><span style="color:#999999;">.</span><span style="color:#B07D48;">build</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">buildTask</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// gulp build</span></span></code></pre></div><p>最后在终端运行命令：<code>gulp</code> 或者是 <code>gulp build</code>，如需运行多个任务，可以执行 <code>gulp &lt;task&gt; &lt;othertask&gt;</code></p><h2 id="创建任务-task" tabindex="-1">创建任务 Task <a class="header-anchor" href="#创建任务-task" aria-label="Permalink to &quot;创建任务 Task&quot;">​</a></h2><p>每个 Gulp 任务都是一个异步的 JavaScript 函数。任务可以是公开或者是私有类型的</p><p><strong>公开任务</strong>：被导出的，可以通过 <code>gulp</code> 命令调用的 <strong>私有任务</strong>：被设计为在内部使用，通常作为 <code>series()</code> 或 <code>parallel()</code> 组合的组成部分</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">series</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">gulp</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// \`clean\` 函数并未被导出（export），因此被认为是私有任务（private task）。</span></span>
<span class="line"><span style="color:#758575DD;">// 它仍然可以被用在 \`series()\` 组合中。</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">clean</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cb</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// body omitted</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">cb</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// \`build\` 函数被导出（export）了，因此它是一个公开任务（public task），并且可以被 \`gulp\` 命令直接调用。</span></span>
<span class="line"><span style="color:#758575DD;">// 它也仍然可以被用在 \`series()\` 组合中。</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">build</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cb</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// body omitted</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">cb</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">exports</span><span style="color:#666666;">.</span><span style="color:#BD976A;">build</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">build</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#B8A965;">exports</span><span style="color:#666666;">.</span><span style="color:#BD976A;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">series</span><span style="color:#666666;">(</span><span style="color:#BD976A;">clean</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">build</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">series</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">gulp</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// \`clean\` 函数并未被导出（export），因此被认为是私有任务（private task）。</span></span>
<span class="line"><span style="color:#A0ADA0;">// 它仍然可以被用在 \`series()\` 组合中。</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">clean</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cb</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// body omitted</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">cb</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// \`build\` 函数被导出（export）了，因此它是一个公开任务（public task），并且可以被 \`gulp\` 命令直接调用。</span></span>
<span class="line"><span style="color:#A0ADA0;">// 它也仍然可以被用在 \`series()\` 组合中。</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">build</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cb</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// body omitted</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">cb</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">exports</span><span style="color:#999999;">.</span><span style="color:#B07D48;">build</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">build</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#998418;">exports</span><span style="color:#999999;">.</span><span style="color:#B07D48;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">series</span><span style="color:#999999;">(</span><span style="color:#B07D48;">clean</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">build</span><span style="color:#999999;">);</span></span></code></pre></div><h2 id="处理文件" tabindex="-1">处理文件 <a class="header-anchor" href="#处理文件" aria-label="Permalink to &quot;处理文件&quot;">​</a></h2><p>Gulp 暴露了 <code>src()</code> 和 <code>dest()</code> 方法用来处理系统文件</p><p><code>src()</code> 会从文件系统中读取文件生成一个 Node 流。<strong>简单来说就是输入文件</strong></p><p><code>pipe()</code> 用于连接转换流或者可写流。<strong>简单来说就是在这里可以做一些自定义处理</strong>。比如在这里我们就可以执行一些其他构建工具的打包命令或者服务启动命令等等</p><p><code>dest()</code> 接受一个输出目录作为参数，并且它还是产生一个 Node 流。<strong>简单来说就是输出文件</strong></p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">src</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">dest</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">watch</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">gulp</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">babel</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">gulp-babel</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 此示例需要安装依赖包  @babel/core @babel/preset-env gulp-babel</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">defaultTask</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cb</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">src</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">src/*.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipe</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">babel</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#B8A965;">presets</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@babel/preset-env</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipe</span><span style="color:#666666;">(</span><span style="color:#80A665;">dest</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">output/</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">));</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">exports</span><span style="color:#666666;">.</span><span style="color:#BD976A;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defaultTask</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">src</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">dest</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">watch</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">gulp</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">babel</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">gulp-babel</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 此示例需要安装依赖包  @babel/core @babel/preset-env gulp-babel</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defaultTask</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cb</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#59873A;">src</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">src/*.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipe</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">babel</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#998418;">presets</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@babel/preset-env</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipe</span><span style="color:#999999;">(</span><span style="color:#59873A;">dest</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">output/</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">));</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">exports</span><span style="color:#999999;">.</span><span style="color:#B07D48;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defaultTask</span><span style="color:#999999;">;</span></span></code></pre></div><h2 id="文件监控" tabindex="-1">文件监控 <a class="header-anchor" href="#文件监控" aria-label="Permalink to &quot;文件监控&quot;">​</a></h2><p>Gulp 可以监控文件变化，重新执行任务</p><div class="language-javascript vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">javascript</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">src</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">dest</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">watch</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">gulp</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">babel</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">require</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">gulp-babel</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 此示例需要安装依赖包  @babel/core @babel/preset-env gulp-babel</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">defaultTask</span><span style="color:#666666;">(</span><span style="color:#BD976A;">cb</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">src</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">src/*.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipe</span><span style="color:#666666;">(</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">babel</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#B8A965;">presets</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@babel/preset-env</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">})</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">)</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">.</span><span style="color:#80A665;">pipe</span><span style="color:#666666;">(</span><span style="color:#80A665;">dest</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">output/</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">));</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 可以进行文件监控，当文件发生变化时执行任务</span></span>
<span class="line"><span style="color:#80A665;">watch</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">src/*.js</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defaultTask</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#758575DD;">// 或者关联一个任务组合</span></span>
<span class="line"><span style="color:#758575DD;">// watch(&#39;src/*.js&#39;, series(clean, javascript));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#B8A965;">exports</span><span style="color:#666666;">.</span><span style="color:#BD976A;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">defaultTask</span><span style="color:#666666;">;</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">src</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">dest</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">watch</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">gulp</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">babel</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#59873A;">require</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">gulp-babel</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 此示例需要安装依赖包  @babel/core @babel/preset-env gulp-babel</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">defaultTask</span><span style="color:#999999;">(</span><span style="color:#B07D48;">cb</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#59873A;">src</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">src/*.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipe</span><span style="color:#999999;">(</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">babel</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#998418;">presets</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#999999;">[</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@babel/preset-env</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">})</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">)</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">.</span><span style="color:#59873A;">pipe</span><span style="color:#999999;">(</span><span style="color:#59873A;">dest</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">output/</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">));</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 可以进行文件监控，当文件发生变化时执行任务</span></span>
<span class="line"><span style="color:#59873A;">watch</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">src/*.js</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defaultTask</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#A0ADA0;">// 或者关联一个任务组合</span></span>
<span class="line"><span style="color:#A0ADA0;">// watch(&#39;src/*.js&#39;, series(clean, javascript));</span></span>
<span class="line"></span>
<span class="line"><span style="color:#998418;">exports</span><span style="color:#999999;">.</span><span style="color:#B07D48;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">defaultTask</span><span style="color:#999999;">;</span></span></code></pre></div><p>上面示例中运行 <code>gulp</code> 就会对匹配的文件进行监控，如果有文件被修改了就执行关联的任务</p><h2 id="series-和-parallel" tabindex="-1"><code>series()</code> 和 <code>parallel()</code> <a class="header-anchor" href="#series-和-parallel" aria-label="Permalink to &quot;\`series()\` 和 \`parallel()\`&quot;">​</a></h2><p><code>series()</code>：串行任务，依次执行任务</p><p><code>parallel()</code>：并行任务，同时执行多个任务</p>`,26),e=[o];function c(t,r,y,A,i,D){return n(),a("div",null,e)}const d=s(p,[["render",c]]);export{u as __pageData,d as default};
