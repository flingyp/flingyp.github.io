import{_ as s,c as i,a3 as e,o as n}from"./chunks/framework.H5EfqC1G.js";const k=JSON.parse('{"title":"Mac 配置和使用总结","description":"","frontmatter":{},"headers":[],"relativePath":"posts/Mac配置和使用.md","filePath":"posts/Mac配置和使用.md","lastUpdated":1737022066000}'),l={name:"posts/Mac配置和使用.md"};function t(o,a,p,d,c,h){return n(),i("div",null,a[0]||(a[0]=[e(`<h1 id="mac-配置和使用总结" tabindex="-1">Mac 配置和使用总结 <a class="header-anchor" href="#mac-配置和使用总结" aria-label="Permalink to &quot;Mac 配置和使用总结&quot;">​</a></h1><h2 id="mac-homebrew-安装问题" tabindex="-1">Mac Homebrew 安装问题 <a class="header-anchor" href="#mac-homebrew-安装问题" aria-label="Permalink to &quot;Mac Homebrew 安装问题&quot;">​</a></h2><p>Homebrew 是 Mac 上的包管理器，可以用来安装各种软件。</p><p>但是有时候在安装过程中会出现网络问题，导致安装失败。我们可以更换镜像源来解决这个问题。</p><p><strong>国内安装加速</strong></p><ul><li><code>/bin/bash -c &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/install.sh)&quot;</code></li></ul><p><strong>国内卸载加速</strong></p><ul><li><code>/bin/bash -c &quot;$(curl -fsSL https://cdn.jsdelivr.net/gh/ineo6/homebrew-install/uninstall.sh)&quot;</code></li></ul><h2 id="使用-pip-安装第三方包问题" tabindex="-1">使用 <code>pip</code> 安装第三方包问题 <a class="header-anchor" href="#使用-pip-安装第三方包问题" aria-label="Permalink to &quot;使用 \`pip\` 安装第三方包问题&quot;">​</a></h2><ul><li><a href="https://cn.linux-terminal.com/?p=7961" target="_blank" rel="noreferrer">参考文章</a></li></ul><p>使用参考文章中的第二种方式，将规则写入配置文件后强制安装解决问题了</p><h2 id="macos15-访达设置" tabindex="-1">Macos15 访达设置 <a class="header-anchor" href="#macos15-访达设置" aria-label="Permalink to &quot;Macos15 访达设置&quot;">​</a></h2><p>有一些软件的访达设置，比如 Easy New File 右键菜单，可以设置在访达中右键菜单中添加新建文件的快捷选项。</p><p>但是在 MacOS 15 系统中关闭了添加扩展设置的入口，在系统设置中没有地方可以设置，需要手动添加。</p><p>以添加 Easy New File 为例，手动添加扩展设置：</p><div class="language-sh vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">sh</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 1. 正常安装软件</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 2. 打开终端，执行命令 列出所有已安装和注册的插件和扩展</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">pluginkit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 3. Cmd+F 搜索 Finder,找到你要添加的扩展, 复制。 一般会带有跟你安装的软件一致的版本号。如： com.liupeng.mac.FinderMenu.FinderSync(5.8)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 4. 启用扩展 (注意去掉末尾的版本号)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pluginkit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;use&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.liupeng.mac.FinderMenu.FinderSync</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 5. 验证是否生效</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 6. 禁用扩展</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pluginkit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;disable&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.example.myplugin</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># 7. 注销扩展</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pluginkit</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -r</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -i</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> com.example.myplugin</span></span></code></pre></div><h2 id="使用-tree-命令输出目录树" tabindex="-1">使用 Tree 命令输出目录树 <a class="header-anchor" href="#使用-tree-命令输出目录树" aria-label="Permalink to &quot;使用 Tree 命令输出目录树&quot;">​</a></h2><p>用于以树状图的形式递归地列出目录的内容。它可以帮助用户快速查看文件系统的结构，特别是在需要展示目录层次关系时非常直观</p><p>安装：<code>brew install tree</code></p><ul><li><code>tree -L 2</code> 输出两级目录树</li><li><code>tree -L 2 -a</code> 输出两级目录树，包括隐藏文件</li><li><code>tree -L 2 -a -I &quot;node_modules|dist&quot;</code> 输出两级目录树，包括隐藏文件，排除 node_modules 和 dist 目录</li></ul><h2 id="mac-快捷键" tabindex="-1">Mac 快捷键 <a class="header-anchor" href="#mac-快捷键" aria-label="Permalink to &quot;Mac 快捷键&quot;">​</a></h2><ul><li><code>Command + R</code> 浏览器刷新</li><li><code>Command + W</code> 关闭当前窗口</li><li><code>Command + Q</code> 退出程序</li><li><code>Command + Tab</code> 切换应用</li><li><code>Command + Shift + 3</code> 截屏</li><li><code>Command + Shift + 4</code> 截屏</li><li><code>Command + Option + Esc</code> 强制退出程序</li><li><code>Command + Option + V</code> 粘贴并替换</li></ul><h2 id="vscode-快捷键" tabindex="-1">VSCode 快捷键 <a class="header-anchor" href="#vscode-快捷键" aria-label="Permalink to &quot;VSCode 快捷键&quot;">​</a></h2><ul><li><code>Command + Shift + P</code> + <code>F1</code> 打开命令面板</li><li><code>Control + ~</code> 打开终端</li><li><code>Command + W</code> 关闭当前窗口</li><li><code>Command + P</code> 快速打开文件</li><li><code>Command + Shift + N</code> 打开新窗口</li><li><code>Command + Shift + W</code> 关闭窗口</li><li><code>Command + Shift + F</code> 全局搜索</li><li><code>Command + Shift + G</code> 全局搜索</li><li><code>Command + Shift + H</code> 全局替换</li></ul>`,24)]))}const m=s(l,[["render",t]]);export{k as __pageData,m as default};
