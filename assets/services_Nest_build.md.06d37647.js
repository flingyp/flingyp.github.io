import{_ as s,c as n,o as a,X as p}from"./chunks/framework.6e839c56.js";const B=JSON.parse('{"title":"环境变量配置","description":"","frontmatter":{},"headers":[],"relativePath":"services/Nest/build.md","filePath":"services/Nest/build.md"}'),o={name:"services/Nest/build.md"},l=p(`<h1 id="环境变量配置" tabindex="-1">环境变量配置 <a class="header-anchor" href="#环境变量配置" aria-label="Permalink to &quot;环境变量配置&quot;">​</a></h1><h2 id="nestjs-config-配置环境变量" tabindex="-1"><code>@nestjs/config</code> 配置环境变量 <a class="header-anchor" href="#nestjs-config-配置环境变量" aria-label="Permalink to &quot;\`@nestjs/config\` 配置环境变量&quot;">​</a></h2><p>安装：<code>pnpm add @nestjs/config</code></p><p>安装：<code>pnpm add cross-env -D</code></p><h3 id="配置" tabindex="-1">配置 <a class="header-anchor" href="#配置" aria-label="Permalink to &quot;配置&quot;">​</a></h3><p>在根模块需要导入 <code>ConfigModule</code> 模块</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">configuration</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">./config/configuration</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">imports</span><span style="color:#666666;">: [</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">/* 什么都没有配置，会默认解析根目录下的 \`.env\` 文件 */</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#BD976A;">ConfigModule</span><span style="color:#666666;">.</span><span style="color:#80A665;">forRoot</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#758575DD;">/* envFilePath 可以指定配置文件路径（如果在多个文件中发现同一个变量，则第一个变量优先） */</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#B8A965;">envFilePath</span><span style="color:#666666;">: [</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">.env.development.local</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">, </span><span style="color:#C98A7D99;">&#39;</span><span style="color:#C98A7D;">.env.development</span><span style="color:#C98A7D99;">&#39;</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#758575DD;">/* 如果想在其他模块使用 ConfigModule模块时，可以将其声明为全局模块 */</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#BD976A;">isGlobal</span><span style="color:#666666;">: </span><span style="color:#4D9375;">true</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#758575DD;">/* 对于复杂的项目，可以利用自定义配置文件返回嵌套的配置对象。自定义配置文件导出一个工厂函数，该函数返回一个配置对象。配置对象可以是任意嵌套的普通 JavaScript 对象 */</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#BD976A;">load</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">configuration</span><span style="color:#666666;">]</span></span>
<span class="line"><span style="color:#666666;">    }),</span></span>
<span class="line"><span style="color:#666666;">  ],</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">configuration</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">./config/configuration</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">imports</span><span style="color:#999999;">: [</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">/* 什么都没有配置，会默认解析根目录下的 \`.env\` 文件 */</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#B07D48;">ConfigModule</span><span style="color:#999999;">.</span><span style="color:#59873A;">forRoot</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">/* envFilePath 可以指定配置文件路径（如果在多个文件中发现同一个变量，则第一个变量优先） */</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#998418;">envFilePath</span><span style="color:#999999;">: [</span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">.env.development.local</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">, </span><span style="color:#B5695999;">&#39;</span><span style="color:#B56959;">.env.development</span><span style="color:#B5695999;">&#39;</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">/* 如果想在其他模块使用 ConfigModule模块时，可以将其声明为全局模块 */</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#B07D48;">isGlobal</span><span style="color:#999999;">: </span><span style="color:#1E754F;">true</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">/* 对于复杂的项目，可以利用自定义配置文件返回嵌套的配置对象。自定义配置文件导出一个工厂函数，该函数返回一个配置对象。配置对象可以是任意嵌套的普通 JavaScript 对象 */</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#B07D48;">load</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">configuration</span><span style="color:#999999;">]</span></span>
<span class="line"><span style="color:#999999;">    }),</span></span>
<span class="line"><span style="color:#999999;">  ],</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><h3 id="访问环境变量" tabindex="-1">访问环境变量 <a class="header-anchor" href="#访问环境变量" aria-label="Permalink to &quot;访问环境变量&quot;">​</a></h3><p>自定义配置文件</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// config/configuration.ts</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">default</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">port</span><span style="color:#666666;">: </span><span style="color:#80A665;">parseInt</span><span style="color:#666666;">(</span><span style="color:#BD976A;">process</span><span style="color:#666666;">.</span><span style="color:#BD976A;">env</span><span style="color:#666666;">.</span><span style="color:#BD976A;">PORT</span><span style="color:#666666;">, </span><span style="color:#4C9A91;">10</span><span style="color:#666666;">) </span><span style="color:#CB7676;">||</span><span style="color:#666666;"> </span><span style="color:#4C9A91;">3000</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">database</span><span style="color:#666666;">: {</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">host</span><span style="color:#666666;">: </span><span style="color:#BD976A;">process</span><span style="color:#666666;">.</span><span style="color:#BD976A;">env</span><span style="color:#666666;">.</span><span style="color:#BD976A;">DATABASE_HOST</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#B8A965;">port</span><span style="color:#666666;">: </span><span style="color:#80A665;">parseInt</span><span style="color:#666666;">(</span><span style="color:#BD976A;">process</span><span style="color:#666666;">.</span><span style="color:#BD976A;">env</span><span style="color:#666666;">.</span><span style="color:#BD976A;">DATABASE_PORT</span><span style="color:#666666;">, </span><span style="color:#4C9A91;">10</span><span style="color:#666666;">) </span><span style="color:#CB7676;">||</span><span style="color:#666666;"> </span><span style="color:#4C9A91;">5432</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">  },</span></span>
<span class="line"><span style="color:#666666;">});</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// config/configuration.ts</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">default</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">port</span><span style="color:#999999;">: </span><span style="color:#59873A;">parseInt</span><span style="color:#999999;">(</span><span style="color:#B07D48;">process</span><span style="color:#999999;">.</span><span style="color:#B07D48;">env</span><span style="color:#999999;">.</span><span style="color:#B07D48;">PORT</span><span style="color:#999999;">, </span><span style="color:#2F798A;">10</span><span style="color:#999999;">) </span><span style="color:#AB5959;">||</span><span style="color:#999999;"> </span><span style="color:#2F798A;">3000</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">database</span><span style="color:#999999;">: {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">host</span><span style="color:#999999;">: </span><span style="color:#B07D48;">process</span><span style="color:#999999;">.</span><span style="color:#B07D48;">env</span><span style="color:#999999;">.</span><span style="color:#B07D48;">DATABASE_HOST</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#998418;">port</span><span style="color:#999999;">: </span><span style="color:#59873A;">parseInt</span><span style="color:#999999;">(</span><span style="color:#B07D48;">process</span><span style="color:#999999;">.</span><span style="color:#B07D48;">env</span><span style="color:#999999;">.</span><span style="color:#B07D48;">DATABASE_PORT</span><span style="color:#999999;">, </span><span style="color:#2F798A;">10</span><span style="color:#999999;">) </span><span style="color:#AB5959;">||</span><span style="color:#999999;"> </span><span style="color:#2F798A;">5432</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">});</span></span></code></pre></div><p><code>ConfigModule</code> 注册一个 <code>ConfigService</code> ，并将其导出为在其他消费模块中可见。可以使用 <code>ConfigService</code> 来访问环境变量。所以第一步我们需要导入模块、第二步注入服务、第三步使用服务来访问</p><p>导入模块</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// xxx.modules.ts</span></span>
<span class="line"><span style="color:#666666;">@</span><span style="color:#80A665;">Module</span><span style="color:#666666;">({</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#B8A965;">imports</span><span style="color:#666666;">: [</span><span style="color:#BD976A;">ConfigModule</span><span style="color:#666666;">],</span></span>
<span class="line"><span style="color:#666666;">})</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// xxx.modules.ts</span></span>
<span class="line"><span style="color:#999999;">@</span><span style="color:#59873A;">Module</span><span style="color:#999999;">({</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#998418;">imports</span><span style="color:#999999;">: [</span><span style="color:#B07D48;">ConfigModule</span><span style="color:#999999;">],</span></span>
<span class="line"><span style="color:#999999;">})</span></span></code></pre></div><p>注入服务</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#758575DD;">// xxx.service.ts</span></span>
<span class="line"><span style="color:#80A665;">constructor</span><span style="color:#666666;">(</span><span style="color:#BD976A;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">configService</span><span style="color:#DBD7CAEE;">: </span><span style="color:#BD976A;">ConfigService</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A0ADA0;">// xxx.service.ts</span></span>
<span class="line"><span style="color:#59873A;">constructor</span><span style="color:#999999;">(</span><span style="color:#B07D48;">private</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">configService</span><span style="color:#393A34;">: </span><span style="color:#B07D48;">ConfigService</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span></code></pre></div><p>访问环境变量</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">configService</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">&lt;</span><span style="color:#5DA994;">string</span><span style="color:#666666;">&gt;(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">XXX_XXX</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">configService</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">&lt;</span><span style="color:#2E8F82;">string</span><span style="color:#999999;">&gt;(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">XXX_XXX</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span></code></pre></div><h3 id="在-main-ts-文件中访问环境变量" tabindex="-1">在 <code>main.ts</code> 文件中访问环境变量 <a class="header-anchor" href="#在-main-ts-文件中访问环境变量" aria-label="Permalink to &quot;在 \`main.ts\` 文件中访问环境变量&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#CB7676;">async</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">bootstrap</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">app</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#4D9375;">await</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">NestFactory</span><span style="color:#666666;">.</span><span style="color:#80A665;">create</span><span style="color:#666666;">(</span><span style="color:#BD976A;">AppModule</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 获取 ConfigService 服务</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">configService</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">ConfigService</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 获得环境变量参数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">DEFAULT_PORT</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">configService</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">port</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">await</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">app</span><span style="color:#666666;">.</span><span style="color:#80A665;">listen</span><span style="color:#666666;">(</span><span style="color:#BD976A;">DEFAULT_PORT</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#AB5959;">async</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">bootstrap</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">app</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#1E754F;">await</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">NestFactory</span><span style="color:#999999;">.</span><span style="color:#59873A;">create</span><span style="color:#999999;">(</span><span style="color:#B07D48;">AppModule</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 获取 ConfigService 服务</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">configService</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">ConfigService</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 获得环境变量参数</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">DEFAULT_PORT</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">configService</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">port</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">await</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">app</span><span style="color:#999999;">.</span><span style="color:#59873A;">listen</span><span style="color:#999999;">(</span><span style="color:#B07D48;">DEFAULT_PORT</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h2 id="cross-env-环境区分" tabindex="-1"><code>cross-env</code> 环境区分 <a class="header-anchor" href="#cross-env-环境区分" aria-label="Permalink to &quot;\`cross-env\` 环境区分&quot;">​</a></h2><p><code>cross-env</code> 是一个运行跨平台设置和使用环境变量的脚本</p><p>如何使用</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#B8A965;">start:dev</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">cross-env NODE_ENV=development nest start --watch</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#B8A965;">start:debug</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">cross-env NODE_ENV=debug nest start --debug --watch</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#B8A965;">start:prod</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">:</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">cross-env NODE_ENV=production node dist/src/main</span><span style="color:#C98A7D99;">&quot;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#998418;">start:dev</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">cross-env NODE_ENV=development nest start --watch</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#998418;">start:debug</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">cross-env NODE_ENV=debug nest start --debug --watch</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B5695999;">&quot;</span><span style="color:#998418;">start:prod</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">:</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">cross-env NODE_ENV=production node dist/src/main</span><span style="color:#B5695999;">&quot;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>之后我们就可通过 <code>p<wbr>rocess.env.NODE_ENV</code> 访问到了</p><h2 id="使用-yaml-配置文件" tabindex="-1">使用 <code>Yaml</code> 配置文件 <a class="header-anchor" href="#使用-yaml-配置文件" aria-label="Permalink to &quot;使用 \`Yaml\` 配置文件&quot;">​</a></h2><p>安装：<code>pnpm add yaml</code></p>`,26),e=[l];function t(c,r,y,i,A,d){return a(),n("div",null,e)}const v=s(o,[["render",t]]);export{B as __pageData,v as default};
