import{_ as i,c as a,o as t,ag as l}from"./chunks/framework.BhcQuJV0.js";const o=JSON.parse('{"title":"HTML 杂记","description":"","frontmatter":{},"headers":[],"relativePath":"frontend/HTML5/Interview.md","filePath":"frontend/HTML5/Interview.md","lastUpdated":1752478107000}'),n={name:"frontend/HTML5/Interview.md"};function h(p,s,e,k,E,d){return t(),a("div",null,s[0]||(s[0]=[l(`<h1 id="html-杂记" tabindex="-1">HTML 杂记 <a class="header-anchor" href="#html-杂记" aria-label="Permalink to &quot;HTML 杂记&quot;">​</a></h1><h2 id="_1-对语义化标签的使用和理解" tabindex="-1">1. 对语义化标签的使用和理解 <a class="header-anchor" href="#_1-对语义化标签的使用和理解" aria-label="Permalink to &quot;1. 对语义化标签的使用和理解&quot;">​</a></h2><ol><li>更好的结构化：语义化标签可以让页面结构更加清晰，便于开发者理解和维护代码。</li><li>更好的可读性：语义化标签可以让页面更加易读，便于用户理解页面内容。</li><li>更好的可访问性：语义化标签可以提高页面的可访问性，便于屏幕阅读器等辅助技术解析页面内容。</li><li>更好的 SEO：语义化标签可以让搜索引擎更加准确地解析页面内容，提高页面的排名。也是优化 SEO 的必要手段之一。</li><li>更好的兼容性：语义化标签可以让页面在不同设备和浏览器上更加兼容。</li></ol><p>没有语义化的 DOM 结构</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;header&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;section&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;article&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;figure&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">img</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> /&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;figcaption&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> class</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;footer&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">div</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>语义化的 DOM 结构</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">article</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">      &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">figcaption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">figcaption</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">figure</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">article</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><p>常见使用的语义化标签 <a href="https://developer.mozilla.org/zh-CN/docs/Web/HTML/Element#%E5%86%85%E5%AE%B9%E5%88%86%E5%8C%BA" target="_blank" rel="noreferrer">对应以下语义化标签描述参考 MDN</a></p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">header</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">main</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">footer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">section</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nav</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">nav</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">aside</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">aside</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">article</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">article</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">address</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">menu</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h2</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h3</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h4</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h5</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">h6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><h2 id="_2-网页的-seo-如何进行优化处理" tabindex="-1">2. 网页的 SEO 如何进行优化处理 <a class="header-anchor" href="#_2-网页的-seo-如何进行优化处理" aria-label="Permalink to &quot;2. 网页的 SEO 如何进行优化处理&quot;">​</a></h2><p>SEO 中文名称 <strong>搜索引擎优化</strong> 。为了从搜索引擎中获得更多的免费曝光量，从网站结构、内容建设方案、用户互动传播等进行合理规划，使网站更适合搜索引擎的检索原则行为。</p><ol><li><strong>关键词优化</strong>：根据网站主题和目标受众，选择合适、具备潜在搜索流量的关键词，并将其合理规划到标题、标题描述、正文内容等位置。</li><li><strong>页面标题优化</strong>：确保页面标题准确地描述了页面的内容，并包含关键词。页面标题是搜索引擎显示在搜索结果中的主要元素。</li><li><strong>Meta 标签优化</strong>：编写有吸引力的 meta 描述标签，它会在搜索结果中显示，并向用户描述页面内容。</li><li><strong>标签语义化</strong>：使用语义化标签来组织页面内容，有助于搜索引擎理解页面结构。</li><li><strong>内/外部链接和引用</strong>：增加内部链接，使页面之间互相连接，同时也可以提高页面权重；如果条件允许，可以增加外部链接，这对于提高页面权重和曝光度也非常有益。</li><li><strong>移动友好性</strong>：确保你的网页在移动设备上有良好的显示和用户体验，这对于搜索引擎排名至关重要。</li><li><strong>服务端渲染</strong>。考虑服务端渲染，这样可以提高网站的访问速度，同时也有利于搜索引擎的检索。</li></ol><h2 id="_3-html-标签元素分为哪些-应用场景有哪些" tabindex="-1">3. HTML 标签元素分为哪些，应用场景有哪些 <a class="header-anchor" href="#_3-html-标签元素分为哪些-应用场景有哪些" aria-label="Permalink to &quot;3. HTML 标签元素分为哪些，应用场景有哪些&quot;">​</a></h2><p>分类：内联元素、块状元素、内联块状元素（综合两者特性）</p><ol><li>块状元素：占据整个宽度，可以包含块状元素和内联元素。</li><li>内联元素：只占据内容所需宽度，不能包含块状元素，只能包含内联元素和文本。</li><li>内联块状元素：结合了内联元素和块状元素的特性，以一行显示，可以容纳内联元素和文本。</li></ol><h2 id="_4-a-标签默认事件被禁止-通过什么方式可以实现页面的跳转" tabindex="-1">4. a 标签默认事件被禁止，通过什么方式可以实现页面的跳转 <a class="header-anchor" href="#_4-a-标签默认事件被禁止-通过什么方式可以实现页面的跳转" aria-label="Permalink to &quot;4. a 标签默认事件被禁止，通过什么方式可以实现页面的跳转&quot;">​</a></h2><p>可以通过 BOM 当中的 Location 对象来进行跳转</p><div class="language-html vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> href</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;https://www.baidu.com/&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;点击这里&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">a</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">body</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre></div><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> ADom</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getElementsByTagName</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)[</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">];</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">ADom.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;click&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">e</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 阻止a标签默认事件</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  e.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">preventDefault</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 可通过 Location 对象进行跳转</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 1. 使用 window.location.href</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window.location.href </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://yyblog.top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 2. 使用 window.location.assign</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window.location.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">assign</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;https://yyblog.top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">  // 3. 直接修改 window.location</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  window.location </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;https://yyblog.top&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">});</span></span></code></pre></div><h2 id="_5-浏览器的常用的存储方法" tabindex="-1">5. 浏览器的常用的存储方法 <a class="header-anchor" href="#_5-浏览器的常用的存储方法" aria-label="Permalink to &quot;5. 浏览器的常用的存储方法&quot;">​</a></h2><p><strong>总结</strong>：Cookie、WebStorage（LocalStorage、SessionStorage）、IndexedDB</p><p>Cookie：是存储在浏览器上的一小段文本信息，可以随着请求发送到服务器端。<strong>有大小的限制</strong>，通常只能存储 4KB 左右的数据。可以<strong>设置过期时间</strong>，如果不设置过期时间，会在浏览器关闭后自动删除。可以<strong>设置域名和路径</strong>，限制 Cookie 的访问范围。每次发送 HTTP 请求，会将请求域的 Cookie 一起发送给服务器端。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 设置 Cookie</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">document.cookie </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;username=John Doe; expires=Thu, 18 Dec 202312:00:00 UTC; path=/&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 读取 Cookie</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> username</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> document.cookie;</span></span></code></pre></div><p>在上面的示例中，我们设置了一个名为 username 的 Cookie，它的值为 John Doe，过期时间为 Thu, 18 Dec 2022 12:00:00 UTC，路径为根目录。我们可以通过 <code>document.cookie</code> 来读取当前页面的所有 Cookie。</p><p>WebStorage：<code>localStorage</code> 和 <code>sessionStorage</code>。它们都可以存储大量数据，区别是 <code>localStorage</code> 的数据会一直保存在用户的计算机上，而 <code>sessionStorage</code> 的数据只在当前会话期间有效。</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 存储数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key, value);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key, value);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 读取数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 删除数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key);</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">removeItem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(key);</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 清空数据</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">localStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">sessionStorage.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clear</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><p>IndexedDB：是一个浏览器端的数据库，与 WebStorage 不同的是，它可以存储大量结构化的数据，提供对数据的增删改查操作。它是一个异步的 API，使用它时需要通过回调函数来获取操作结果。</p><h2 id="_6-csrf-攻击" tabindex="-1">6. CSRF 攻击 <a class="header-anchor" href="#_6-csrf-攻击" aria-label="Permalink to &quot;6. CSRF 攻击&quot;">​</a></h2><p><code>Cross Site Request Forgery</code> 跨站请求伪造，是一种挟制用户在当前已登录的 Web 应用程序上执行非本意的操作的攻击方法。CSRF 利用的是网站对用户网页浏览器的信任。</p><p>简单理解：CSRF 攻击的本质是利用 Cookie 会在同源请求中携带发送给服务器的特点，以此来实现用户的冒充</p><p><a href="https://www.bilibili.com/video/BV1iW411171s/?spm_id_from=333.337.search-card.all.click&amp;vd_source=eea269eb687441a96a489f4da09ad92e" target="_blank" rel="noreferrer">CSRF 视频教程讲解</a></p><p><img src="https://p1-jj.byteimg.com/tos-cn-i-t2oaga2asx/gold-user-assets/2019/11/17/16e78e9679aac52d~tplv-t2oaga2asx-zoom-in-crop-mark:3024:0:0:0.awebp" alt="" data-fancybox="gallery"></p><p>防御 CSRF 的相关方法</p><ol><li>敏感请求接口尽量使用 POST 类型，因为 GET 请求是会被缓存的，而 POST 请求是不会被缓存的</li><li>可以在请求敏感接口前，加入验证码（确保是人工）</li><li>验证 Referer（Referer 可以记录当前请求的来源地址），在服务端来判断来源地址是否合法</li><li>使用 Token 验证，服务端下发一个 Token，每次请求时将 Token 携带上，服务端验证 Token 是否合法</li></ol><h2 id="_7-xss-攻击" tabindex="-1">7. XSS 攻击 <a class="header-anchor" href="#_7-xss-攻击" aria-label="Permalink to &quot;7. XSS 攻击&quot;">​</a></h2><p><code>Cross Site Script</code> 跨站脚本攻击，<strong>攻击者将恶意 JS 代码植入到提供给其它用户使用的页面中</strong></p><p><code>XSS</code> 涉及到三方，即攻击者、客户端和 Web 应用，攻击的目的是为了盗取存储在客户端的 <code>cookie</code> 或者其他网站用于识别客户端身份的敏感信息。一旦获取到合法用户的信息后，攻击者甚至可以假冒合法用户与网站进行交互</p><p><code>XSS</code>分为：存储型、反射型、DOM 型</p><p><strong>存储型</strong>：首先黑客利用站点漏洞将一段恶意脚本代码提交到网站数据库中，然后用户向网站请求包含了恶意 JS 脚本的页面。当用户浏览该页面的时候，恶意脚本就会将用户的 Cookie 等信息上传到服务器。</p><p><img src="https://www.helloworldcoding.com/uploads/0.jpg" alt="" data-fancybox="gallery"></p><p><strong>反射型</strong>：在一个反射型 XSS 攻击过程中，恶意 JS 脚本属于用户发送给网站请求中的一部分，随后网站又把恶意 JS 脚本返回给用户，当恶意脚本再用户页面中被执行时，黑客就可以利用该脚本做一些恶意操作。</p><p><img src="https://www.helloworldcoding.com/uploads/1.jpg" alt="" data-fancybox="gallery"></p><p><strong>DOM 型</strong>：基于 DOM 的 XSS 攻击是不牵涉到页面 Web 服务器的。黑客通过各种手段将恶意脚本注入到用户页面中，比如通过网络劫持（Wifi 路由器劫持、本地恶意软件）在页面传输过程中修改 HTML 页面的内容。</p><p><strong>如何尽量避免 XSS 攻击</strong></p><ol><li>前台、后台统一对数据进行过滤和转码</li><li>添加验证码防止脚本冒充用户提交等操作</li><li>Cookie 使用 HttpOnly 属性</li></ol><h2 id="_8-页面渲染的过程" tabindex="-1">8. 页面渲染的过程 <a class="header-anchor" href="#_8-页面渲染的过程" aria-label="Permalink to &quot;8. 页面渲染的过程&quot;">​</a></h2><p>浏览器通过请求获取 HTML 后，通过 HTML 解析器解析构建生成一颗 DOM 树。并且将 CSS 解析生成 CSS 规则树（CSSOM）</p><p>浏览器会根据 DOM 树和 CSSOM 树进行合并生成一颗渲染树</p><p>然后对渲染树进行布局，计算出每一个渲染节点的位置和大小</p><p>最后对布局的节点进行绘制呈现出一个完整的页面</p><p>流程：解析 DOM 树 <code>&amp;&amp;</code> 解析 CSSOM 树 -&gt; 生成渲染树 -&gt; 布局 -&gt; 绘制</p><h2 id="_9-精灵图和-base64-的区别" tabindex="-1">9. 精灵图和 Base64 的区别 <a class="header-anchor" href="#_9-精灵图和-base64-的区别" aria-label="Permalink to &quot;9. 精灵图和 Base64 的区别&quot;">​</a></h2><p>精灵图：将多张小图标合并成一张大图，通过 <code>background-position</code> 来显示不同的图标（这样可以减少请求图片资源次数）</p><p>Base64：将图片转换为 <code>Base64</code> 直接嵌入到网页中。使用 <code>&lt;img src=&quot;data:[MIME type];base64, data&quot;/&gt;</code> 这种方式来引用图片，而不需要发送请求去获取图片。</p><h2 id="_10-什么是-data-url" tabindex="-1">10. 什么是 Data URL <a class="header-anchor" href="#_10-什么是-data-url" aria-label="Permalink to &quot;10. 什么是 Data URL&quot;">​</a></h2><p><code>Data URL</code> 是将图片转换为 <code>Base64</code> 直接嵌入到网页中。使用 <code>&lt;img src=&quot;data:[MIME type];base64, data&quot;/&gt;</code> 这种方式来引用图片，而不需要发送请求去获取图片</p><p>优点：不需要发送请求，减少 HTTP 请求数量</p><p>缺点：Base64 编码后的字符串内容会是一段长串乱码，会比原来的体积大三分之一左右。Data URL 形式的图片不会缓存下来，每次访问页面都要被下载一次。可以将 Data URL 写入到 CSS 文件中随着 CSS 被缓存下来</p><p>Base64 的格式：</p><ul><li>前缀 <code>data:</code> 开头</li><li>指示数据类型的 MIME 类型。例如 <code>image/jpeg</code> 表示 JPEG 图像文件；如果此部分被省略，则默认值为<code>text/plain;charset=US-SACII</code></li><li>如果为非文本数据，则可选 base64 做标记</li><li>数据（一堆字符串）</li></ul><h2 id="_11-svg-格式" tabindex="-1">11. SVG 格式 <a class="header-anchor" href="#_11-svg-格式" aria-label="Permalink to &quot;11. SVG 格式&quot;">​</a></h2><p>基于 XML 语法格式的图像，可缩放的矢量图，其他图像是基于像素的，SVG 是属于对图像形状的描述，本质是文本文件，体积小，图标不会失真，可通过 CSS 与 JS 操作</p><h2 id="_12-什么是-html-的实体编码" tabindex="-1">12. 什么是 HTML 的实体编码 <a class="header-anchor" href="#_12-什么是-html-的实体编码" aria-label="Permalink to &quot;12. 什么是 HTML 的实体编码&quot;">​</a></h2><p>实体是一段以 <code>&amp;</code> 开头，分号 <code>;</code> 结尾的字符串。用来显示不可见字符及保留字符（如 <code>&lt;</code>、<code>&gt;</code>）</p><p>实体编码</p><ul><li>不可分的空格：<code>＆nbsp;</code></li><li>&lt;(小于符号)：<code>＆lt;</code></li><li>(大于符号)：<code>＆gt;</code></li><li>＆(与符号)：<code>＆amp;</code></li><li>″(双引号)：<code>＆quot;</code></li><li>&#39;(单引号)：<code>＆apos;</code></li></ul><p>在前端，一般为了避免 XSS 攻击，会将 <code>&lt;&gt;</code> 编码为 <code>&amp;lt;</code> 与 <code>&amp;gt;</code>，这些就是 HTML 实体编码</p><p>在 HTML 转义时，仅仅只需要对六个字符进行编码: &amp;, &lt;, &gt;, &quot;, &#39;, \`\`\`</p><p>可使用 <a href="https://npm.devtool.tech/he" target="_blank" rel="noreferrer">he</a> 进行编码及转义</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">he.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">escape</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;img src=&quot;&quot;&gt;&lt;/img&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 转义</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;&amp;lt;img src=&amp;quot;&amp;quot;&amp;gt;&amp;lt;/img&amp;gt;&quot;</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">he.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">encode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&#39;&lt;img src=&quot;&quot;&gt;&lt;/img&gt;&#39;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">); </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// 实体编码</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">// &quot;&amp;#x3C;img src=&amp;#x22;&amp;#x22;&amp;#x3E;&amp;#x3C;/img&amp;#x3E;&quot;</span></span></code></pre></div><h2 id="_13-如何统计当前页面出现的所有标签" tabindex="-1">13. 如何统计当前页面出现的所有标签 <a class="header-anchor" href="#_13-如何统计当前页面出现的所有标签" aria-label="Permalink to &quot;13. 如何统计当前页面出现的所有标签&quot;">​</a></h2><ul><li><code>document.querySelectorAll(&quot;*&quot;)</code></li><li><code>document.getElementsByTagName(&quot;*&quot;)</code></li></ul><h2 id="_14-h5-和-c3-有哪些新特性" tabindex="-1">14. H5 和 C3 有哪些新特性 <a class="header-anchor" href="#_14-h5-和-c3-有哪些新特性" aria-label="Permalink to &quot;14. H5 和 C3 有哪些新特性&quot;">​</a></h2><p>H5 的新特性</p><ol><li>语义化标签</li><li>新增音频、视频</li><li>新增表单控件</li><li>新增 Canvas 和 SVG</li><li>数据存储 LocalStorage、SessionStorage</li></ol><p>CSS3 的新特性</p><ol><li>新增选择器：属性选择器、伪类选择器、伪元素选择器</li><li>新增媒体查询</li><li>文字阴影 <code>text-shadow</code></li><li>盒子模型 <code>box-shadow</code></li><li>渐变 <code>linear-gradient</code></li><li>过渡 <code>transition</code></li><li>动画 <code>animation</code></li><li>2D、3D 转换 <code>transform</code></li><li>背景属性 <code>background-size</code>、<code>background-origin</code>、<code>background-clip</code>、<code>background-attachment</code></li></ol>`,77)]))}const g=i(n,[["render",h]]);export{o as __pageData,g as default};
