import{_ as s,c as n,o as a,X as p}from"./chunks/framework.12317601.js";const i=JSON.parse('{"title":"第二篇：响应式系统","description":"","frontmatter":{"outline":"deep"},"headers":[],"relativePath":"books/vue_design_realize/响应式系统.md","filePath":"books/vue_design_realize/响应式系统.md"}'),l={name:"books/vue_design_realize/响应式系统.md"},o=p(`<h1 id="第二篇-响应式系统" tabindex="-1">第二篇：响应式系统 <a class="header-anchor" href="#第二篇-响应式系统" aria-label="Permalink to &quot;第二篇：响应式系统&quot;">​</a></h1><h2 id="第四章-响应式系统的作用与实现" tabindex="-1">第四章：响应式系统的作用与实现 <a class="header-anchor" href="#第四章-响应式系统的作用与实现" aria-label="Permalink to &quot;第四章：响应式系统的作用与实现&quot;">​</a></h2><p>Vue3 采用 Proxy 来实现响应式数据的代理。副作用函数指的就是会产生副作用的函数</p><h3 id="reactive-ts" tabindex="-1"><code>reactive.ts</code> <a class="header-anchor" href="#reactive-ts" aria-label="Permalink to &quot;\`reactive.ts\`&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">isObject</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@vue/shared</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">mutableHandlers</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./baseHandler</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">const</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">enum</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ReactiveFlags</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">IS_REACTIVE</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">__v_isReactive</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 映射表 -&gt; 源对象:代理对象</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">reactiveMap</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">WeakMap</span><span style="color:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">reactive</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 不是对象类型的变量</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#80A665;">isObject</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">))</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 如果源对象就是代理对象就直接返回（原因是访问代理对象的属性会走到Get方法，所以通过一个标识来判定）</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">[</span><span style="color:#BD976A;">ReactiveFlags</span><span style="color:#666666;">.</span><span style="color:#BD976A;">IS_REACTIVE</span><span style="color:#666666;">])</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">target</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 如果target对象已经被代理过了就返回代理对象</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">existsProxy</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">reactiveMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">existsProxy</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">existsProxy</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">proxy</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">Proxy</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">mutableHandlers</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 缓存一下 代理过的对象 下次在进行代理的时候直接拿出来即可</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">reactiveMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">proxy</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">proxy</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isObject</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@vue/shared</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">mutableHandlers</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./baseHandler</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">const</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">enum</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ReactiveFlags</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">IS_REACTIVE</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">__v_isReactive</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 映射表 -&gt; 源对象:代理对象</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">reactiveMap</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">WeakMap</span><span style="color:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">reactive</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 不是对象类型的变量</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#59873A;">isObject</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">))</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 如果源对象就是代理对象就直接返回（原因是访问代理对象的属性会走到Get方法，所以通过一个标识来判定）</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">[</span><span style="color:#B07D48;">ReactiveFlags</span><span style="color:#999999;">.</span><span style="color:#B07D48;">IS_REACTIVE</span><span style="color:#999999;">])</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">target</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 如果target对象已经被代理过了就返回代理对象</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">existsProxy</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">reactiveMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">existsProxy</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">existsProxy</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">proxy</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">Proxy</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">mutableHandlers</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 缓存一下 代理过的对象 下次在进行代理的时候直接拿出来即可</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">reactiveMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">proxy</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">proxy</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="basehandler-ts" tabindex="-1"><code>baseHandler.ts</code> <a class="header-anchor" href="#basehandler-ts" aria-label="Permalink to &quot;\`baseHandler.ts\`&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">isObject</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@vue/shared</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">track</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">trigger</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./effect</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">reactive</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">ReactiveFlags</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./reactive</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// target：源目标对象, key：访问的属性, value：设置的新值, receiver：当前的代理对象</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#CB7676;"> const </span><span style="color:#BD976A;">mutableHandlers</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">, </span><span style="color:#BD976A;">key</span><span style="color:#666666;">, </span><span style="color:#BD976A;">receiver</span><span style="color:#666666;">) {</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 代表target已经是代理对象了</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#4D9375;">if</span><span style="color:#666666;"> (</span><span style="color:#BD976A;">key</span><span style="color:#666666;"> </span><span style="color:#CB7676;">===</span><span style="color:#666666;"> </span><span style="color:#BD976A;">ReactiveFlags</span><span style="color:#666666;">.</span><span style="color:#BD976A;">IS_REACTIVE</span><span style="color:#666666;">) </span><span style="color:#4D9375;">return</span><span style="color:#666666;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 依赖收集</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#80A665;">track</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">, </span><span style="color:#BD976A;">key</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// Reflect处理了this问题</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">r</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">Reflect</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">key</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">receiver</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 处理深度代理情况（只用用户取值的时候才会二次代理，不用担心性能）</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#4D9375;">if</span><span style="color:#666666;"> (</span><span style="color:#80A665;">isObject</span><span style="color:#666666;">(</span><span style="color:#BD976A;">r</span><span style="color:#666666;">)) {</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#4D9375;">return</span><span style="color:#666666;"> </span><span style="color:#80A665;">reactive</span><span style="color:#666666;">(</span><span style="color:#BD976A;">r</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">    }</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#4D9375;">return</span><span style="color:#666666;"> </span><span style="color:#BD976A;">r</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">  },</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">, </span><span style="color:#BD976A;">key</span><span style="color:#666666;">, </span><span style="color:#BD976A;">value</span><span style="color:#666666;">, </span><span style="color:#BD976A;">receiver</span><span style="color:#666666;">) {</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">oldValue</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">target</span><span style="color:#666666;">[</span><span style="color:#BD976A;">key</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// Reflect处理了this问题</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">r</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">Reflect</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">key</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">value</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">receiver</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#4D9375;">if</span><span style="color:#666666;"> (</span><span style="color:#BD976A;">oldValue</span><span style="color:#666666;"> </span><span style="color:#CB7676;">!==</span><span style="color:#666666;"> </span><span style="color:#BD976A;">value</span><span style="color:#666666;">) {</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 派发更新</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#80A665;">trigger</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">, </span><span style="color:#BD976A;">key</span><span style="color:#666666;">, </span><span style="color:#BD976A;">value</span><span style="color:#666666;">, </span><span style="color:#BD976A;">oldValue</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">    }</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#4D9375;">return</span><span style="color:#666666;"> </span><span style="color:#BD976A;">r</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">  },</span></span>
<span class="line"><span style="color:#666666;">};</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isObject</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@vue/shared</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">track</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">trigger</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./effect</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">reactive</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">ReactiveFlags</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./reactive</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// target：源目标对象, key：访问的属性, value：设置的新值, receiver：当前的代理对象</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#AB5959;"> const </span><span style="color:#B07D48;">mutableHandlers</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">, </span><span style="color:#B07D48;">key</span><span style="color:#999999;">, </span><span style="color:#B07D48;">receiver</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 代表target已经是代理对象了</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">if</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">key</span><span style="color:#999999;"> </span><span style="color:#AB5959;">===</span><span style="color:#999999;"> </span><span style="color:#B07D48;">ReactiveFlags</span><span style="color:#999999;">.</span><span style="color:#B07D48;">IS_REACTIVE</span><span style="color:#999999;">) </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 依赖收集</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#59873A;">track</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">, </span><span style="color:#B07D48;">key</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// Reflect处理了this问题</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">r</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">Reflect</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">key</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">receiver</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 处理深度代理情况（只用用户取值的时候才会二次代理，不用担心性能）</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">if</span><span style="color:#999999;"> (</span><span style="color:#59873A;">isObject</span><span style="color:#999999;">(</span><span style="color:#B07D48;">r</span><span style="color:#999999;">)) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> </span><span style="color:#59873A;">reactive</span><span style="color:#999999;">(</span><span style="color:#B07D48;">r</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> </span><span style="color:#B07D48;">r</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">, </span><span style="color:#B07D48;">key</span><span style="color:#999999;">, </span><span style="color:#B07D48;">value</span><span style="color:#999999;">, </span><span style="color:#B07D48;">receiver</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">oldValue</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">target</span><span style="color:#999999;">[</span><span style="color:#B07D48;">key</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// Reflect处理了this问题</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">r</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">Reflect</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">key</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">receiver</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">if</span><span style="color:#999999;"> (</span><span style="color:#B07D48;">oldValue</span><span style="color:#999999;"> </span><span style="color:#AB5959;">!==</span><span style="color:#999999;"> </span><span style="color:#B07D48;">value</span><span style="color:#999999;">) {</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 派发更新</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#59873A;">trigger</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">, </span><span style="color:#B07D48;">key</span><span style="color:#999999;">, </span><span style="color:#B07D48;">value</span><span style="color:#999999;">, </span><span style="color:#B07D48;">oldValue</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">    }</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#1E754F;">return</span><span style="color:#999999;"> </span><span style="color:#B07D48;">r</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">  },</span></span>
<span class="line"><span style="color:#999999;">};</span></span></code></pre></div><h3 id="effect-ts" tabindex="-1"><code>effect.ts</code> <a class="header-anchor" href="#effect-ts" aria-label="Permalink to &quot;\`effect.ts\`&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#CB7676;"> let </span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 当前的副作用函数 ReactiveEffect</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// 每次执行依赖收集之前执行依赖清理操作</span></span>
<span class="line"><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">cleanupEffect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#666666;">{</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">deps</span><span style="color:#CB7676;"> </span><span style="color:#666666;">}</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">for</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">i</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">&lt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">deps</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">i</span><span style="color:#CB7676;">++</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">deps</span><span style="color:#666666;">[</span><span style="color:#BD976A;">i</span><span style="color:#666666;">].</span><span style="color:#80A665;">delete</span><span style="color:#666666;">(</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#BD976A;">deps</span><span style="color:#666666;">.</span><span style="color:#B8A965;">length</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4C9A91;">0</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ReactiveEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">active</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">deps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[];</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 记录该副作用函数依赖哪一些依赖项</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 处理副作用函数嵌套问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// scheduler 调度执行，我们可以自己决定副作用函数执行的时机、次数、及执行方式</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">run</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 如果是非激活状态只要执行一次函数即可</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">active</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">try</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 其他情况下 意思着是激活的状态</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 记录当前的副作用函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 每次执行effect之前 应该清理一遍effect中依赖的所有属性</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">cleanupEffect</span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">finally</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">stop</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">active</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">cleanupEffect</span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 先将effect清除掉</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">active</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 在将其变成失活状态</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">effect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">options</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;"> =</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">_effect</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">ReactiveEffect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">options</span><span style="color:#666666;">.</span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">runner</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">.</span><span style="color:#BD976A;">run</span><span style="color:#666666;">.</span><span style="color:#80A665;">bind</span><span style="color:#666666;">(</span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 保证 _effect执行的时候this是当前的effect</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">runner</span><span style="color:#666666;">.</span><span style="color:#BD976A;">effect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">runner</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">// WeakMap: { Map: Set }</span></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#BD976A;">targetMap</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">WeakMap</span><span style="color:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * 依赖收集</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">target</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">key</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">returns</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">track</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">key</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 取值操作没有发生在effect中</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">depsMap</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">targetMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">depsMap</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">targetMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">depsMap</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Map</span><span style="color:#666666;">()));</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">dep</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">depsMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">key</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">depsMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">set</span><span style="color:#666666;">(</span><span style="color:#BD976A;">key</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Set</span><span style="color:#666666;">()));</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">trackEffects</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">trackEffects</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">shouldTrack</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> !</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">.</span><span style="color:#80A665;">has</span><span style="color:#666666;">(</span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 一个属性对应多个effect，一个effect对应着多种属性</span></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// 属性和effect的关系是多对对的关系</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">shouldTrack</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">dep</span><span style="color:#666666;">.</span><span style="color:#80A665;">add</span><span style="color:#666666;">(</span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">.</span><span style="color:#BD976A;">deps</span><span style="color:#666666;">.</span><span style="color:#80A665;">push</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 后续需要通过effect来清理的时候可以去使用</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#758575DD;">/**</span></span>
<span class="line"><span style="color:#758575DD;"> * 派发更新</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">target</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">key</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">newValue</span></span>
<span class="line"><span style="color:#758575DD;"> * </span><span style="color:#666666;">@</span><span style="color:#4D9375;">param</span><span style="color:#758575DD;"> </span><span style="color:#BD976A;">oldValue</span></span>
<span class="line"><span style="color:#758575DD;"> */</span></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">trigger</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">key</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">newValue</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">oldValue</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">depsMap</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">targetMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">target</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">depsMap</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">return</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">dep</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">depsMap</span><span style="color:#666666;">.</span><span style="color:#80A665;">get</span><span style="color:#666666;">(</span><span style="color:#BD976A;">key</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#80A665;">triggerEffects</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">triggerEffects</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">effects</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[...</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">effects</span><span style="color:#666666;">.</span><span style="color:#80A665;">forEach</span><span style="color:#666666;">((</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 每次调run方法都会重新依赖收集</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">scheduler</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#AB5959;"> let </span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 当前的副作用函数 ReactiveEffect</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// 每次执行依赖收集之前执行依赖清理操作</span></span>
<span class="line"><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">cleanupEffect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#999999;">{</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">deps</span><span style="color:#AB5959;"> </span><span style="color:#999999;">}</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">for</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">i</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#393A34;"> </span><span style="color:#999999;">&lt;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">deps</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">i</span><span style="color:#AB5959;">++</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">deps</span><span style="color:#999999;">[</span><span style="color:#B07D48;">i</span><span style="color:#999999;">].</span><span style="color:#59873A;">delete</span><span style="color:#999999;">(</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#B07D48;">deps</span><span style="color:#999999;">.</span><span style="color:#998418;">length</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#2F798A;">0</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ReactiveEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">active</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">deps</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">[];</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 记录该副作用函数依赖哪一些依赖项</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 处理副作用函数嵌套问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// scheduler 调度执行，我们可以自己决定副作用函数执行的时机、次数、及执行方式</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">run</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 如果是非激活状态只要执行一次函数即可</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">active</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">try</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 其他情况下 意思着是激活的状态</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 记录当前的副作用函数</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 每次执行effect之前 应该清理一遍effect中依赖的所有属性</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">cleanupEffect</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">finally</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">stop</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">active</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">cleanupEffect</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 先将effect清除掉</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">active</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 在将其变成失活状态</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">effect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#59873A;">options</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;"> =</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{})</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">_effect</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">ReactiveEffect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">options</span><span style="color:#999999;">.</span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">runner</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">.</span><span style="color:#B07D48;">run</span><span style="color:#999999;">.</span><span style="color:#59873A;">bind</span><span style="color:#999999;">(</span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 保证 _effect执行的时候this是当前的effect</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">runner</span><span style="color:#999999;">.</span><span style="color:#B07D48;">effect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">runner</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">// WeakMap: { Map: Set }</span></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#B07D48;">targetMap</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">WeakMap</span><span style="color:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * 依赖收集</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">target</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">key</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">returns</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">track</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">key</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 取值操作没有发生在effect中</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">depsMap</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">targetMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">depsMap</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">targetMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">depsMap</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Map</span><span style="color:#999999;">()));</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">dep</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">depsMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">key</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">depsMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">set</span><span style="color:#999999;">(</span><span style="color:#B07D48;">key</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Set</span><span style="color:#999999;">()));</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">trackEffects</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">trackEffects</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">shouldTrack</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> !</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">.</span><span style="color:#59873A;">has</span><span style="color:#999999;">(</span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 一个属性对应多个effect，一个effect对应着多种属性</span></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// 属性和effect的关系是多对对的关系</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">shouldTrack</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">dep</span><span style="color:#999999;">.</span><span style="color:#59873A;">add</span><span style="color:#999999;">(</span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">.</span><span style="color:#B07D48;">deps</span><span style="color:#999999;">.</span><span style="color:#59873A;">push</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 后续需要通过effect来清理的时候可以去使用</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#A0ADA0;">/**</span></span>
<span class="line"><span style="color:#A0ADA0;"> * 派发更新</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">target</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">key</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">newValue</span></span>
<span class="line"><span style="color:#A0ADA0;"> * </span><span style="color:#999999;">@</span><span style="color:#1E754F;">param</span><span style="color:#A0ADA0;"> </span><span style="color:#B07D48;">oldValue</span></span>
<span class="line"><span style="color:#A0ADA0;"> */</span></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">trigger</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">key</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">newValue</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">oldValue</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">depsMap</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">targetMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">target</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">depsMap</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">return</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">dep</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">depsMap</span><span style="color:#999999;">.</span><span style="color:#59873A;">get</span><span style="color:#999999;">(</span><span style="color:#B07D48;">key</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#59873A;">triggerEffects</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">triggerEffects</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">effects</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[...</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">effects</span><span style="color:#999999;">.</span><span style="color:#59873A;">forEach</span><span style="color:#999999;">((</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 每次调run方法都会重新依赖收集</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">scheduler</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="_4-4-分支切换与-cleanup" tabindex="-1">4.4 分支切换与 cleanup <a class="header-anchor" href="#_4-4-分支切换与-cleanup" aria-label="Permalink to &quot;4.4 分支切换与 cleanup&quot;">​</a></h3><p>如果在副作用函数内部出现三元表达式，会根据条件判断执行不同的代码分支。当条件判断依赖于响应式数据时，值的变化执行的表达式也会不同。这就是分支切换</p><p>而分支切换可能会遗留之前的副作用函数，而当前并不依赖，所以要在<strong>每次执行副作用函数之前清除当前副作用函数所依赖的副作用函数，在执行副作用函数重新进行依赖收集</strong></p><h3 id="_4-5-嵌套的-effect-与-effect-栈" tabindex="-1">4.5 嵌套的 effect 与 effect 栈 <a class="header-anchor" href="#_4-5-嵌套的-effect-与-effect-栈" aria-label="Permalink to &quot;4.5 嵌套的 effect 与 effect 栈&quot;">​</a></h3><p>副作用函数是可以被嵌套的，而内部的副作用函数应该只收集自身内部的响应式变量属性，相互并不影响</p><p>可以通过给 <strong>ReactiveEffect</strong> 添加一个属性 parent（默认是 <code>undefined</code>） 来记录自己的父级副作用函数</p><p>而在执行完当前的副作用函数将自己的父级返回给<code>activeEffect</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ReactiveEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">active</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">deps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[];</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 记录该副作用函数依赖哪一些依赖项</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 处理副作用函数嵌套问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">run</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 如果是非激活状态只要执行一次函数即可</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">active</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">try</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 其他情况下 意思着是激活的状态</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 记录当前的副作用函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 每次执行effect之前 应该清理一遍effect中依赖的所有属性</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">cleanupEffect</span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">finally</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 将自己的父级赋值给activeEffect</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ReactiveEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">active</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">deps</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">[];</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 记录该副作用函数依赖哪一些依赖项</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 处理副作用函数嵌套问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">run</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 如果是非激活状态只要执行一次函数即可</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">active</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">try</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 其他情况下 意思着是激活的状态</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 记录当前的副作用函数</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 每次执行effect之前 应该清理一遍effect中依赖的所有属性</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">cleanupEffect</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">finally</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 将自己的父级赋值给activeEffect</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="_4-6-避免无限递归循环" tabindex="-1">4.6 避免无限递归循环 <a class="header-anchor" href="#_4-6-避免无限递归循环" aria-label="Permalink to &quot;4.6 避免无限递归循环&quot;">​</a></h3><p>有可能会出现这种情况<strong>在当前执行的副作用函数去修改所依赖的响应式数据，那么又会触发派发更新函数，导致无限递归造成栈溢出问题</strong></p><p>解决方案：在派发更新函数 <code>trigger</code> 中执行副作用函数添加一个判断：<strong>如果派发更新所执行的副作用函数和当前执行的副作用函数是同一个，则不触发执行</strong></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">triggerEffects</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">effects</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[...</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">effects</span><span style="color:#666666;">.</span><span style="color:#80A665;">forEach</span><span style="color:#666666;">((</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 添加如下判断（只有不等于的时候情况会执行）</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">triggerEffects</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">effects</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[...</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">effects</span><span style="color:#999999;">.</span><span style="color:#59873A;">forEach</span><span style="color:#999999;">((</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 添加如下判断（只有不等于的时候情况会执行）</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="_4-7-调度执行" tabindex="-1">4.7 调度执行 <a class="header-anchor" href="#_4-7-调度执行" aria-label="Permalink to &quot;4.7 调度执行&quot;">​</a></h3><p>可调度性是响应式系统非常重要的特性。是所谓可调度，指的是当 trigger 触发副作用函数重新执行时，开发者有能力决定副作用函数执行的时机、次数以及方式</p><p>所以在 <code>effect</code> 函数添加第二个参数 <code>scheduler</code> 调度器</p><p><strong>effect.ts</strong></p><p><code>options.scheduler</code></p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ReactiveEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">active</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">deps</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">[];</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 记录该副作用函数依赖哪一些依赖项</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">null</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 处理副作用函数嵌套问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#666666;">  </span><span style="color:#758575DD;">// scheduler 调度执行，我们可以自己决定副作用函数执行的时机、次数、及执行方式</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">private</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#80A665;">run</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// 如果是非激活状态只要执行一次函数即可</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">active</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">try</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 其他情况下 意思着是激活的状态</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 记录当前的副作用函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 每次执行effect之前 应该清理一遍effect中依赖的所有属性</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">cleanupEffect</span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">fn</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">finally</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">parent</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">effect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">options</span><span style="color:#666666;">: </span><span style="color:#5DA994;">any</span><span style="color:#666666;"> =</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{})</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">_effect</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> new </span><span style="color:#80A665;">ReactiveEffect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">fn</span><span style="color:#666666;">,</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">options</span><span style="color:#666666;">.</span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">runner</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">.</span><span style="color:#BD976A;">run</span><span style="color:#666666;">.</span><span style="color:#80A665;">bind</span><span style="color:#666666;">(</span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">);</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 保证 _effect执行的时候this是当前的effect</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">runner</span><span style="color:#666666;">.</span><span style="color:#BD976A;">effect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">_effect</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">runner</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ReactiveEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">active</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">deps</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#999999;">[];</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 记录该副作用函数依赖哪一些依赖项</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">null</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 处理副作用函数嵌套问题</span></span>
<span class="line"></span>
<span class="line"><span style="color:#999999;">  </span><span style="color:#A0ADA0;">// scheduler 调度执行，我们可以自己决定副作用函数执行的时机、次数、及执行方式</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">private</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#59873A;">run</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// 如果是非激活状态只要执行一次函数即可</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">active</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">try</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 其他情况下 意思着是激活的状态</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 记录当前的副作用函数</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 每次执行effect之前 应该清理一遍effect中依赖的所有属性</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">cleanupEffect</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">fn</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">finally</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">parent</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">effect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">options</span><span style="color:#999999;">: </span><span style="color:#2E8F82;">any</span><span style="color:#999999;"> =</span><span style="color:#393A34;"> </span><span style="color:#999999;">{})</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">_effect</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> new </span><span style="color:#59873A;">ReactiveEffect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">fn</span><span style="color:#999999;">,</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">options</span><span style="color:#999999;">.</span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">runner</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">.</span><span style="color:#B07D48;">run</span><span style="color:#999999;">.</span><span style="color:#59873A;">bind</span><span style="color:#999999;">(</span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">);</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 保证 _effect执行的时候this是当前的effect</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">runner</span><span style="color:#999999;">.</span><span style="color:#B07D48;">effect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">_effect</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">runner</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><p>当响应式数据发生变化时，最后就会走到 <strong>triggerEffects</strong> 函数中</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">triggerEffects</span><span style="color:#666666;">(</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">const </span><span style="color:#BD976A;">effects</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">[...</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">];</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">effects</span><span style="color:#666666;">.</span><span style="color:#80A665;">forEach</span><span style="color:#666666;">((</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">activeEffect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">!==</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#CB7676;">!</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#BD976A;">scheduler</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 每次调run方法都会重新依赖收集</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">        </span><span style="color:#758575DD;">// 如果传递了 scheduler 则去执行用户的调度函数 而不去执行副作用函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">        </span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">scheduler</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">triggerEffects</span><span style="color:#999999;">(</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">const </span><span style="color:#B07D48;">effects</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">[...</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">];</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">effects</span><span style="color:#999999;">.</span><span style="color:#59873A;">forEach</span><span style="color:#999999;">((</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">activeEffect</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">!==</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#AB5959;">!</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#B07D48;">scheduler</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 每次调run方法都会重新依赖收集</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">        </span><span style="color:#A0ADA0;">// 如果传递了 scheduler 则去执行用户的调度函数 而不去执行副作用函数</span></span>
<span class="line"><span style="color:#393A34;">        </span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">scheduler</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div><h3 id="_4-8-计算属性-computed" tabindex="-1">4.8 计算属性 computed <a class="header-anchor" href="#_4-8-计算属性-computed" aria-label="Permalink to &quot;4.8 计算属性 computed&quot;">​</a></h3><p>计算属性的目的是根据状态衍生属性，我们希望这个属性有缓存功能，如果依赖的数据不变就不会重新计算</p><p>默认不执行,当我们取值时才会调用（具有缓存功能当取值多次只执行一次，只有当依赖的值发生变化才会重新执行）</p><p>计算属性 内部有个变量来控制是否重新执行 dirty（默认是 true，此时用户会执行此方法，拿到返回结果返回并且缓存起来，将 dirty 变为 false）。再次取值则 dirty 为 false 就去拿缓存的结果</p><p>如果依赖项发生变化，会再次更新 dirty 变为 true，再取值的时候就会执行拿到新值</p><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki vitesse-dark vp-code-dark"><code><span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">isFunction</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">@vue/shared</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#4D9375;">import</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">ReactiveEffect</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">trackEffects</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">triggerEffects</span><span style="color:#666666;">,</span></span>
<span class="line"><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">from</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C98A7D99;">&quot;</span><span style="color:#C98A7D;">./effect</span><span style="color:#C98A7D99;">&quot;</span><span style="color:#666666;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">const </span><span style="color:#80A665;">noop</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#666666;">()</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#CB7676;"> </span><span style="color:#666666;">{};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#CB7676;">class</span><span style="color:#DBD7CAEE;"> </span><span style="color:#5DA994;">ComputedRefImpl</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">dep</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">effect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">undefined</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">__v_isRef</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 意思着有这个属性，需要用 .value来取值</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">_dirty</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 默认是脏的</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#BD976A;">_value</span><span style="color:#666666;">;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#758575DD;">// 默认的缓存结果</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">constructor</span><span style="color:#666666;">(</span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getter</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">public</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">setter</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">    </span><span style="color:#758575DD;">// getter 函数里的响应式变量会被收集，当发生变化是就会执行调度函数里的内容</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">effect</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">ReactiveEffect</span><span style="color:#666666;">(</span><span style="color:#BD976A;">getter</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=&gt;</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 只有数据一遍，就把 _dirty改成true 下次取值value就又会重新执行</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">_dirty</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">true</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 触发执行计算属性该所依赖的副作用函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">triggerEffects</span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">dep</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 最后：达到响应式数据发生变化，下一次访问计算属性时数据发生更新，依赖计算属性的副作用函数也进行触发</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">});</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">get</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">value</span><span style="color:#666666;">()</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">activeEffect</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 如果有 activeEffect 意味着这个计算属性是在副作用函数调用的 我们需要让计算属性收集副作用函数</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#80A665;">trackEffects</span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">dep</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">||</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">dep</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">Set</span><span style="color:#666666;">()));</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">_dirty</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 取值才执行，并且把取到的值缓存起来</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">_value</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">effect</span><span style="color:#666666;">.</span><span style="color:#80A665;">run</span><span style="color:#666666;">();</span></span>
<span class="line"><span style="color:#666666;">      </span><span style="color:#758575DD;">// 意味着这去过了 被缓存了</span></span>
<span class="line"><span style="color:#DBD7CAEE;">      </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">_dirty</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">false</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#BD976A;">_value</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">set</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">value</span><span style="color:#666666;">(</span><span style="color:#BD976A;">newValue</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#C99076;">this</span><span style="color:#666666;">.</span><span style="color:#80A665;">setter</span><span style="color:#666666;">(</span><span style="color:#BD976A;">newValue</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#4D9375;">export</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">function</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">computed</span><span style="color:#666666;">(</span><span style="color:#BD976A;">getterOptions</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">onlyGetter</span><span style="color:#CB7676;"> </span><span style="color:#666666;">=</span><span style="color:#CB7676;"> </span><span style="color:#80A665;">isFunction</span><span style="color:#666666;">(</span><span style="color:#BD976A;">getterOptions</span><span style="color:#666666;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">getter</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#CB7676;">let </span><span style="color:#BD976A;">setter</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">if</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">(</span><span style="color:#BD976A;">onlyGetter</span><span style="color:#666666;">)</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">getter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getterOptions</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">setter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">noop</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span><span style="color:#DBD7CAEE;"> </span><span style="color:#4D9375;">else</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">{</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">getter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getterOptions</span><span style="color:#666666;">.</span><span style="color:#BD976A;">get</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">    </span><span style="color:#BD976A;">setter</span><span style="color:#DBD7CAEE;"> </span><span style="color:#666666;">=</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">getterOptions</span><span style="color:#666666;">.</span><span style="color:#BD976A;">set</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">||</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">noop</span><span style="color:#666666;">;</span></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#666666;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#DBD7CAEE;">  </span><span style="color:#4D9375;">return</span><span style="color:#DBD7CAEE;"> </span><span style="color:#CB7676;">new</span><span style="color:#DBD7CAEE;"> </span><span style="color:#80A665;">ComputedRefImpl</span><span style="color:#666666;">(</span><span style="color:#BD976A;">getter</span><span style="color:#666666;">,</span><span style="color:#DBD7CAEE;"> </span><span style="color:#BD976A;">setter</span><span style="color:#666666;">);</span></span>
<span class="line"><span style="color:#666666;">}</span></span></code></pre><pre class="shiki vitesse-light vp-code-light"><code><span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">isFunction</span><span style="color:#393A34;"> </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">@vue/shared</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#1E754F;">import</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">ReactiveEffect</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">trackEffects</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">triggerEffects</span><span style="color:#999999;">,</span></span>
<span class="line"><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">from</span><span style="color:#393A34;"> </span><span style="color:#B5695999;">&quot;</span><span style="color:#B56959;">./effect</span><span style="color:#B5695999;">&quot;</span><span style="color:#999999;">;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">const </span><span style="color:#59873A;">noop</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#999999;">()</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#AB5959;"> </span><span style="color:#999999;">{};</span></span>
<span class="line"></span>
<span class="line"><span style="color:#AB5959;">class</span><span style="color:#393A34;"> </span><span style="color:#2E8F82;">ComputedRefImpl</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">dep</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">effect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">undefined</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">__v_isRef</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 意思着有这个属性，需要用 .value来取值</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">_dirty</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 默认是脏的</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#B07D48;">_value</span><span style="color:#999999;">;</span><span style="color:#393A34;"> </span><span style="color:#A0ADA0;">// 默认的缓存结果</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">constructor</span><span style="color:#999999;">(</span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getter</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">public</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setter</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">    </span><span style="color:#A0ADA0;">// getter 函数里的响应式变量会被收集，当发生变化是就会执行调度函数里的内容</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">effect</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">ReactiveEffect</span><span style="color:#999999;">(</span><span style="color:#B07D48;">getter</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">=&gt;</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 只有数据一遍，就把 _dirty改成true 下次取值value就又会重新执行</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">_dirty</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">true</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 触发执行计算属性该所依赖的副作用函数</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">triggerEffects</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">dep</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 最后：达到响应式数据发生变化，下一次访问计算属性时数据发生更新，依赖计算属性的副作用函数也进行触发</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">});</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">get</span><span style="color:#393A34;"> </span><span style="color:#59873A;">value</span><span style="color:#999999;">()</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">activeEffect</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 如果有 activeEffect 意味着这个计算属性是在副作用函数调用的 我们需要让计算属性收集副作用函数</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#59873A;">trackEffects</span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">dep</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">||</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">dep</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">Set</span><span style="color:#999999;">()));</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">_dirty</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 取值才执行，并且把取到的值缓存起来</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">_value</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">effect</span><span style="color:#999999;">.</span><span style="color:#59873A;">run</span><span style="color:#999999;">();</span></span>
<span class="line"><span style="color:#999999;">      </span><span style="color:#A0ADA0;">// 意味着这去过了 被缓存了</span></span>
<span class="line"><span style="color:#393A34;">      </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">_dirty</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">false</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#B07D48;">_value</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">set</span><span style="color:#393A34;"> </span><span style="color:#59873A;">value</span><span style="color:#999999;">(</span><span style="color:#B07D48;">newValue</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#A65E2B;">this</span><span style="color:#999999;">.</span><span style="color:#59873A;">setter</span><span style="color:#999999;">(</span><span style="color:#B07D48;">newValue</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#1E754F;">export</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">function</span><span style="color:#393A34;"> </span><span style="color:#59873A;">computed</span><span style="color:#999999;">(</span><span style="color:#B07D48;">getterOptions</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">onlyGetter</span><span style="color:#AB5959;"> </span><span style="color:#999999;">=</span><span style="color:#AB5959;"> </span><span style="color:#59873A;">isFunction</span><span style="color:#999999;">(</span><span style="color:#B07D48;">getterOptions</span><span style="color:#999999;">);</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">getter</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#AB5959;">let </span><span style="color:#B07D48;">setter</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">if</span><span style="color:#393A34;"> </span><span style="color:#999999;">(</span><span style="color:#B07D48;">onlyGetter</span><span style="color:#999999;">)</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">getter</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getterOptions</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">setter</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">noop</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span><span style="color:#393A34;"> </span><span style="color:#1E754F;">else</span><span style="color:#393A34;"> </span><span style="color:#999999;">{</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">getter</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getterOptions</span><span style="color:#999999;">.</span><span style="color:#B07D48;">get</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">    </span><span style="color:#B07D48;">setter</span><span style="color:#393A34;"> </span><span style="color:#999999;">=</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">getterOptions</span><span style="color:#999999;">.</span><span style="color:#B07D48;">set</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">||</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">noop</span><span style="color:#999999;">;</span></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#999999;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#393A34;">  </span><span style="color:#1E754F;">return</span><span style="color:#393A34;"> </span><span style="color:#AB5959;">new</span><span style="color:#393A34;"> </span><span style="color:#59873A;">ComputedRefImpl</span><span style="color:#999999;">(</span><span style="color:#B07D48;">getter</span><span style="color:#999999;">,</span><span style="color:#393A34;"> </span><span style="color:#B07D48;">setter</span><span style="color:#999999;">);</span></span>
<span class="line"><span style="color:#999999;">}</span></span></code></pre></div>`,35),e=[o];function c(t,r,y,A,D,B){return a(),n("div",null,e)}const C=s(l,[["render",c]]);export{i as __pageData,C as default};
